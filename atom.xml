<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小孙同学</title>
  
  <subtitle>一个理性的浪漫主义者</subtitle>
  <link href="https://sunguoqi.com/atom.xml" rel="self"/>
  
  <link href="https://sunguoqi.com/"/>
  <updated>2022-08-11T15:42:12.390Z</updated>
  <id>https://sunguoqi.com/</id>
  
  <author>
    <name>小孙同学</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>冥冥之中，自有注定，但行好事，莫问前程！</title>
    <link href="https://sunguoqi.com/posts/2022811.html"/>
    <id>https://sunguoqi.com/posts/2022811.html</id>
    <published>2022-08-11T12:00:00.000Z</published>
    <updated>2022-08-11T15:42:12.390Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>世界上只有一种真正的英雄主义，就是认清了生活的真相后还依然热爱它——罗曼·罗兰</p></blockquote><p>&emsp;&emsp; 一直以来，我都是所谓的“小镇做题家”的身份（严谨来说应该是“小镇错题家”？）</p><p>&emsp;&emsp;父母在我小的时候，便在外打工，对我个人的要求也不是很高，有个学上，能顺利组建家庭，能在社会上混口饭吃就行。</p><p>&emsp;&emsp;由于家庭教育的缺失，我的成长经历大多都和学校相关。</p><p>&emsp;&emsp;小学一二年级是在村小学里度过的，几乎没怎么学习。我只记得当时有几个玩的比较好小伙伴，我们一起上学、放学、打打闹闹。</p><p>&emsp;&emsp;三年级的时候，我转到镇里的小学。人生地不熟，也没什么朋友，于是我便把注意力转到了学习上，开始认真读书。</p><p>&emsp;&emsp;印象很深刻，记得当时入学后的第一次考试（应该是月考），我考了全班第一。随后便得到了老师们的表扬。</p><p>&emsp;&emsp;小孩子喜总欢被表扬，对吧。于是，被表扬成为了我学习的动力。</p><p>&emsp;&emsp;虽说小学有在认真学习，但学的也仅仅是书本上的知识。转眼到了小升初的阶段，我格外局促。我不清楚县里有什么好的初中，也不知道接下来会经历什么…</p><p>&emsp;&emsp;当时主要有三所学校任我选择，一所是县里最好的私立中学——“晨光中学”，一所是县里相对差一点的公立中学——“县第二中学”，另一所是县里相对差好多的私立中学——“西城中学”（但里面有个实验班，说白了就是“矮子里面挑将军”）。</p><p>&emsp;&emsp;可当时，我并不清楚哪所学校好，便折中选择了“二中”。但等到开学时，发现从乡下到县城读书的学生要“特殊处理”，而且处理的比较混乱。于是，在一番纠纷后，我只剩下了两个选择。</p><p>&emsp;&emsp;父母问我选哪个，大多数人可能会选择前者，但冥冥中我却选择了后者。</p><p>&emsp;&emsp;交了学费，办了手续，我顺理成章的进入了所谓的“实验班”。</p><p>&emsp;&emsp;无独有偶，在入学后的第一次数学考试中，我又考了第一名（满分120分，老师一开始批的是满分，但后来发现改错了一题，又扣了三分。那题我至今还记得，问的是一个立体图形，主视图和侧视图均为□□□，那么这个立体图形至少由几个小立方体组成？）</p><p>&emsp;&emsp;初二的时候学校开设了物理这门课程，我对其非常感兴趣，因为我对这个世界的运行规律充满了无尽的好奇。</p><p>&emsp;&emsp;在第一次物理考试中，我又考了满分（但好像也仅有这一次满分了，后面总是差几分）。</p><p>&emsp;&emsp;由于对数学、物理的钟爱，我很少花时间去学习英语和文史，这也导致了我的偏科。</p><p>&emsp;&emsp;但初中阶段我对知识的学习仍仅停留在书本上。虽然期间也读过一些“课外书”，但并未从中汲取太多养分。</p><p>&emsp;&emsp;甚至当时觉得，凡是做和考试无关的事情，都是“不务正业”。现在回想起来，当时的想法是如此的荒唐（但很合理）。</p><p>&emsp;&emsp;看“课外书”的这段时间似乎是我为数不多能从学习中“跳”出来的机会。但在大环境的影响下，我还是屈服于了考试。</p><p>&emsp;&emsp;初三下学期的时候备战中考，学业压力较平常来说比较大，我便很少有时间再去思考别的事情了。</p><p>&emsp;&emsp;经历了中考备战的折磨，我考入了县里最好高中的“实验班”。</p><p>&emsp;&emsp;高一的时候总共有六个“实验班”，我在二班。</p><p>&emsp;&emsp;我在实验班的学习成绩并不突出，所以也很少获得老师们的关注（这点对我其实影响很大，因为我从小学到初中其实都是在老师的“关怀”下走过来的，但步入高中，有一种“失宠”的感觉）。</p><p>&emsp;&emsp;高一下学期分班，裁掉了两个实验班（先前六个，现在文科班一个，理科班三个，理科班包括一个“火箭班”和两个平行“实验班”）</p><p>&emsp;&emsp;有幸（或是不幸），我留在了平行实验班。</p><p>&emsp;&emsp;高中的学习生活真的很枯燥，我似乎成为了一个“学习机器”，眼里只有考试和分数，对知识的渴望也逐渐降低。</p><p>&emsp;&emsp;麻木的思想持续进化，高三的压力让我苦不堪言。</p><p>&emsp;&emsp;我的学习和生活状态变得越来越差，那段时间我眼里似乎看不到任何光芒，和周围人的关系也变得越来越淡，甚至对他们产生了敌意。</p><p>&emsp;&emsp;只有一种想法支撑着我完成了高考。</p><p>&emsp;&emsp;“考完就解放了，考完就可以离开这个鬼地方了，考完就可以不用再见这帮人了。”</p><p>&emsp;&emsp;后来，我像往常一样机械式的答完了题目，高考结束了。</p><p>&emsp;&emsp;哦，我恍然意识到，高考结束了。</p><p>&emsp;&emsp;我不知道结果如何，但总之我知道，我整个备考状态非常差。</p><p>&emsp;&emsp;后来的后来，我很消极。考试成绩出来后，我也不敢面对结果。</p><p>&emsp;&emsp;后来的某天深夜，我终于鼓起勇气查了成绩。</p><p>&emsp;&emsp;512分，勉强可以上个一本（当年安徽省高考一本录取分数线是496分）。</p><p>&emsp;&emsp;后来我面临了人生中的重要选择——高考志愿填报。</p><p>&emsp;&emsp;我时常怀疑高考制度以及志愿填报的合理性。在我对各类专业都不清楚的情况下，让我做出可以影响我未来几年甚至十几年发展的选择，这是否合理？（这里的合理性仅针对个体而言，合理永远是一个相对的概念。）</p><p>&emsp;&emsp;我不想思考太多，因为选择太多。</p><p>&emsp;&emsp;于是在我的高考志愿上胡乱填报了一通（当然学校有仔细考虑过，专业是随便填的）</p><p>&emsp;&emsp;尘埃落定。</p><p>&emsp;&emsp;我被安徽理工大学测绘学院测绘工程专业录取。（这个专业是我国家/地方专项志愿填报表中最后一个学校的最后一个专业。（注：这个不是一本志愿，属于提前批））</p><p>&emsp;&emsp;……</p><p>&emsp;&emsp;大学，何为大学？大学有什么意义？我想每个人脑海里都会有不同的答案。我觉得，大学只有等自己亲身经历后才能看清它的本质，赋予它存在的意义。</p><p>&emsp;&emsp;关于学业，关于生活，关于自己，关于社会，关于世界，关于现在，关于未来。。。有太多问题值得被思考，大学，我们有大把的时间归属于自己。</p><p>&emsp;&emsp;而遥想彼时，我懵懵懂懂、一无所知。我充满了好奇，怀揣着憧憬，跌跌撞撞地度过了大一上学期的生活。</p><p>&emsp;&emsp;新冠疫情爆发，大一下学期，我们被迫呆在家里上网课。为了更好的学习体验（实际上并没有），我拥有了一台属于我的笔记本电脑。</p><p>&emsp;&emsp;在家上网课的那段时间让我有了充足的时间去研究这个新奇的玩意儿（可能对于大多数人来说并不新奇）</p><p>&emsp;&emsp;转眼到了大二，经过了一学期的学习。我对测绘工程专业有了大致的认识，但说实话，我对其真的不感兴趣。</p><p>&emsp;&emsp;刚好那时有个转专业的机会，我便选择了我现在正在就读的这个专业——地理信息科学。</p><p>&emsp;&emsp;我当时转专业的原因很简单，就是因为不想学测绘工程。那时我对地理信息科学这个专业的了解也不是很多。</p><p>&emsp;&emsp;转专业后我对学业依旧不是很上心，迷茫中我又度过了一个学期。</p><p>&emsp;&emsp;大二上学期接近尾声的时候，我报名了一门考试，就是全国计算机等级考试。其实当时的想法很简单，就是想试一试。</p><p>&emsp;&emsp;于是，寒假的那段时间，我就呆在家里学习C语言方面的知识。</p><p>&emsp;&emsp;也正是那段时间，我慢慢接触到了Web开发，Linux运维，操作系统…后来我又自学了Python ，接触到了诸如像网络爬虫，数据可视化之类的知识。</p><p>&emsp;&emsp;大三上学期的时候，专业开设了一门课程叫《Python与地理处理》，在这门课程中，我第一次接触到了人工智能（以前只是听过）。诸如像监督学习、神经网络之类的知识，我对此产生了浓厚的兴趣。</p><p>&emsp;&emsp;在学习编程的过程中，我对“地理信息科学”这个专业也有了更多的思考。</p><p>&emsp;&emsp;地理信息科学，字面意义上可以理解为“地理+信息科学”。</p><p>&emsp;&emsp;从农业时代到工业时代再到如今的信息时代，人类从未停止对地球、对宇宙的探索。人类认识自然，改造自然，回馈自然。在信息时代，传统地学+信息科学必将会碰撞出新的火花，为人类对地球的探索开辟新的道路。</p><p>&emsp;&emsp;……</p><p>&emsp;&emsp;是这段经历，重新点燃了我对学习的热情，也让我在大三下学期的时候下定了决心准备考研。</p><p>&emsp;&emsp;但大学两年的迷离生活，让我的学习过程产生了断层（指的是对书本内容的学习，学编程类的知识和应试还是相差太多了，期末考试也是考前突击。）</p><p>&emsp;&emsp;后来我开始思考学习的本质。（人工智能科学里有一个概念，叫机器学习，机器都可以学习了，人的学习过程又遵循着哪些底层逻辑呢？）</p><p>&emsp;&emsp;零零碎碎读了一些文章，也付诸了一些行动。接触到一些除计算机科学外的心理学、脑科学、人类学、哲学等方面的知识。（后来发现有一个专门研究此类问题的学科门类，叫“认知科学”）。</p><p>&emsp;&emsp;从对人类“学习行为”表层特征的关注，到对其底层逻辑的探索，我收获颇多，但也侧面意识到了自己的“无知”。</p><p>&emsp;&emsp;抛开书本（应试）之外的世界，应当是更广阔的知识海洋。（成功上岸后，我想读更多的书，行更远的路。）</p><p>&emsp;&emsp;很庆幸，在如今这个快节奏的时代，我能有足够的时间停下来思考生活的本质。</p><p>&emsp;&emsp;18岁以前，我关心他人的看法，听从他人的安排，却陷在社会所规划的生活中苦苦挣扎。</p><p>&emsp;&emsp;今年，我21岁，我想…人应该为自己活一次！</p><p>&emsp;&emsp;生活步履不停，冥冥之中，自有注定，但行好事，莫问前程。</p><p>&emsp;&emsp;2023，考研上岸，未来等我！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;世界上只有一种真正的英雄主义，就是认清了生活的真相后还依然热爱它——罗曼·罗兰&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp; 一直以来，我都是所谓的“小镇做题家”的身份（严谨来说应该是“小镇错题家”？）&lt;/p&gt;
&lt;p&gt;&amp;ems</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://sunguoqi.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="考研" scheme="https://sunguoqi.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>人生21岁，版本更新日志！</title>
    <link href="https://sunguoqi.com/posts/20220225.html"/>
    <id>https://sunguoqi.com/posts/20220225.html</id>
    <published>2022-02-25T12:00:00.000Z</published>
    <updated>2022-02-26T07:28:39.924Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>热爱可抵漫长岁月！</p></blockquote><p>-【重构】对人生方向进行了重写，励志做一名优秀的程序猿。</p><p>-【优化】摒弃了一些不必要的圈子，结识了更多志同道合的朋友。</p><p>-【新增】新增考研计划，跨考计算机专业，院校待定。</p><p>-【修复】修复了一些已知Bug，优化了生活体验。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Processing 21% |█ █ ▎        |</span><br></pre></td></tr></table></figure><p>当我们出生时，我们被初始化。</p><p>外貌身材是我们的UI，生活是我们的核心业务。</p><p>在整个生命周期内，我们需要不断地学习，掌握各种技能，不断地增长自己的阅历，接触更多的人和事。</p><p>期间，我们会遇到各种各样的BUG，我们需要不停地调试，修复，优化甚至是重构。</p><p>但同时，这个世界中有我们喜欢的人，有我们所热爱的事情。</p><p>生活既是我们的甲方，又是我们的乙方。</p><p>善良正直，温柔体贴，风趣幽默，知足上进。。。</p><p>我们每个人都应该做自己的产品经理，清晰我们每一步前进的方向，不断地自我突破，自我迭代。</p><p>浑浑噩噩，当我意识到要切切实实规划自己未来的时候，已经21岁了。</p><p>但也还好，才21岁，未来充满着无限可能。</p><p>承蒙时光不弃，勇敢地去追逐自己的未来吧!</p><p>祝自己21岁生日快乐🎂，生活值得被热爱❤️</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202202251932444.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;热爱可抵漫长岁月！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-【重构】对人生方向进行了重写，励志做一名优秀的程序猿。&lt;/p&gt;
&lt;p&gt;-【优化】摒弃了一些不必要的圈子，结识了更多志同道合的朋友。&lt;/p&gt;
&lt;p&gt;-【新增】新增考研计划，跨考计算机专业</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://sunguoqi.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="生日快乐" scheme="https://sunguoqi.com/tags/%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>我终于学废用Fiddler抓包了！</title>
    <link href="https://sunguoqi.com/posts/fiddler.html"/>
    <id>https://sunguoqi.com/posts/fiddler.html</id>
    <published>2022-01-24T09:00:00.000Z</published>
    <updated>2022-04-04T02:52:52.546Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个项目引发的蝴蝶效应😥</p></blockquote><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;前几天在GitHub上面看到今日校园自动打卡的这样一个项目，真的太棒啦！</p><p>&emsp;&emsp;项目地址：<a href="https://github.com/CarltonHere/auto-cpdaily">https://github.com/CarltonHere/auto-cpdaily</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240119209.jpg"></p><p>&emsp;&emsp;粗略浏览了下项目源码，大致就是模拟登录，模拟提交，消息通知这样一个流程。但要写起来，其实还是需要学习很多知识的（反正我现阶段是写不出来，我太菜了）</p><p>&emsp;&emsp;写自动化脚本有点类似于写网络爬虫，主要思路就是模拟人的操作去完成某项重复性的任务。（网络爬虫本质上就是自动化程序）</p><p>&emsp;&emsp;写网络爬虫的大致思路就是<code>确定URL</code>、<code>获取响应数据</code>，<code>解析响应数据</code>，<code>持久化存储</code>。</p><p>&emsp;&emsp;在编写程序之前，我们首先要做的，就是搞清楚服务器和客户端之间的信息是如何传递的，数据何以请求，何以提交？需要构造哪些参数等等。</p><p>&emsp;&emsp;所以学会抓包是编写自动化程序的第一步。</p><h1 id="二、如何抓包"><a href="#二、如何抓包" class="headerlink" title="二、如何抓包"></a>二、如何抓包</h1><h2 id="1、Web浏览器"><a href="#1、Web浏览器" class="headerlink" title="1、Web浏览器"></a>1、Web浏览器</h2><p>&emsp;&emsp;PC端网页直接打开<code>F12</code>控制台，选择<code>network</code>选项卡就可以清晰的看到浏览器和服务器之间的<code>py交易</code>了。</p><p>&emsp;&emsp;选择相应的数据包，分析下各种参数就可以很顺利的进行下一步了。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240142807.jpg"></p><h2 id="2、手机APP"><a href="#2、手机APP" class="headerlink" title="2、手机APP"></a>2、手机APP</h2><p>&emsp;&emsp;随着移动互联网的兴起，有些产品没有开发网页端，无法使用浏览器开发工具进行抓包，所怎么办呢？？？</p><p>&emsp;&emsp;这是我这两天我学习的主要任务，学习之路甚是坎坷哇，简直是从入门到弃坑了。。。</p><h1 id="三、什么是Fiddler"><a href="#三、什么是Fiddler" class="headerlink" title="三、什么是Fiddler"></a>三、什么是Fiddler</h1><p>&emsp;&emsp;Fiddler是一个老牌的http代理调试工具。和Charles差不多，都是很强大的抓包测试工具。</p><p>&emsp;&emsp;下面是他的原理图，相当于在服务器和客户端正常对话时，在中间插了一刀，劫持了双方交流的信息。（何以称呼？代理商、中介、媒婆？悉听尊便。）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211432909.jpg"></p><h1 id="四、Fiddler的界面组成"><a href="#四、Fiddler的界面组成" class="headerlink" title="四、Fiddler的界面组成"></a>四、Fiddler的界面组成</h1><p>&emsp;&emsp;Fiddler的下载和安装这里就不做笔记了，不过值得注意的是，要下载Fiddler的经典版，新版的UI虽然好看，但是似乎功能还不太完善，而且是收费的。</p><p>&emsp;&emsp;下载之后打开Fiddler，纯英文的页面，不过。。。不汉化似乎也学的会。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211453468.jpg"></p><p>&emsp;&emsp;Fiddler主要有<code>菜单栏</code>、<code>工具栏</code>、<code>会话列表</code>、<code>功能页签</code>、<code>命令行</code>，<code>状态栏</code>六大块组成。</p><p>&emsp;&emsp;网上找点资料大致学一下就可以上手了。（英语能力够强的话，当然可以直接看官方文档）</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>对各选项卡的具体解释，摘自互联网，方便查阅。</span></div>    <div class="hide-content"><h2 id="1、菜单栏"><a href="#1、菜单栏" class="headerlink" title="1、菜单栏"></a>1、菜单栏</h2><h3 id="1-1、File菜单"><a href="#1-1、File菜单" class="headerlink" title="1.1、File菜单"></a>1.1、<strong>File菜单</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211506835.jpg"></p><p><code>Capture Traffic</code>：可以控制是否把Fiddler注册为系统代理。</p><p><code>New Viewer</code>：打开一个新的fiddler窗口。</p><p><code>Load Archive</code>：用于重新加载之前捕获的以SAZ文件格式保存的数据包。</p><p><code>Save</code>：支持以多种方式把数据包保存到文件中。</p><p><code>Import Sessions...</code>：支持导入从其他工具捕获的数据包，也支持导入以其他格式存储的数据包。</p><p><code>Export Sessions...</code>：把Fiddler捕捉到的回话以多种文件格式保存。</p><p><code>Exit</code>：取消把Fiddler注册为系统代理，并关闭Fiddler。</p><h3 id="1-2、Edit菜单"><a href="#1-2、Edit菜单" class="headerlink" title="1.2、Edit菜单"></a>1.2、Edit菜单</h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211511611.jpg"></p><p><code>Copy</code>：复制会话。</p><p><code>Remove</code>：删除会话。</p><p><code>Select All</code>：选择所有会话。</p><p><code>Undelete</code>：撤销删除会话。</p><p><code>Paste as Session</code>：把剪贴板上的内容粘贴成一个或多个模拟的会话。</p><p><code>Mark</code>：选择一种颜色标记选中会话。</p><p><code>Unlock for Editing</code>： 解锁会话。</p><p><code>Find Session...</code>：打开Find Session窗口，搜索捕获到的数据包。</p><h3 id="1-3、Rules菜单"><a href="#1-3、Rules菜单" class="headerlink" title="1.3、Rules菜单"></a>1.3、<strong>Rules菜单</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211517719.jpg"></p><p><code>Hide Image Request</code>：隐藏图片回话。</p><p><code>Hide CONNECTS</code>：隐藏连接通道回话。</p><p><code>Automatic Breakpoints</code>：自动在<strong>请求前</strong>或<strong>响应后</strong>设置断点。Ignore Image触发器控制这些断点是否作用于图片请求。</p><p><code>Customize Rules...</code>：打开Fiddler脚本编辑窗口。</p><p><code>Require Proxy Authentication</code>：要求客户端安装证书。该规则可以用于测试HTTP客户端，确保所有未提交Proxy-Authorization请求头的请求会返回HTTP/407响应码。</p><p><code>Apply GZIP Encoding</code>：只要请求包含具有gzip标识的Accept-Encoding请求头，就会对所有响应使用GZIP HTTP进行压缩（图片请求除外）。</p><p><code>Remove All Encoding</code>：删除所有请求和响应的HTTP内容编码和传输编码</p><p><code>Hide 304s</code>：隐藏响应为HTTP/304 Not Modified状态的所有回话。</p><p><code>Request Japanese Content</code>：选项会把所有请求的Accept-Encoding请求头设置或替换为ja标识，表示客户端希望响应以日语形式发送。</p><p><code>User-Agents</code>：把所有请求的User-Agent请求头设置或替换成指定值。</p><p><code>performance</code>：模拟弱网测试速度。</p><h3 id="1-4、Tools菜单"><a href="#1-4、Tools菜单" class="headerlink" title="1.4、Tools菜单"></a>1.4、<strong>Tools菜单</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211517689.jpg"></p><p><code>Options...</code>：打开Fiddler选项窗口。</p><p><code>WinINET Options...</code>：打开IE的Internet属性窗口</p><p><code>Clear WinINET Cache</code>：清空IE和其他应用中所使用的WinINET缓存中的所有文件。<br><code>Clear WinINET Cookies</code>：清空IE和其他应用中所发送的WinINET Cookie</p><p><code>TextWizard...</code>：选项会启动TextWizard窗口，对文本进行编码和解码。</p><p><code>Compare Session</code>：比较回话。</p><p><code>Reset Script</code>：重置Fiddler脚本。</p><p><code>Sandbox</code>：打开<a href="http://webdbg.com/sandbox/">http://webdbg.com/sandbox/</a></p><p><code>View IE Cache</code>:打开IE缓存窗口。</p><h3 id="1-5、View菜单"><a href="#1-5、View菜单" class="headerlink" title="1.5、View菜单"></a>1.5、<strong>View菜单</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211518811.jpg"></p><p><code>Show Toolbar</code>：控制Fiddler工具栏是否可见</p><p><code>Default Layout、Stacked Layout、Wide Layout</code>三种界面布局</p><p><code>Minimize to Tray</code>：最小化Fiddler到系统托盘（快捷键:CTRL+M ）</p><p><code>Squish Session List</code>：控制回话列表是否水平收缩。</p><p><code>AutoScroll Session list</code>：添加新的回话时，自动滚动到回话列表底部</p><h2 id="2、工具栏"><a href="#2、工具栏" class="headerlink" title="2、工具栏"></a>2、工具栏</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211524039.jpg"></p><ul><li>备注功能</li><li>重新发送请求。</li><li>删除请求</li><li>当有请求前断点时，点击去发送请求。</li><li>流模式。(默认是缓冲模式)</li><li>解码  </li><li>保持回话的数量。  </li><li>选择你想要抓包或者监听的程序</li><li>查找 </li><li>保存所有会话，文件名以.saz为扩展名</li><li>截图</li><li>计时器</li><li>快捷的打开IE浏览器</li><li>清除IE缓存</li><li>文本的编码解码工具</li><li>分离面板</li><li>MSDN查询</li><li>本机的信息</li></ul><h2 id="3、会话列表"><a href="#3、会话列表" class="headerlink" title="3、会话列表"></a>3、会话列表</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211533398.jpg"></p><ul><li>请求的ID编号</li><li> http响应状态码</li><li>会话使用的协议</li><li>请求发送到的服务器主机名</li><li>数据包在服务器中的路径和文件、响应body的字节数</li><li>响应头信息Cache-Control的值</li><li>响应头信息Content-Type的值</li><li>发起请求的本地windows进程</li><li>注释</li><li>自定义备注</li></ul><h2 id="4、功能页签"><a href="#4、功能页签" class="headerlink" title="4、功能页签"></a><strong>4、功能页签</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211539790.jpg"></p><ul><li><strong>Statistics</strong></li></ul><p>通过该页签，用户可以通过选择多个会话来得到这几个会话的总的信息统计。</p><ul><li><strong>inspectors</strong></li></ul><p>提供headers、textview、hexview,Raw等多种方式查看一条http请求的请求和响应，它分为上下两部分：上部分为请求展示，下部分为响应展示。</p><ul><li><strong>AutoResponse</strong></li></ul><p>它可以抓取在线页面保存到本地进行调试，大大减少了在线调试的困难，可以让我们修改服务器端返回的数据，例如让返回都是404的数据包读取本地文件作为返回内容。</p><ul><li><strong>composer</strong></li></ul><p>支持手动构建和发送HTTP，HTTPS和FTP请求，还可以从回话列表中拖曳回话，把它放到composer选项卡中，当我们点击Execute按钮时则把请求发送到服务器端。</p><ul><li><strong>FiddlerScripts</strong></li></ul><p>打开Fiddler脚本编辑。</p><ul><li>log</li></ul><p>打印日志</p><ul><li><strong>Filters</strong></li></ul><p>过滤器可以对左侧的数据流列表进行过滤，我们可以标记、修改或隐藏某些特征的数据流。</p><ul><li><strong>Timeline</strong></li></ul><p>时间轴，也称为Fiddler的瀑布图，展示网络请求时间的功能。每个网络请求都会经历域名解析、建立连接、发送请求、接受数据等阶段。把多个请求以时间作为X轴，用图表的形式展现出来，就形成了瀑布图。在左侧会话窗口点击一个或多个回话，Timeline 便会显示指定内容从服务端传输到客户端的时间。</p><h2 id="5、命令行工具"><a href="#5、命令行工具" class="headerlink" title="5、命令行工具"></a><strong>5、命令行工具</strong></h2><p><strong>Fiddler命令行可以输入命令操作回话列表,常见命令有：</strong></p><p><code>help</code> 打开官方的使用页面介绍，所有的命令都会列出来。</p><h2 id="6、状态栏"><a href="#6、状态栏" class="headerlink" title="6、状态栏"></a><strong>6、状态栏</strong></h2><ul><li>显示的Fiddler是否处于捕捉状态(开启/关闭状态)，可以点击该区域切换。</li><li>显示当前捕捉哪些进程。</li><li>显示当前断点设置状态，通过鼠标点击切换。有三种：</li><li>显示当前共捕获了多少回话(如：300，表示共捕获了300个会话，如：10/300，表示当前选择10个会话，共捕获300个会话)。</li><li>第五区块，描述当前状态。</li></ul></div></div><h1 id="五、PC端抓包快速上手"><a href="#五、PC端抓包快速上手" class="headerlink" title="五、PC端抓包快速上手"></a>五、PC端抓包快速上手</h1><h2 id="1、配置HTTPS代理"><a href="#1、配置HTTPS代理" class="headerlink" title="1、配置HTTPS代理"></a>1、配置HTTPS代理</h2><p>&emsp;&emsp;Fiddler默认只能抓取http协议的数据包，我们需要配置下https的SSL证书。</p><p>&emsp;&emsp;打开Fiddler，菜单栏：Tools –&gt; Fiddler Options 打开fiddler配置。</p><p>&emsp;&emsp;打开 HTTPS 配置项，勾选<code>Capture HTTPS CONNECTs</code>和<code>Decrypt HTTPS traffic</code>，执行下<code>actions</code>然后点击<code>OK</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211556542.jpg"></p><h2 id="2、篡改请求数据"><a href="#2、篡改请求数据" class="headerlink" title="2、篡改请求数据"></a>2、篡改请求数据</h2><p>&emsp;&emsp;<code>效果</code>：输入百度的域名，得到的是腾讯主页的相应（修改了请求的主机地址）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240225741.jpg"></p><p>1、在请求前拦截数据</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240233765.jpg"></p><p>2、在浏览器地址栏输入<code>www.baidu.com</code></p><p>&emsp;&emsp;回车之后页面会持续加载（转圈圈），因为数据被Fiddler劫持了。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240233707.jpg"></p><p>3、选中该数据包，修改请求的主机地址为<code>qq.com</code>，然后点击<code>go</code>放行数据。</p><p>&emsp;&emsp;同理可修改其他请求头和请求体数据。</p><h2 id="3、篡改响应数据"><a href="#3、篡改响应数据" class="headerlink" title="3、篡改响应数据"></a>3、篡改响应数据</h2><p>&emsp;&emsp;<code>效果</code>：访问<code>www.baidu.com</code>，<code>百度一下</code>变成<code>让百度两下</code>（右键审查元素也可以随意更改响应内容，这里意在演示在Fiddler中篡改响应内容）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240249881.jpg"></p><p>1、劫持响应数据</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240251761.jpg"></p><p>2、修改响应数据</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240250384.jpg"></p><h2 id="4、抓取B站用户登录的数据包"><a href="#4、抓取B站用户登录的数据包" class="headerlink" title="4、抓取B站用户登录的数据包"></a>4、抓取B站用户登录的数据包</h2><p>1、设置过滤器，只抓取请求URL包含<code>bilibili.com</code>的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211608599.jpg"></p><p>2、打开浏览器，在即将点击登录按钮的页面停下来，清空会话里的所有数据，然后点击登录按钮。（当然可以打断点，我玩的还不溜）</p><p>3、在会话列表中寻找提交数据的那次会话，选中它，在右边查看数据。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211613875.jpg"></p><p>4、可以看清提交密码事附带的各个参数了，其中密码被加密了。</p><p>&emsp;&emsp;复制登录的URL，分析加密参数，测试提交数据，便可编写模拟登录的任务。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211621031.jpg"></p><h1 id="六、APP抓包从入门到放弃"><a href="#六、APP抓包从入门到放弃" class="headerlink" title="六、APP抓包从入门到放弃"></a>六、APP抓包从入门到放弃</h1><h2 id="1、常规操作"><a href="#1、常规操作" class="headerlink" title="1、常规操作"></a>1、常规操作</h2><h3 id="1-1、允许远程连接"><a href="#1-1、允许远程连接" class="headerlink" title="1.1、允许远程连接"></a>1.1、允许远程连接</h3><p>&emsp;&emsp;打开<code>tools</code>选择<code>options</code>，选择连接选项卡，勾选允许远程连接，注意这里的端口号，后面会用到。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211626886.jpg"></p><h3 id="1-2、查看本机电脑IP地址"><a href="#1-2、查看本机电脑IP地址" class="headerlink" title="1.2、查看本机电脑IP地址"></a>1.2、查看本机电脑IP地址</h3><p>&emsp;&emsp;打开Windows终端，输入以下指令查看本机IP。</p><p>&emsp;&emsp;（<code>注</code>：截图中有误，是适配器的IP地址，似乎都是192.168开头的）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211634267.jpg"></p><h3 id="1-3、电脑和手机连接同一局域网"><a href="#1-3、电脑和手机连接同一局域网" class="headerlink" title="1.3、电脑和手机连接同一局域网"></a>1.3、电脑和手机连接同一局域网</h3><h3 id="1-4、配置手机WLAN的代理"><a href="#1-4、配置手机WLAN的代理" class="headerlink" title="1.4、配置手机WLAN的代理"></a>1.4、配置手机WLAN的代理</h3><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201211638404.jpg"></p><h3 id="1-5、安装SSL证书"><a href="#1-5、安装SSL证书" class="headerlink" title="1.5、安装SSL证书"></a>1.5、安装SSL证书</h3><p>&emsp;&emsp;在手机浏览器上输入<code>IP+端口</code>，如果正常的话就可以打开Fiddler的页面了，下载并安装证书（安装证书需要在设置中安装）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240257406.jpg"></p><div class="note danger simple"><p>浏览器和大多数应用都无法连接网络</p></div><h2 id="2、查找资料-amp-求助大佬"><a href="#2、查找资料-amp-求助大佬" class="headerlink" title="2、查找资料&amp;求助大佬"></a>2、查找资料&amp;求助大佬</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240303579.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240307198.png"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240312389.png"></p><h2 id="3、继续折腾"><a href="#3、继续折腾" class="headerlink" title="3、继续折腾"></a>3、继续折腾</h2><h3 id="3-1、刷Magisk面具"><a href="#3-1、刷Magisk面具" class="headerlink" title="3.1、刷Magisk面具"></a>3.1、刷Magisk面具</h3><p>&emsp;&emsp;<a href="https://magiskcn.com/">https://magiskcn.com/</a></p><p>&emsp;&emsp;依据教程（针对于MIUI）——&gt;去官方申请开发版系统——&gt;解锁手机BootLoader——&gt;下载系统完整安装包——&gt;提取boot.img文件——&gt;在面具中手动安装boot.img——&gt;生成magisk_patched…——&gt;上传至电脑，在Fastboot模式下，刷入面具。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240320038.jpg"></p><p>&emsp;&emsp;小心卡米或者变砖，血泪教训哇，呜呜呜。</p><p>&emsp;&emsp;（第一次尝试刷入Magisk卡住了，一直停留在小米logo的那个界面，进不去系统，折腾了几个小时，不过还好，学会了刷机。。。狗头。。。）</p><h3 id="3-2、安装LSPosed框架"><a href="#3-2、安装LSPosed框架" class="headerlink" title="3.2、安装LSPosed框架"></a>3.2、安装LSPosed框架</h3><p>&emsp;&emsp;在面具中安装图示的两个模块，然后桌面上就会多一个LSPosed的软件。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240331444.jpg"></p><h3 id="3-3、安装JustTrustMe模块"><a href="#3-3、安装JustTrustMe模块" class="headerlink" title="3.3、安装JustTrustMe模块"></a>3.3、安装JustTrustMe模块</h3><p>&emsp;&emsp;安装JustTrustMe模块，设置作用域。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240331118.jpg"></p><h3 id="3-4、可抓取大部分应用"><a href="#3-4、可抓取大部分应用" class="headerlink" title="3.4、可抓取大部分应用"></a>3.4、可抓取大部分应用</h3><p>&emsp;&emsp;有些APP的防护措施太强了，虽然kill掉了证书强校验，但APP还有其他的检测机制，检测到环境异常就会直接闪退。对该软件隐藏Magisk可以破解某些APP的防护，抓取大部分APP的数据包。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201240334315.png"></p><h2 id="4、APP抓包总结"><a href="#4、APP抓包总结" class="headerlink" title="4、APP抓包总结"></a>4、APP抓包总结</h2><p>&emsp;&emsp;https协议验证服务器身份的方式通常有三种</p><p>&emsp;&emsp;一是根据浏览器或者说操作系统（Android）自带的证书链；二是使用自签名证书；三是自签名证书加上SSL Pinning特性。</p><p>&emsp;&emsp;第一种需要到知名证书机构购买证书，需要一定预算。第二种多见于内网使用。第三种在是安全性最高的，但是需要浏览器插件或客户端使用了SSL Pinning特性。</p><p>&emsp;&emsp;在低版本中APP均不会使用自定义的SSL证书，所以就可以正常抓取。而高版本则需要使用一些操作绕过证书强校验才可以抓取。</p><p>&emsp;&emsp;同时，一些APP为了防止数据被抓取，通常具备很强的反爬机制。这涉及到安卓逆向，数据加密，网络攻防等领域。</p><h1 id="七、后记"><a href="#七、后记" class="headerlink" title="七、后记"></a>七、后记</h1><p>&emsp;&emsp;一个项目引发的蝴蝶效应，过程比较艰辛，但收获也颇多，心累。。。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201241655128.jpg"></p>]]></content>
    
    
    <summary type="html">使用Fiddler抓取数据包</summary>
    
    
    
    <category term="网络爬虫学习笔记" scheme="https://sunguoqi.com/categories/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="爬虫" scheme="https://sunguoqi.com/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="抓包" scheme="https://sunguoqi.com/tags/%E6%8A%93%E5%8C%85/"/>
    
    <category term="Fiddler" scheme="https://sunguoqi.com/tags/Fiddler/"/>
    
  </entry>
  
  <entry>
    <title>零基础快速上手云服务器</title>
    <link href="https://sunguoqi.com/posts/4243.html"/>
    <id>https://sunguoqi.com/posts/4243.html</id>
    <published>2022-01-09T04:00:00.000Z</published>
    <updated>2022-05-11T01:10:15.150Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>好好学习，天天向上！</p></blockquote><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;最近受邀参加了腾讯云社区的自媒体分享计划，获得了100元的代金券。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090113825.jpg"></p><p>&emsp;&emsp;代金券似乎只能花在云服务器和云硬盘上，可是。。我已经有俩服务器了。。。</p><p>&emsp;&emsp;反正不花白不花，于是我又花了11块大洋买了俩月的服务器，送给了朋友，顺便写下了这篇教程。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090119076.jpg"></p><h1 id="二、什么是服务器"><a href="#二、什么是服务器" class="headerlink" title="二、什么是服务器"></a>二、什么是服务器</h1><p>&emsp;&emsp;服务器英文名称为“Server”，指的是网络环境下为客户机(Client)提供某种服务的专用计算机。</p><p>&emsp;&emsp;服务器一定程度上可以等同于我们正在使用的电脑，不过服务器的处理速度和系统可靠性都要比普通PC要高得多，因为服务器是一般是需要24小时连续不间断的工作的。普通PC死机了大不了重启，数据的丢失损失也仅限于单台电脑。服务器则完全不同，许多重要的数据都保存在服务器上，许多网络服务都在服务器上运行，一旦服务器发生故障，将会丢失大量的数据，造成的损失是难以估计的。</p><p>&emsp;&emsp;因此大多数中小型企业或者个人都不会选择自建机房，而是选择更加省心的云服务器，国内主流的云服务器厂商主要有<strong>阿里云、腾讯云、百度云、华为云</strong>等等。</p><p>&emsp;&emsp;服务器所使用的操作系统一般是Linux，因为Linux系统开源免费成本低，稳定性高。</p><h1 id="三、购买一台云服务器"><a href="#三、购买一台云服务器" class="headerlink" title="三、购买一台云服务器"></a>三、购买一台云服务器</h1><p>&emsp;&emsp;关于云服务的购买这里就不过多阐述了，我目前主要使用的是轻量应用服务器，是双十一腾讯云做活动的时候买的，198元三年，2核4G，硬盘80G，非常的良心。</p><p>&emsp;&emsp;值得注意的是，我们在购买服务器的时候，系统会让我们选择服务器的系统，一般选择Linux的系统，不过Linux系统有很多发行版，本次教程所使用的系统是<code>Ubuntu Server 20.04 LTS 64位</code></p><h1 id="四、重置实例密码"><a href="#四、重置实例密码" class="headerlink" title="四、重置实例密码"></a>四、重置实例密码</h1><p>&emsp;&emsp;当我们完成服务器的购买后，进入我们的腾讯云控制台，点击实例选项卡便可以管理我们的服务器。（轻量应用服务器界面与此有所不同）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090158063.jpg"></p><p>&emsp;&emsp;拿到服务器后，我们首先要做的就是重置服务器的密码，我们SSH远程登录的时候需要使用它（云服务器实例在初始化的时候未设置密码，这里的重置密码等同于添加密码）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090147015.jpg"></p><p>&emsp;&emsp;<code>值得注意的是：</code>这里重置密码重置的只能重置<code>Ubuntu</code>用户的密码，而不是<code>root</code>用户，应该是腾讯云出于安全性的考虑，默认不能登录<code>root</code>账户。（普通用户和root用户的权限不同，root用户是系统的超级管理员，拥有最高权限。）</p><h1 id="五、远程SSH登录服务器"><a href="#五、远程SSH登录服务器" class="headerlink" title="五、远程SSH登录服务器"></a>五、远程SSH登录服务器</h1><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090201252.jpg"></p><p>&emsp;&emsp;XSHELL是一款优秀的SSH客户机，可以帮助我们更方便的远程操作服务器。</p><p>&emsp;&emsp;官网地址：<a href="https://www.xshell.com/zh/xshell/">https://www.xshell.com/zh/xshell/</a></p><p>&emsp;&emsp;填写姓名和邮箱，下载家庭/学校免费版即可。</p><p>&emsp;&emsp;下载链接：<a href="https://www.xshell.com/zh/free-for-home-school/">https://www.xshell.com/zh/free-for-home-school/</a></p><p>&emsp;&emsp;成功安装xshell 后打开软件后，新建一个会话。主机名输入我们的公网IP地址（IP地址在腾讯云控制台实例选项卡下可以看到）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090212946.jpg"></p><p>&emsp;&emsp;新建一个会话后我们打开此会话，系统会要求我们登录，登录用户名填写<code>ubuntu</code>后确认。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090214396.jpg"></p><p>&emsp;&emsp;之后系统会让我们填写密码，密码为上一步重置的密码。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090215861.jpg"></p><p>&emsp;&emsp;登录成功。（您的界面可能和我不一样，因为我做了个性化的修改）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090216725.jpg"></p><h1 id="六、登录root用户"><a href="#六、登录root用户" class="headerlink" title="六、登录root用户"></a>六、登录root用户</h1><h2 id="1、修改root密码"><a href="#1、修改root密码" class="headerlink" title="1、修改root密码"></a>1、修改root密码</h2><p>&emsp;&emsp;注意：输入密码时，屏幕上无回显。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:~<span class="variable">$</span> sudo passwd root</span><br><span class="line">New password: </span><br><span class="line">Retype new password: </span><br><span class="line">passwd: password updated successfully</span><br><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:~<span class="variable">$</span> </span><br></pre></td></tr></table></figure><h2 id="2、切换root用户"><a href="#2、切换root用户" class="headerlink" title="2、切换root用户"></a>2、切换root用户</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:~<span class="variable">$</span> sudo <span class="literal">-i</span></span><br><span class="line">root@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><h1 id="七、修改主机名"><a href="#七、修改主机名" class="headerlink" title="七、修改主机名"></a>七、修改主机名</h1><p>&emsp;&emsp;云服务器的主机名默认是<code>VM-0-6-ubuntu</code>其实这个东西是可以改的，比如下面的操作就把主机名改成了<code>ubuntu</code></p><h2 id="1、查看主机名"><a href="#1、查看主机名" class="headerlink" title="1、查看主机名"></a>1、查看主机名</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:/root<span class="variable">$</span> hostnamectl</span><br><span class="line">   <span class="keyword">Static</span> hostname: VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span></span><br><span class="line">         Icon name: computer<span class="literal">-vm</span></span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: abf******************<span class="number">0</span>a4efa7</span><br><span class="line">           Boot ID: <span class="number">00</span>e******************<span class="number">68</span>bf6</span><br><span class="line">    Virtualization: kvm</span><br><span class="line">  Operating System: Ubuntu <span class="number">20.04</span> LTS</span><br><span class="line">            Kernel: Linux <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-90</span><span class="literal">-generic</span></span><br><span class="line">      Architecture: x86<span class="literal">-64</span></span><br><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:/root<span class="variable">$</span> </span><br></pre></td></tr></table></figure><h2 id="2、修改主机名"><a href="#2、修改主机名" class="headerlink" title="2、修改主机名"></a>2、修改主机名</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:/root<span class="variable">$</span> sudo hostnamectl <span class="built_in">set-hostname</span> Ubuntu</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、重启"><a href="#3、重启" class="headerlink" title="3、重启"></a>3、重启</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:/root<span class="variable">$</span> sudo reboot</span><br><span class="line">ubuntu@VM<span class="literal">-0</span><span class="literal">-6</span><span class="literal">-ubuntu</span>:/root<span class="variable">$</span> Connection closing...Socket close.</span><br><span class="line"></span><br><span class="line">Connection closed by foreign host.</span><br><span class="line"></span><br><span class="line">Disconnected from remote host(<span class="number">175.27</span>.<span class="number">189.244</span>) at <span class="number">02</span>:<span class="number">37</span>:<span class="number">51</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">Type</span> `help<span class="string">&#x27; to learn how to use Xshell prompt.</span></span><br><span class="line"><span class="string">[I:\~]$ </span></span><br></pre></td></tr></table></figure><h2 id="4、重新连接会话"><a href="#4、重新连接会话" class="headerlink" title="4、重新连接会话"></a>4、重新连接会话</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Ubuntu <span class="number">20.04</span> LTS (GNU/Linux <span class="number">5.4</span>.<span class="number">0</span><span class="literal">-90</span><span class="literal">-generic</span> x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Sun <span class="number">09</span> Jan <span class="number">2022</span> <span class="number">02</span>:<span class="number">39</span>:<span class="number">05</span> AM CST</span><br><span class="line"></span><br><span class="line">  System load:  <span class="number">0.46</span>              Processes:             <span class="number">110</span></span><br><span class="line">  Usage of /:   <span class="number">7.8</span>% of <span class="number">49.16</span>GB   Users logged <span class="keyword">in</span>:       <span class="number">0</span></span><br><span class="line">  Memory usage: <span class="number">18</span>%               IPv4 address <span class="keyword">for</span> eth0: <span class="number">10.206</span>.<span class="number">0.6</span></span><br><span class="line">  Swap usage:   <span class="number">0</span>%</span><br><span class="line"></span><br><span class="line"> * Super<span class="literal">-optimized</span> <span class="keyword">for</span> small spaces - read how we shrank the memory</span><br><span class="line">   footprint of MicroK8s to make it the smallest full K8s around.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/blog/microk8s<span class="literal">-memory</span><span class="literal">-optimisation</span></span><br><span class="line"></span><br><span class="line">Last login: Sun Jan  <span class="number">9</span> <span class="number">02</span>:<span class="number">25</span>:<span class="number">03</span> <span class="number">2022</span> from <span class="number">36.7</span>.<span class="number">50.95</span></span><br><span class="line">ubuntu@Ubuntu:~<span class="variable">$</span></span><br></pre></td></tr></table></figure><h1 id="八、安装宝塔面板"><a href="#八、安装宝塔面板" class="headerlink" title="八、安装宝塔面板"></a>八、安装宝塔面板</h1><p>&emsp;&emsp;宝塔Linux面板是提升运维效率的服务器管理软件，对于不熟悉Linux指令的小白来说，宝塔面板真的很实用。</p><p>&emsp;&emsp;官网：<a href="https://www.bt.cn/download/linux.html">https://www.bt.cn/download/linux.html</a></p><h2 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> install.sh http://download.bt.cn/install/<span class="built_in">install-ubuntu_6</span>.<span class="number">0</span>.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在shell中执行这样一个命令，输入<code>y </code>确认安装，然后等待。。。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Congratulations! Installed successfully!</span><br><span class="line">==================================================================</span><br><span class="line">外网面板地址: http://你的公网IP:<span class="number">8888</span>/密钥</span><br><span class="line">内网面板地址: http://你的内网IP:<span class="number">8888</span>/密钥</span><br><span class="line">username: 用户名</span><br><span class="line">password: 密码</span><br><span class="line"><span class="keyword">If</span> you cannot access the panel,</span><br><span class="line">release the following panel port [<span class="number">8888</span>] <span class="keyword">in</span> the security <span class="built_in">group</span></span><br><span class="line">若无法访问面板，请检查防火墙/安全组是否有放行面板[<span class="number">8888</span>]端口</span><br><span class="line">==================================================================</span><br><span class="line">Time consumed: <span class="number">1</span> M</span><br></pre></td></tr></table></figure><h2 id="2、开放防火墙8888端口"><a href="#2、开放防火墙8888端口" class="headerlink" title="2、开放防火墙8888端口"></a>2、开放防火墙8888端口</h2><p>&emsp;&emsp;进入腾讯云控制台，管理云服务器实例，开放安全组<code>8888</code>端口，协议为TCP</p><h2 id="3、访问宝塔面板"><a href="#3、访问宝塔面板" class="headerlink" title="3、访问宝塔面板"></a>3、访问宝塔面板</h2><p>&emsp;&emsp;在你的本机浏览器上，输入宝塔面板的地址: <code>http://你的公网IP:8888/密钥</code></p><p>&emsp;&emsp;输入用户名和密码登陆即可。</p><p>&emsp;&emsp;注册绑定账号</p><p>&emsp;&emsp;剩下的内容自己去探索吧！</p><h1 id="九、后记"><a href="#九、后记" class="headerlink" title="九、后记"></a>九、后记</h1><p>&emsp;&emsp;购买云服务器可以学习Linux操作系统，学习项目运维管理知识，搭建个人网站，部署自己的课设项目等等，还是很不错滴，不过零基础上手云服务器的确有点小难度，很多内容还是要靠自己慢慢学习哇！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;好好学习，天天向上！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;最近受邀参</summary>
      
    
    
    
    <category term="Linux基础学习笔记" scheme="https://sunguoqi.com/categories/Linux%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://sunguoqi.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>给GitHub首页添加一个有趣的贪吃蛇小动画</title>
    <link href="https://sunguoqi.com/posts/33414.html"/>
    <id>https://sunguoqi.com/posts/33414.html</id>
    <published>2022-01-08T16:00:00.000Z</published>
    <updated>2022-02-02T11:23:44.181Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>美化永无止境！</p></blockquote><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;之前写过一篇教程，是关于美化 GitHub 首页的，似乎挺受欢迎的！<a class="btn-beautify button--animated blue larger" href="https://sunguoqi.com/posts/36473.html"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201090032992.jpg"></p><p>&emsp;&emsp;不过当时还没接触过 <code>Github Actions</code>，大多数小部件都是利用大佬们提供的 API 实现的。虽然也可以很酷，但其实…我们还有更高级的玩法！</p><h1 id="二、Github-Actions"><a href="#二、Github-Actions" class="headerlink" title="二、Github Actions"></a>二、Github Actions</h1><p>&emsp;&emsp;GitHub Actions 是 GitHub 官方推出的<code>持续集成/部署</code>模块服务（CI/CD）。GitHub Actions 自带云环境运行，包括私有仓库也可以享用，你只需一个配置文件即可自动开启此服务。</p><p>&emsp;&emsp;说白了就相当于你白嫖了一个简易的服务器，他提供了一个配置文件，你在配置文件里书写脚本就可以定时的执行某项任务了。</p><p>&emsp;&emsp;关于 GitHub Actions 的更多知识，这里不做细致讲解，我们只需要知道他是怎么用的就好了。</p><p>&emsp;&emsp;详情请阅读 <a href="https://github.com/features/actions">GitHub Actions 官网</a>或者<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程 - 阮一峰</a></p><h1 id="三、为-GitHub-首页添加贪吃蛇动画"><a href="#三、为-GitHub-首页添加贪吃蛇动画" class="headerlink" title="三、为 GitHub 首页添加贪吃蛇动画"></a>三、为 GitHub 首页添加贪吃蛇动画</h1><h2 id="1、新建一个-actions"><a href="#1、新建一个-actions" class="headerlink" title="1、新建一个 actions"></a>1、新建一个 actions</h2><p>&emsp;&emsp;点击<code>Actions</code>按钮</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082247428.jpg"></p><p>&emsp;&emsp;新建一个 <code>workflows</code>工作流</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082248844.jpg"></p><p>&emsp;&emsp;新建一个 <code>yaml</code> 配置脚本</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082251442.jpg"></p><p>&emsp;&emsp;创建成功！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082251870.jpg"></p><h2 id="2、修改配置文件"><a href="#2、修改配置文件" class="headerlink" title="2、修改配置文件"></a>2、修改配置文件</h2><p>&emsp;&emsp;GitHub 默认为 Actions 配置文件<code>blank.yml</code>添加了<code>demo</code>，我们只需要修改这个文件的名字并书写我们自己的脚本即可。</p><p><code>配置代码</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitHub Action for generating a contribution graph with a snake eating your contributions.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Snake</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&quot;0 0 * * *&quot;</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2.3.4</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Snake</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">Platane/snk@master</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">snake-gif</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_user_name:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository_owner</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">gif_out_path:</span> <span class="string">./assets/github-contribution-grid-snake.gif</span></span><br><span class="line">          <span class="attr">svg_out_path:</span> <span class="string">./assets/github-contribution-grid-snake.svg</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Push</span> <span class="string">to</span> <span class="string">GitHub</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">EndBug/add-and-commit@v7.2.1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">          <span class="attr">message:</span> <span class="string">&#x27;Generate Contribution Snake&#x27;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;复制上面的脚本代码并替换<code>yml</code>文件默认内容后，点击<code>start commit</code>后再点击<code>commit new file</code>后即可。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082304981.jpg"></p><h2 id="3、引入-svg-动画"><a href="#3、引入-svg-动画" class="headerlink" title="3、引入 svg 动画"></a>3、引入 svg 动画</h2><p>&emsp;&emsp;上面的 Github Actions 执行完毕后，会在当前的仓库中添加一个<code>assets</code>文件夹，文件夹中有</p><p><code>github-contribution-grid-snake.gif</code>和<code>github-contribution-grid-snake.svg</code>两个文件。我们把<code>svg</code>文件引入到我们的<code>readme.md</code>文件中即可。（用 MarkDown 和 HTML 语法都行）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://raw.githubusercontent.com/这里更换为你的 GitHub ID/这里更换为你的 GitHub ID/main/assets/github-contribution-grid-snake.svg)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;由于众所周知的原因，在国内有时会打不开 GitHub 里的图片资源。我之前一直是使用的<code>jsdelivr</code>CDN 加速服务来引入GitHub里面的图片的。所以我的写法是下面这样的，你只需要把我的<code>ID</code>改成你自己的即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/github-contribution-grid-snake.svg&quot; /&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;不过，2021年12月20日，<code>jsd</code>在国内的 ICP 证书被吊销了，目前只能利用周边国家的服务器来加速国内请求的静态资源文件。这一定程度上会导致我们的 GitHub 主页速度加载较慢。（国内网络，如果您科学上网的话，当我没说）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202201082318640.jpg"></p><h2 id="4、自定义脚本"><a href="#4、自定义脚本" class="headerlink" title="4、自定义脚本"></a>4、自定义脚本</h2><p>&emsp;&emsp;到此整个流程大致算是结束了，GitHub 会在每天的零点（UTC 时区，和北京时间 (UTC+8)差了八个小时）执行我们的 Actions，并生成新的贪吃蛇动画图片，如果你熟悉 Github Actions 的执行流程的话，你可以手动修改<code>yml</code>配置文件文件来自定义图片的更新频率、文件位置、文件名称、commit 信息等等。</p><p>&emsp;&emsp;计划任务的时间语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌───────────── 分钟 (0 - 59)</span><br><span class="line">│ ┌───────────── 小时 (0 - 23)</span><br><span class="line">│ │ ┌───────────── 日 (1 - 31)</span><br><span class="line">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class="line">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ │</span><br><span class="line">* * * * *</span><br></pre></td></tr></table></figure><table><thead><tr><th>符号</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td><code>*</code></td><td>任意值</td><td><code>* * * * *</code> 每天每小时每分钟</td></tr><tr><td><code>,</code></td><td>值分隔符</td><td><code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td></tr><tr><td><code>-</code></td><td>范围</td><td><code>1-6 * * * *</code> 每小时的 1-6 分钟</td></tr><tr><td><code>/</code></td><td>每</td><td><code>*/15 * * * *</code> 每隔 15 分钟</td></tr></tbody></table><p><strong>注</strong>：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p><h1 id="四、超能力：GitHub-热力图保持-365-天全绿！"><a href="#四、超能力：GitHub-热力图保持-365-天全绿！" class="headerlink" title="四、超能力：GitHub 热力图保持 365 天全绿！"></a>四、超能力：GitHub 热力图保持 365 天全绿！</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Push</span> <span class="string">to</span> <span class="string">GitHub</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">EndBug/add-and-commit@v7.2.1</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">&#x27;Generate Contribution Snake&#x27;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;分析下脚本里的这段代码，我们可以得到什么信息？</p><p>&emsp;&emsp;我们使用<code>EndBug</code>用户的<code>add-and-commit@v7.2.1</code>actions 将渲染好的图片文件推送到 GitHub 仓库，提交的分支是<code>main</code>分支，commit 信息是<code>Generate Contribution Snake</code></p><p>&emsp;&emsp;emmm，这不就是我们日常<code>git add</code> <code>git commit</code> <code>git push</code>的操作么？</p><p>&emsp;&emsp;是的，这样的话GitHub Actions 每天都会为我们<code>Contributions</code>一个绿点，这样的话，我们的 GitHub 热力图不就可以保持 365 天全绿啦么，哈哈哈！</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202201082348845.jpg"></p><h1 id="五、后记"><a href="#五、后记" class="headerlink" title="五、后记"></a>五、后记</h1><p>&emsp;&emsp;本篇文章初探了 GitHub Actions 并为我们的 GitHub 首页添加了一个贪吃蛇的小动画，我们本次使用的 actions 其实都是大佬写好的，后期有能力的话，我们也可以自己去编写 actions，然后交给 GitHub 去定时触发，比方说写一个爬虫程序，然后将爬取的数据展现到 GitHub 首页等等。</p>]]></content>
    
    
    <summary type="html">给GitHub首页添加一个有趣的贪吃蛇小动画</summary>
    
    
    
    <category term="经验技巧" scheme="https://sunguoqi.com/categories/%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Github" scheme="https://sunguoqi.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>21年终总结&amp;&amp;关于我自学爬虫的点滴经历</title>
    <link href="https://sunguoqi.com/posts/cuiqingcai.html"/>
    <id>https://sunguoqi.com/posts/cuiqingcai.html</id>
    <published>2021-12-31T04:00:00.000Z</published>
    <updated>2022-01-10T17:34:14.957Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当你真心想做一件事情的时候，全世界都会帮你！</p></blockquote><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;大家好，我是小孙同学。很庆幸在我 20 岁这年，我遇到了我可以热爱一辈子的东西 —— 代码。</p><p>&emsp;&emsp;0 和 1 的二进制组合推动着时代的进步，代码中蕴藏着改变世界的能量。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112310959960.jpg"></p><p>&emsp;&emsp;但。。。</p><p>&emsp;&emsp;但我的学习探索之路并非一帆风顺，甚至是极其曲折。</p><p>&emsp;&emsp;不过值得骄傲和自豪的是，即便道阻且长，穷且益坚，我也从来没有想过放弃，从来没有想过就此潦草收场。</p><p>&emsp;&emsp;虽然我仅短短自学了十个月。但一路走来，我遇到过很多倾囊相授的老师，结交了很多志同道合的朋友，感受到了程序的魅力以及程序员世界里良好的开源和社交氛围。</p><p>&emsp;&emsp;我也小有成就，相继开通了自己的 CSDN，知乎，微信公众号…</p><p>&emsp;&emsp;也着手搭建了自己的个人网站<a href="https://www.sunguoqi.com/">https://www.sunguoqi.com</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311001272.jpg"></p><p>&emsp;&emsp;申请了自己的 Github 账号<a href="https://www.github.com/sun0225SUN">https://www.github.com/sun0225SUN</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311009126.jpg"></p><p>&emsp;&emsp;技术上，我现在也可以独立开发一些简单的 web 项目。</p><p>&emsp;&emsp;<a href="https://www.bilibili.com/video/BV15L4y1E7xY">https://www.bilibili.com/video/BV15L4y1E7xY</a></p><p>&emsp;&emsp;（初次录制，音质很差，真的很抱歉）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311104893.jpg"></p><p>&emsp;&emsp;编写一些基础的爬虫程序。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311016614.jpg"></p><p>&emsp;&emsp;在学习期间，我切身体会到了什么叫做站在巨人的肩膀上，也 get 到了为什么图灵社区会把这句话印刻在出版的每一本的书中。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311017591.jpg"></p><p>&emsp;&emsp;在我学习的过程中，我真的超级超级感激那些直接或者间接帮助过我的人。</p><p>&emsp;&emsp;所以便有了写这样一个系列文章的计划，以此来记录我学习路上的点滴感动，也借此向每一位帮助过我的老师，同学，朋友们表示感激。</p><h1 id="二、正文"><a href="#二、正文" class="headerlink" title="二、正文"></a>二、正文</h1><p>&emsp;&emsp;这是第一篇，是关于我自学网络爬虫的经历，我和《Python3 网络爬虫开发实战》这本书的缘分以及和崔庆才老师的微妙点滴。</p><h2 id="1、关于我学习爬虫的经历"><a href="#1、关于我学习爬虫的经历" class="headerlink" title="1、关于我学习爬虫的经历"></a>1、关于我学习爬虫的经历</h2><p>&emsp;&emsp;我学习一门技术，大概是通过购买相关的技术书籍，啃 B 站上的优质教学课程，查阅技术交流社区里相关的文章，翻阅官方文档，白嫖 Github 开源项目代码等等。</p><p>&emsp;&emsp;但我学习网络爬虫的道路并没有那么顺利。</p><h2 id="2、关于我和《Python3-网络爬虫开发实战》这本书"><a href="#2、关于我和《Python3-网络爬虫开发实战》这本书" class="headerlink" title="2、关于我和《Python3 网络爬虫开发实战》这本书"></a>2、关于我和《Python3 网络爬虫开发实战》这本书</h2><p>&emsp;&emsp;我首先是在 B 站上去了解什么是爬虫的脑海里有了相关的轮廓后，就会去找一些优质的书籍来看，电子书纸质书等等。</p><p>&emsp;&emsp;在选择有关爬虫的书籍时，我发现市场上关于网络爬虫的书并不多，相较于一些什么什么从入门到入土（精通）之类的书真的少太多了。</p><p>&emsp;&emsp;这为我寻找资料带来了不小的困扰，而且市场上仅有的爬虫相关的书籍，大体上写的都不是很详细（我在没购买之前是通过商品展示页面的书籍目录来看的，那时候还没有意识到学校图书馆这样一个宝藏。当时花了很多冤枉钱，因为买回来的书，发现作者梳理的思路并不适合我来学习，然后翻了两三下就放在书架上吃灰了）</p><p>&emsp;&emsp;当然，我并不是说这些书写的不好，我是说这些书写的不适合我，或者说不适合现阶段的我。</p><p>&emsp;&emsp;对于一个初学者来说，高浓缩的概括反而会让我缺乏一个过渡，很容易学着学着就半途而废了。</p><p>&emsp;&emsp;经过不断的试错和摸爬滚打，我最终最终终于遇到了崔庆才老师写的这本书——《Python3 网络爬虫开发实战》</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311023372.jpg"></p><p>&emsp;&emsp;那时候第二版还没有上市，我买的是第一版，可恨的是我买的还是盗版的，印刷质量很差。</p><p>&emsp;&emsp;对于盗版我这里就不想多说了，在国内盗版书的畅销在一定程度上的确传播了知识，但这无疑是对知识产权的不尊重和肆意践踏。</p><p>&emsp;&emsp;《Python3 网络爬虫开发实战》这本书的内容，我敢说比我在市面上看到的任何一本书都要详细，从它的厚度中我们便可以揣测出来。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311039263.jpg"></p><p>&emsp;&emsp;如果你评价它由于过于照顾初学者而显得臃肿，我觉得在某种角度上也是可以成立的。</p><p>&emsp;&emsp;作为已经有爬虫经验的人来说，那些基础知识的确没必要讲。（比方说第一版中 python 第三方库的安装整个章节）</p><p>&emsp;&emsp;但站在初学者的视角，这些所谓的臃肿便是一步一步走向成功之门的阶梯。</p><p>&emsp;&emsp;我相信崔大也是考虑到了这个问题，才会做的这样一个权衡。</p><p><code>小遗憾</code></p><p>&emsp;&emsp;但是第一版我并没有学完，仅仅学到了可以做一个小爬虫的这样一个程度。</p><p>&emsp;&emsp;由于我买的是盗版书，印刷质量真的有点差，这一定程度上成为了我学习的阻碍。</p><p>&emsp;&emsp;后来我顺藤摸瓜找到了崔大的个人博客。</p><p>&emsp;&emsp;<a href="https://cuiqingcai.com/">https://cuiqingcai.com</a></p><p>&emsp;&emsp;我发现崔大的个人博客中有关于《python3 网络爬虫开发实战》的博文专题（应该是先有的博客再有的书吧）。</p><p>&emsp;&emsp;博文中的内容大体和书上相似，但有一点小小的瑕疵就是 markdown 排版的问题，这也让我稍有膈应。</p><p>&emsp;&emsp;我现在仍还对盗版书和这个排版耿耿于怀，这也间接导致了我没有学完第一版。（当然也有其他原因，比如我自己的学习计划，时间安排等等）</p><h2 id="3、关于我和《Python3-网络爬虫开发实战》这本书的第二版"><a href="#3、关于我和《Python3-网络爬虫开发实战》这本书的第二版" class="headerlink" title="3、关于我和《Python3 网络爬虫开发实战》这本书的第二版"></a>3、关于我和《Python3 网络爬虫开发实战》这本书的第二版</h2><p>&emsp;&emsp;由于第一版的铺垫，我添加了崔庆才老师的两个公众号，<strong>【进击的 Coder】</strong>和 <strong>【崔庆才|静觅】</strong>，崔大发的每一篇文章我几乎都会看，真的很受用，我也能感受到了崔老师的良苦用心。</p><p>&emsp;&emsp;因为我基本上每篇文章都会看，所以我经历了<code>[崔大的新书获得了python之父Guido van Rossum的引荐语]</code>——&gt;<code>[新书封面确定]</code>——&gt;<code>[新书内容介绍]</code>——&gt;<code>[第一次给1000本书签名]</code>——&gt;<code>[正式上市]</code>——&gt;<code>[知识星球活动]</code>——&gt;<code>[第二次给1000本书签名]</code>——&gt;<code>[在星球里填写收货信息]</code>——&gt;<code>[每日一催，等待发货]</code>——&gt;<code>[收到包裹，拆箱晒朋友圈]</code>这样一个完整的时间轴。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311043503.jpg"></p><p>&emsp;&emsp;我记得当时崔大是说能赶上今年的双十一上市销售的，可最后真的就是一拖再拖，11 月 26 号才正式上市的。</p><p>&emsp;&emsp;上市当天，崔大也做了相应的活动，我看到 99 元加入知识星球送签名书这样一个选项，二话不说就参与了这样一个活动。（我的行为是理智的，因为后面星球的价格涨到了 149 元）</p><p>&emsp;&emsp;不过加入知识星球的同学赠送的签名书需要崔大再签 1000 本书才可以发货（因为上次签的 1000 本一下子就售空了）</p><p>&emsp;&emsp;签名之后还需要塑封打包很多流程，我大概又等了半个多月才收到了我的包裹，等待的感觉真的太焦灼啦。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311045727.jpg"></p><h2 id="4、关于《Python3-网络爬虫开发实战》第二版的内容"><a href="#4、关于《Python3-网络爬虫开发实战》第二版的内容" class="headerlink" title="4、关于《Python3 网络爬虫开发实战》第二版的内容"></a>4、关于《Python3 网络爬虫开发实战》第二版的内容</h2><p>&emsp;&emsp;我看一本书的内容会比较习惯先看他的目录，因为目录是整本书的一个基本架构，就像项目架构一样。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311106853.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311106798.jpg"></p><p>&emsp;&emsp;是的，你没有看错，900 多页的内容基本覆盖了爬虫开发的方方面面。</p><p>&emsp;&emsp;不过由于我也正在学习中，还没有啃完这本书，我现在只能放崔大对第二版内容的一个介绍，等我学完了，我会再写一篇文章的。</p><p><a href="https://mp.weixin.qq.com/s/66r5s2I-yX6OzGLRJBI0lg">https://mp.weixin.qq.com/s/66r5s2I-yX6OzGLRJBI0lg</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311047066.jpg"></p><h2 id="5、关于我对崔庆才老师爬虫案例平台-Scrape-的看法"><a href="#5、关于我对崔庆才老师爬虫案例平台-Scrape-的看法" class="headerlink" title="5、关于我对崔庆才老师爬虫案例平台 Scrape 的看法"></a>5、关于我对崔庆才老师爬虫案例平台 Scrape 的看法</h2><p>&emsp;&emsp;如果你认真阅读了崔大对这本书的内容介绍的话，你会发现一个耀眼的亮点。</p><p>&emsp;&emsp;<code>Scrape 案例平台</code></p><p>&emsp;&emsp;<a href="https://scrape.center/">https://scrape.center</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311049324.jpg"></p><p>&emsp;&emsp;这是一个怎样的存在呢？下面是我的理解。</p><p>&emsp;&emsp;我们都知道学习爬虫，实战是不可或缺的。可如果我们直接爬取现成的网站，会遇到很多问题。</p><ul><li>第一、网站改版，代码无法正常运行。</li></ul><p>&emsp;&emsp;目标网站一旦改版，通过书本上的教程跑出来的代码就无法继续正常运行了，这是一个非常大的问题，也会极大挫败学习者的心态。</p><ul><li>第二、对目标网站带来一定的负荷，不良心。</li></ul><p>&emsp;&emsp;爬虫带来的流量如果过大，就会对其正常的运营造成干扰，我相信我们的出发点都是去学习一门技术，而不是搞破坏浪费资源，这样真的很不良心</p><ul><li>第三、不尊重目标网站信息的著作权，易产生纠纷。</li></ul><p>&emsp;&emsp;我相信网站的开发者，管理者，掌权者都很乐意去共享信息，这是一种无私的开源精神。像豆瓣，百度，高德地图开放平台等等都有提供相应的 API。</p><p>&emsp;&emsp;可当我们直接对网站进行爬取的时候，自觉不自觉的就进入了一个灰色地带，会造成一些侵权行为，即便有君子协议的存在（robots.txt）</p><p>&emsp;&emsp;而崔大自己做的案例平台 Scrape 彻底的解决了这些问题。</p><ul><li>第一、书籍和案例平台配合，不用担心爬取的目标网站改版。</li><li>第二、崔大自己的案例平台，崔大自掏腰包允许任何人来爬。</li><li>第三、案例内容不涉及任何商业行为，不会带来任何法律问题。</li></ul><p>&emsp;&emsp;很大程度上，当我看到 Scrape 这样一个案例平台的时候，我就知道，其他的任何爬虫书，爬虫资料我都不需要了。</p><h2 id="6、关于我阅读《Python3-网络爬虫开发实战》这本书的感觉"><a href="#6、关于我阅读《Python3-网络爬虫开发实战》这本书的感觉" class="headerlink" title="6、关于我阅读《Python3 网络爬虫开发实战》这本书的感觉"></a>6、关于我阅读《Python3 网络爬虫开发实战》这本书的感觉</h2><p>&emsp;&emsp;见字如面，在读一本书的时候就像是在和书的作者进行交流，我喜欢这种感觉，在读《Python3 网络爬虫开发实战》这本书的时候也是如此。</p><p>&emsp;&emsp;崔庆才老师的书让我阅读起来很丝滑，因为我也经常写博客，做笔记。我完全可以厘清崔老师写书的思路，从而更加清晰我下一步的学习方向，然后多敲代码，多加练习，从而提升自己的技术能力。</p><h2 id="7、关于崔庆才老师的亲和力"><a href="#7、关于崔庆才老师的亲和力" class="headerlink" title="7、关于崔庆才老师的亲和力"></a>7、关于崔庆才老师的亲和力</h2><p>&emsp;&emsp;在自学的过程中，我加入过很多学习交流群。有些群里真的是卧虎藏龙，群友们各个都是人才，说话又好听，我超喜欢群里的，和群友们进行交流真的受益匪浅。</p><p>&emsp;&emsp;崔大也同样运营了这样一个学习交流群。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311056640.jpg"></p><p>&emsp;&emsp;最最最值得我所钦佩的是，崔大经常在群里为群友们解决问题，这。。。崔大时间这么充裕的么，慕了！（当然我知道崔大有个高仿小号，有时我也分不清哪个是真身）</p><p>&emsp;&emsp;所以我们可以思考一下，高频度的交流会带来什么？</p><p>&emsp;&emsp;带来的是崔大的亲和力。</p><p>&emsp;&emsp;我在阅读书的同时，我还有作者的微信。我和作者发消息，作者不会耍大牌，还会回复我。天呢，这不就是追星追到了的感觉么。</p><h2 id="8、我想成为像崔庆才老师这样的人"><a href="#8、我想成为像崔庆才老师这样的人" class="headerlink" title="8、我想成为像崔庆才老师这样的人"></a>8、我想成为像崔庆才老师这样的人</h2><p>&emsp;&emsp;在我眼里，崔庆才老师和 Vue.js 的开发者尤雨溪都创造出了令人惊艳的东西。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311100190.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311058160.jpg"></p><p>&emsp;&emsp;二位都是明星人物，我是两位大佬的超级粉丝，中国开发者需要这样的领军人物。</p><p>&emsp;&emsp;袒露心声，我想成为这样的人，为行业，为社会做出力所能及的贡献。虽然很难，任重而道远，但我一定会好好努力的。</p><p>&emsp;&emsp;总之，可以预见的是崔大的《Python3 网络爬虫开发实战》第二版会引领又一个“全民”学习网络爬虫的浪潮。</p><p>&emsp;&emsp;正如 python 之父的引荐语所说的一样。</p><p>&emsp;&emsp;<code> this book will help more people understand Python and web crawling/scraping.</code></p><p>&emsp;&emsp;<code>这本书会帮助更多人去学习python和网络爬虫。</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I am happy to see that Python is so widely used in the Chinese IT community. I hope this book will help more people understand Python and web crawling/scraping.</span><br><span class="line"></span><br><span class="line">—— Guido van Rossum, creator of Python, Distinguished Engineer, Microsoft</span><br></pre></td></tr></table></figure><h1 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h1><p>&emsp;&emsp;最后，我想引用<strong>鱼 C 小甲鱼</strong>的一段话结束本篇文章。（小甲鱼（李佳宇）也是我编程上的启蒙老师）</p><p>&emsp;&emsp;我们一直在努力耕耘这么一片简单的土壤，虽然没有达到尽善尽美，但已初见雏形。</p><p>&emsp;&emsp;十年前我们仰望星空，十年后我们将俯视大地，未来的天空，必将为我们留下一片灿烂的曙光！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112311105156.jpg"></p><p>&emsp;&emsp;愿你我都可以不负人间理想，找到自己的热爱，真心去做一件事情，正如本文标题所言，当你真正想去做一件事情的时候，全世界都会来帮你。</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202112252006324.jpg"></p><blockquote><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=kfv14zrr9mgr">https://cloud.tencent.com/developer/support-plan?invite_code=kfv14zrr9mgr</a></p></blockquote>]]></content>
    
    
    <summary type="html">关于我自学爬虫的经历，当你真心想做一件事情的时候，全世界都会帮你！</summary>
    
    
    
    <category term="生活杂谈" scheme="https://sunguoqi.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="崔庆才" scheme="https://sunguoqi.com/tags/%E5%B4%94%E5%BA%86%E6%89%8D/"/>
    
  </entry>
  
  <entry>
    <title>Merry Christmas！</title>
    <link href="https://sunguoqi.com/posts/13824.html"/>
    <id>https://sunguoqi.com/posts/13824.html</id>
    <published>2021-12-25T11:20:00.000Z</published>
    <updated>2022-04-04T03:34:21.276Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>世上本没有圣诞老人，所有的礼物和惊喜都来自爱你的人！</p></blockquote><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;今天是圣诞节，不知道啥时候起，圣诞节也成撒狗粮的日子了。🙃</p><p>&emsp;&emsp;朋友圈各种秀对象画的圣诞树的狗粮也是吃够了（好酸臭哇）。</p><p>&emsp;&emsp;咱是没那福分，想要圣诞树看来是只有自己动手了！</p><h1 id="二、桌面应用程序"><a href="#二、桌面应用程序" class="headerlink" title="二、桌面应用程序"></a>二、桌面应用程序</h1><p><img src="/img/christmas/202112251348807.jpg"></p><p>&emsp;&emsp;记得前几年的圣诞节，在某个交流群里有人分享过这样一个程序，当时啥也不懂，只知道很酷。惊叹之后就没有然后了，今天追根溯源找到了这组桌面小摆件的出处。</p><p>&emsp;&emsp;网址：<a href="http://get-xmas.com/">http://get-xmas.com/</a></p><p><img src="/img/christmas/202112251350345.jpg"></p><p>&emsp;&emsp;这是一个国外的网站，目测应该是做桌面小部件的那种网站，在这个站点上选取你喜欢的程序，下载下来解压双击运行就可以显示在你的桌面上了。</p><p>&emsp;&emsp;下载下来的是<code>exe</code>可执行文件，支持多开，右键有一些工具选项卡，可以设置开机自启，显示在顶部等等。</p><p>&emsp;&emsp;因为是打包好的<code>exe</code>程序，直接分享给朋友，在朋友电脑上就可以打开了，非常的 Nice！</p><h1 id="三、Web-网页程序"><a href="#三、Web-网页程序" class="headerlink" title="三、Web 网页程序"></a>三、Web 网页程序</h1><p>&emsp;&emsp;Web 开发是代码和艺术的结合，做 Web 开发真的是一件很酷的事情！</p><p>&emsp;&emsp;下面是我收集的一些圣诞网页，点击链接即可在线预览。</p><p>&emsp;&emsp;代码有点多，限于文章篇幅，没有在文章中展示，源码获取方式在文末。</p><h2 id="1、圣诞贺卡"><a href="#1、圣诞贺卡" class="headerlink" title="1、圣诞贺卡"></a>1、圣诞贺卡</h2><p>在线预览：<a href="https://box.sunguoqi.com/tree/demo1/">https://box.sunguoqi.com/tree/demo1/</a></p><p><img src="/img/christmas/202112251427548.jpg"></p><h2 id="2、更好的我们"><a href="#2、更好的我们" class="headerlink" title="2、更好的我们"></a>2、更好的我们</h2><p>在线预览：<a href="https://box.sunguoqi.com/tree/demo2/">https://box.sunguoqi.com/tree/demo2/</a></p><p><img src="/img/christmas/202112251436785.jpg"></p><h2 id="3、流星圣诞树"><a href="#3、流星圣诞树" class="headerlink" title="3、流星圣诞树"></a>3、流星圣诞树</h2><p>在线预览：<a href="https://box.sunguoqi.com/tree/demo3/">https://box.sunguoqi.com/tree/demo3/</a></p><p><img src="/img/christmas/202112251443248.jpg"></p><h2 id="4、星球圣诞树"><a href="#4、星球圣诞树" class="headerlink" title="4、星球圣诞树"></a>4、星球圣诞树</h2><p>在线预览：<a href="https://box.sunguoqi.com/tree/demo4/">https://box.sunguoqi.com/tree/demo4/</a></p><p><img src="/img/christmas/202112251646004.jpg"></p><h2 id="6、Merry-Christmas"><a href="#6、Merry-Christmas" class="headerlink" title="6、Merry Christmas"></a>6、Merry Christmas</h2><p>在线预览：<a href="https://box.sunguoqi.com/tree/demo5/">https://box.sunguoqi.com/tree/demo5/</a></p><p><img src="/img/christmas/202112251708662.jpg"></p><h2 id="7、CodePen"><a href="#7、CodePen" class="headerlink" title="7、CodePen"></a>7、CodePen</h2><p>&emsp;&emsp;CodePen 网址：<a href="https://codepen.io/search/pens?q=Christmas+Tree&cursor=ZD0xJm89MCZwPTU=">https://codepen.io/</a></p><p><img src="/img/christmas/202112251404667.jpg"></p><p>&emsp;&emsp;授之以鱼，不如授之以渔。CodePen 是一款优秀的前端 demo 展示平台，里面有很多大佬的作品，在检索页面搜索<code>Christmas Tree</code>选择你喜欢的 demo 点进去，就可以白嫖他的前端代码了。</p><p><img src="/img/christmas/202112251410664.jpg"></p><h1 id="四、Python-Turtle-绘图"><a href="#四、Python-Turtle-绘图" class="headerlink" title="四、Python Turtle 绘图"></a>四、Python Turtle 绘图</h1><p>&emsp;&emsp;后端语言我主要使用的是 python，毕竟人生苦短嘛。。。。。。当然我只会一点皮毛（狗头）。</p><p>&emsp;&emsp;众所周知，python 中的 Turtle 库（海龟库）是一个非常强大的绘图库，下面是利用 Turtle 制作出来的一些圣诞树作品。</p><h2 id="1、Demo1"><a href="#1、Demo1" class="headerlink" title="1、Demo1"></a>1、Demo1</h2><p><img src="/img/christmas/202112251453957.jpg"></p><p>&emsp;&emsp;程序源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t  <span class="comment"># as就是取个别名，后续调用的t都是turtle</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">n = <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">speed(<span class="string">&quot;fastest&quot;</span>)  <span class="comment"># 定义速度</span></span><br><span class="line">screensize(bg=<span class="string">&#x27;black&#x27;</span>)  <span class="comment"># 定义背景颜色，可以自己换颜色</span></span><br><span class="line">left(<span class="number">90</span>)</span><br><span class="line">forward(<span class="number">3</span> * n)</span><br><span class="line">color(<span class="string">&quot;orange&quot;</span>, <span class="string">&quot;yellow&quot;</span>)  <span class="comment"># 定义最上端星星的颜色，外圈是orange，内部是yellow</span></span><br><span class="line">begin_fill()</span><br><span class="line">left(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):  <span class="comment"># 画五角星</span></span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    right(<span class="number">144</span>)  <span class="comment"># 五角星的角度</span></span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    left(<span class="number">72</span>)  <span class="comment"># 继续换角度</span></span><br><span class="line">end_fill()</span><br><span class="line">right(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawlight</span>():</span>  <span class="comment"># 定义画彩灯的方法</span></span><br><span class="line">    <span class="keyword">if</span> r.randint(<span class="number">0</span>, <span class="number">30</span>) == <span class="number">0</span>:  <span class="comment"># 如果觉得彩灯太多，可以把取值范围加大一些，对应的灯就会少一些</span></span><br><span class="line">        color(<span class="string">&#x27;tomato&#x27;</span>)  <span class="comment"># 定义第一种颜色</span></span><br><span class="line">        circle(<span class="number">6</span>)  <span class="comment"># 定义彩灯大小</span></span><br><span class="line">    <span class="keyword">elif</span> r.randint(<span class="number">0</span>, <span class="number">30</span>) == <span class="number">1</span>:</span><br><span class="line">        color(<span class="string">&#x27;orange&#x27;</span>)  <span class="comment"># 定义第二种颜色</span></span><br><span class="line">        circle(<span class="number">3</span>)  <span class="comment"># 定义彩灯大小</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        color(<span class="string">&#x27;dark green&#x27;</span>)  <span class="comment"># 其余的随机数情况下画空的树枝</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">color(<span class="string">&quot;dark green&quot;</span>)  <span class="comment"># 定义树枝的颜色</span></span><br><span class="line">backward(n * <span class="number">4.8</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tree</span>(<span class="params">d, s</span>):</span>  <span class="comment"># 开始画树</span></span><br><span class="line">    <span class="keyword">if</span> d &lt;= <span class="number">0</span>: <span class="keyword">return</span></span><br><span class="line">    forward(s)</span><br><span class="line">    tree(d - <span class="number">1</span>, s * <span class="number">.8</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    drawlight()  <span class="comment"># 同时调用小彩灯的方法</span></span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    backward(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tree(<span class="number">15</span>, n)</span><br><span class="line">backward(n / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):  <span class="comment"># 循环画最底端的小装饰</span></span><br><span class="line">    a = <span class="number">200</span> - <span class="number">400</span> * r.random()</span><br><span class="line">    b = <span class="number">10</span> - <span class="number">20</span> * r.random()</span><br><span class="line">    up()</span><br><span class="line">    forward(b)</span><br><span class="line">    left(<span class="number">90</span>)</span><br><span class="line">    forward(a)</span><br><span class="line">    down()</span><br><span class="line">    <span class="keyword">if</span> r.randint(<span class="number">0</span>, <span class="number">1</span>) == <span class="number">0</span>:</span><br><span class="line">        color(<span class="string">&#x27;tomato&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        color(<span class="string">&#x27;wheat&#x27;</span>)</span><br><span class="line">    circle(<span class="number">2</span>)</span><br><span class="line">    up()</span><br><span class="line">    backward(a)</span><br><span class="line">    right(<span class="number">90</span>)</span><br><span class="line">    backward(b)</span><br><span class="line"></span><br><span class="line">t.color(<span class="string">&quot;dark red&quot;</span>, <span class="string">&quot;red&quot;</span>)  <span class="comment"># 定义字体颜色</span></span><br><span class="line">t.write(<span class="string">&quot;Merry Christmas &quot;</span>, align=<span class="string">&quot;center&quot;</span>, font=(<span class="string">&quot;Comic Sans MS&quot;</span>, <span class="number">40</span>, <span class="string">&quot;bold&quot;</span>))  <span class="comment"># 定义文字、位置、字体、大小</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawsnow</span>():</span>  <span class="comment"># 定义画雪花的方法</span></span><br><span class="line">    t.ht()  <span class="comment"># 隐藏笔头，ht=hideturtle</span></span><br><span class="line">    t.pensize(<span class="number">2</span>)  <span class="comment"># 定义笔头大小</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):  <span class="comment"># 画多少雪花</span></span><br><span class="line">        t.pencolor(<span class="string">&quot;white&quot;</span>)  <span class="comment"># 定义画笔颜色为白色，其实就是雪花为白色</span></span><br><span class="line">        t.pu()  <span class="comment"># 提笔，pu=penup</span></span><br><span class="line">        t.setx(r.randint(-<span class="number">350</span>, <span class="number">350</span>))  <span class="comment"># 定义x坐标，随机从-350到350之间选择</span></span><br><span class="line">        t.sety(r.randint(-<span class="number">100</span>, <span class="number">350</span>))  <span class="comment"># 定义y坐标，注意雪花一般在地上不会落下，所以不会从太小的纵座轴开始</span></span><br><span class="line">        t.pd()  <span class="comment"># 落笔，pd=pendown</span></span><br><span class="line">        dens = <span class="number">6</span>  <span class="comment"># 雪花瓣数设为6</span></span><br><span class="line">        snowsize = r.randint(<span class="number">1</span>, <span class="number">10</span>)  <span class="comment"># 定义雪花大小</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(dens):  <span class="comment"># 就是6，那就是画5次，也就是一个雪花五角星</span></span><br><span class="line">            <span class="comment"># t.forward(int(snowsize))  #int（）取整数</span></span><br><span class="line">            t.fd(<span class="built_in">int</span>(snowsize))</span><br><span class="line">            t.backward(<span class="built_in">int</span>(snowsize))</span><br><span class="line">            <span class="comment"># t.bd(int(snowsize))  #注意没有bd=backward，但有fd=forward，小bug</span></span><br><span class="line">            t.right(<span class="built_in">int</span>(<span class="number">360</span> / dens))  <span class="comment"># 转动角度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drawsnow()  <span class="comment"># 调用画雪花的方法</span></span><br><span class="line">t.done()  <span class="comment"># 完成,否则会直接关闭</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、Demo2"><a href="#2、Demo2" class="headerlink" title="2、Demo2"></a>2、Demo2</h2><p><img src="/img/christmas/202112251454958.jpg"></p><p>&emsp;&emsp;程序源码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">screen = turtle.Screen()</span><br><span class="line">screen.setup(<span class="number">800</span>,<span class="number">600</span>)</span><br><span class="line">circle = turtle.Turtle()</span><br><span class="line">circle.shape(<span class="string">&#x27;circle&#x27;</span>)</span><br><span class="line">circle.color(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">circle.speed(<span class="string">&#x27;fastest&#x27;</span>)</span><br><span class="line">circle.up()</span><br><span class="line">square = turtle.Turtle()</span><br><span class="line">square.shape(<span class="string">&#x27;square&#x27;</span>)</span><br><span class="line">square.color(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">square.speed(<span class="string">&#x27;fastest&#x27;</span>)</span><br><span class="line">square.up()</span><br><span class="line">circle.goto(<span class="number">0</span>,<span class="number">280</span>)</span><br><span class="line">circle.stamp()</span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">17</span>):</span><br><span class="line">    y = <span class="number">30</span>*i</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i-k):</span><br><span class="line">        x = <span class="number">30</span>*j</span><br><span class="line">        square.goto(x,-y+<span class="number">280</span>)</span><br><span class="line">        square.stamp()</span><br><span class="line">        square.goto(-x,-y+<span class="number">280</span>)</span><br><span class="line">        square.stamp()</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">        x = <span class="number">30</span>*(j+<span class="number">1</span>)</span><br><span class="line">        circle.color(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">        circle.goto(-x,-y+<span class="number">280</span>)</span><br><span class="line">        circle.stamp()</span><br><span class="line">        circle.goto(x,-y+<span class="number">280</span>)</span><br><span class="line">        circle.stamp()</span><br><span class="line">        k += <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">4</span> == <span class="number">3</span>:</span><br><span class="line">        x = <span class="number">30</span>*(j+<span class="number">1</span>)</span><br><span class="line">        circle.color(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">        circle.goto(-x,-y+<span class="number">280</span>)</span><br><span class="line">        circle.stamp()</span><br><span class="line">        circle.goto(x,-y+<span class="number">280</span>)</span><br><span class="line">        circle.stamp()</span><br><span class="line">square.color(<span class="string">&#x27;brown&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>,<span class="number">20</span>):</span><br><span class="line">    y = <span class="number">30</span>*i</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        x = <span class="number">30</span>*j</span><br><span class="line">        square.goto(x,-y+<span class="number">280</span>)</span><br><span class="line">        square.stamp()</span><br><span class="line">        square.goto(-x,-y+<span class="number">280</span>)</span><br><span class="line">        square.stamp()</span><br><span class="line">turtle.exitonclick()</span><br></pre></td></tr></table></figure><h2 id="3、Demo3"><a href="#3、Demo3" class="headerlink" title="3、Demo3"></a>3、Demo3</h2><p><img src="/img/christmas/202112251500658.jpg"></p><p>&emsp;&emsp;程序源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">setup(<span class="number">500</span>, <span class="number">500</span>, startx=<span class="literal">None</span>, starty=<span class="literal">None</span>)</span><br><span class="line">speed(<span class="number">0</span>)</span><br><span class="line">pencolor(<span class="string">&quot;#008500&quot;</span>)</span><br><span class="line">pensize(<span class="number">10</span>)</span><br><span class="line">penup()</span><br><span class="line">hideturtle()</span><br><span class="line">goto(<span class="number">0</span>, <span class="number">150</span>)</span><br><span class="line">showturtle()</span><br><span class="line">pendown()</span><br><span class="line">shape(name=<span class="string">&quot;classic&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">penup()</span><br><span class="line">goto(-<span class="number">55</span>, <span class="number">34</span>)</span><br><span class="line">pendown()</span><br><span class="line">seth(-<span class="number">120</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    fd(<span class="number">8</span>)</span><br><span class="line">    right(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">penup()</span><br><span class="line">goto(<span class="number">50</span>, <span class="number">35</span>)</span><br><span class="line">seth(-<span class="number">60</span>)</span><br><span class="line">pendown()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    fd(<span class="number">8</span>)</span><br><span class="line">    left(<span class="number">5</span>)</span><br><span class="line">seth(-<span class="number">120</span>)</span><br><span class="line">penup()</span><br><span class="line">fd(<span class="number">10</span>)</span><br><span class="line">seth(-<span class="number">145</span>)</span><br><span class="line">pendown()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    fd(<span class="number">10</span>)</span><br><span class="line">    right(<span class="number">15</span>)</span><br><span class="line">penup()</span><br><span class="line">fd(<span class="number">10</span>)</span><br><span class="line">seth(-<span class="number">145</span>)</span><br><span class="line">pendown()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    fd(<span class="number">12</span>)</span><br><span class="line">    right(<span class="number">15</span>)</span><br><span class="line">penup()</span><br><span class="line">fd(<span class="number">8</span>)</span><br><span class="line">seth(-<span class="number">145</span>)</span><br><span class="line">pendown()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    fd(<span class="number">10</span>)</span><br><span class="line">    right(<span class="number">15</span>)</span><br><span class="line">penup()</span><br><span class="line">seth(-<span class="number">155</span>)</span><br><span class="line">fd(<span class="number">8</span>)</span><br><span class="line">pendown()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    fd(<span class="number">11</span>)</span><br><span class="line">    right(<span class="number">15</span>)</span><br><span class="line">.........................省略部分代码...................</span><br><span class="line"></span><br><span class="line"><span class="comment"># 星星</span></span><br><span class="line">seth(-<span class="number">15</span>)</span><br><span class="line">koc(-<span class="number">120</span>, -<span class="number">70</span>, <span class="number">10</span>)</span><br><span class="line">seth(<span class="number">10</span>)</span><br><span class="line">koc(<span class="number">100</span>, -<span class="number">20</span>, <span class="number">10</span>)</span><br><span class="line">seth(-<span class="number">10</span>)</span><br><span class="line">koc(<span class="number">10</span>, <span class="number">40</span>, <span class="number">10</span>)</span><br><span class="line">seth(<span class="number">30</span>)</span><br><span class="line">koc(-<span class="number">80</span>, <span class="number">60</span>, <span class="number">10</span>)</span><br><span class="line">koc(<span class="number">100</span>, -<span class="number">150</span>, <span class="number">10</span>)</span><br><span class="line">koc(-<span class="number">140</span>, -<span class="number">150</span>, <span class="number">10</span>)</span><br><span class="line">koc(<span class="number">20</span>, <span class="number">120</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 袜子</span></span><br><span class="line">seth(-<span class="number">20</span>)</span><br><span class="line">pensize(<span class="number">2</span>)</span><br><span class="line">penup()</span><br><span class="line">goto(-<span class="number">20</span>, <span class="number">80</span>)</span><br><span class="line">pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">pendown()</span><br><span class="line">fillcolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">fd(<span class="number">25</span>)</span><br><span class="line">circle(<span class="number">4</span>, <span class="number">180</span>)</span><br><span class="line">fd(<span class="number">25</span>)</span><br><span class="line">circle(<span class="number">4</span>, <span class="number">180</span>)</span><br><span class="line">penup()</span><br><span class="line">goto(-<span class="number">15</span>, <span class="number">80</span>)</span><br><span class="line">pendown()</span><br><span class="line">begin_fill()</span><br><span class="line">fillcolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">seth(-<span class="number">120</span>)</span><br><span class="line">fd(<span class="number">20</span>)</span><br><span class="line">seth(<span class="number">150</span>)</span><br><span class="line">fd(<span class="number">5</span>)</span><br><span class="line">circle(<span class="number">7</span>, <span class="number">180</span>)</span><br><span class="line">fd(<span class="number">15</span>)</span><br><span class="line">circle(<span class="number">5</span>, <span class="number">90</span>)</span><br><span class="line">fd(<span class="number">30</span>)</span><br><span class="line">seth(<span class="number">160</span>)</span><br><span class="line">fd(<span class="number">18</span>)</span><br><span class="line">end_fill()</span><br><span class="line">penup()</span><br><span class="line">seth(<span class="number">0</span>)</span><br><span class="line">goto(<span class="number">100</span>, -<span class="number">230</span>)</span><br><span class="line">pendown()</span><br><span class="line">write(<span class="string">&quot;Happy Merry Christmas &quot;</span>, align=<span class="string">&quot;center&quot;</span>, font=(<span class="string">&quot;Comic Sans MS&quot;</span>, <span class="number">24</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line">done()</span><br></pre></td></tr></table></figure><h2 id="4、Demo4"><a href="#4、Demo4" class="headerlink" title="4、Demo4"></a>4、Demo4</h2><p><img src="/img/christmas/202112251726154.jpg"></p><p>&emsp;&emsp;程序源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 此为部分代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">from</span> star <span class="keyword">import</span> draw_star</span><br><span class="line"><span class="keyword">from</span> bear <span class="keyword">import</span> draw_bear</span><br><span class="line"><span class="keyword">from</span> tree <span class="keyword">import</span> draw_tree</span><br><span class="line"><span class="keyword">from</span> stake <span class="keyword">import</span> draw_stake</span><br><span class="line"><span class="keyword">from</span> light <span class="keyword">import</span> draw_light</span><br><span class="line"></span><br><span class="line">turtle.screensize(<span class="number">1200</span>, <span class="number">800</span>, <span class="string">&quot;#FFFFCC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画笔颜色</span></span><br><span class="line">turtle.pencolor(<span class="string">&quot;#cc0033&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抬起画笔</span></span><br><span class="line">turtle.penup()</span><br><span class="line"><span class="comment"># 画笔颜色、尺寸</span></span><br><span class="line">turtle.pencolor(<span class="string">&quot;#cc0033&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 放下画笔</span></span><br><span class="line">turtle.pendown()</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw_star(star_len=100, start_pos=[0, 0], pencolor=&quot;#333333&quot;, pensize=2, fill=True)</span></span><br><span class="line"><span class="comment"># draw_star(star_len=80, start_pos=[5, -2], pencolor=&quot;#333333&quot;, pensize=2, fill=True)</span></span><br><span class="line"><span class="comment"># draw_bear(start_pos=[-50, -100], scale=0.5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 树干</span></span><br><span class="line">draw_stake(start_pos=[<span class="number">0</span>, -<span class="number">150</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 树</span></span><br><span class="line">draw_tree(start_pos=[<span class="number">0</span>, <span class="number">50</span>], scale=<span class="number">1</span>)</span><br><span class="line">draw_tree(start_pos=[<span class="number">0</span>, <span class="number">75</span>], scale=<span class="number">1.3</span>)</span><br><span class="line">draw_tree(start_pos=[<span class="number">0</span>, <span class="number">95</span>], scale=<span class="number">1.65</span>)</span><br><span class="line">draw_tree(start_pos=[<span class="number">0</span>, <span class="number">105</span>], scale=<span class="number">2.4</span>)</span><br><span class="line">draw_tree(start_pos=[<span class="number">0</span>, <span class="number">130</span>], scale=<span class="number">3.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 星星</span></span><br><span class="line">draw_star(star_len=<span class="number">23</span>, start_pos=[-<span class="number">30</span>, <span class="number">130</span>], pencolor=<span class="string">&quot;#333333&quot;</span>, pensize=<span class="number">2</span>, fill=<span class="literal">True</span>)</span><br><span class="line">draw_star(star_len=<span class="number">15</span>, start_pos=[-<span class="number">19.5</span>, <span class="number">126.5</span>], pencolor=<span class="string">&quot;#333333&quot;</span>, pensize=<span class="number">2</span>, fill=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小熊</span></span><br><span class="line">draw_bear(start_pos=[-<span class="number">20</span>, <span class="number">30</span>], scale=<span class="number">10</span>)</span><br><span class="line">draw_bear(start_pos=[<span class="number">60</span>, -<span class="number">30</span>], scale=<span class="number">10</span>)</span><br><span class="line">draw_bear(start_pos=[<span class="number">0</span>, -<span class="number">135</span>], scale=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 彩灯</span></span><br><span class="line">draw_light(start_pos=[-<span class="number">100</span>, -<span class="number">165</span>], color=<span class="string">&quot;#FF00FF&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">180</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">50</span>, -<span class="number">175</span>], color=<span class="string">&quot;#FFFF00&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">210</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">10</span>, -<span class="number">175</span>], color=<span class="string">&quot;#EE6363&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">250</span>)</span><br><span class="line">draw_light(start_pos=[<span class="number">60</span>, -<span class="number">175</span>], color=<span class="string">&quot;#9370DB&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">draw_light(start_pos=[-<span class="number">100</span>, -<span class="number">100</span>], color=<span class="string">&quot;#FFFF00&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">180</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">50</span>, -<span class="number">100</span>], color=<span class="string">&quot;#EE6363&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">210</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">10</span>, -<span class="number">80</span>], color=<span class="string">&quot;#FF00FF&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">250</span>)</span><br><span class="line">draw_light(start_pos=[<span class="number">60</span>, -<span class="number">120</span>], color=<span class="string">&quot;#FFFF00&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">draw_light(start_pos=[<span class="number">30</span>, <span class="number">0</span>], color=<span class="string">&quot;#9370DB&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">0</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">10</span>, -<span class="number">50</span>], color=<span class="string">&quot;#FFFF00&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">210</span>)</span><br><span class="line">draw_light(start_pos=[-<span class="number">30</span>, <span class="number">15</span>], color=<span class="string">&quot;#FFFF00&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">draw_light(start_pos=[<span class="number">0</span>, <span class="number">60</span>], color=<span class="string">&quot;#EE6363&quot;</span>, scale=<span class="number">5</span>, seth=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><h2 id="5、将-python-程序打包成-exe-教程"><a href="#5、将-python-程序打包成-exe-教程" class="headerlink" title="5、将 python 程序打包成 exe 教程"></a>5、将 python 程序打包成 exe 教程</h2><p>&emsp;&emsp;python 程序虽然运行起来简单，但是没法像 exe 可执行文件那样直接双击打开，不过我们可以将 python 程序打包成 exe 文件，步骤如下。</p><p>&emsp;&emsp;打开终端，安装<code>pyinstaller</code>库：<code>pip install pyinstaller</code>，在文件目录下执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -i favicon .ico index.py --noconsole</span><br></pre></td></tr></table></figure><p><img src="/img/christmas/202112251635392.jpg"></p><p>&emsp;&emsp;具体参数的用法可以上网去查，输入上面的命令后回车，打包开始进行…</p><p><img src="/img/christmas/202112251637676.jpg"></p><p>&emsp;&emsp;打包成功后，在当前目录下会多出几个文件夹，exe 程序在<code>dist</code>分发目录下，双击即可运行。</p><p><img src="/img/christmas/202112251641111.jpg"></p><h1 id="五、C-语言控制台程序"><a href="#五、C-语言控制台程序" class="headerlink" title="五、C 语言控制台程序"></a>五、C 语言控制台程序</h1><p>&emsp;&emsp;C 语言在终端中输出用字符串组成的圣诞树。emmm，好吧，我 C 语言的知识基本忘完了。</p><h2 id="1、Demo1-1"><a href="#1、Demo1-1" class="headerlink" title="1、Demo1"></a>1、Demo1</h2><p><img src="/img/christmas/202112251608843.jpg"></p><p>&emsp;&emsp;程序源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14159265359</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> sx, sy;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">sdCircle</span><span class="params">(<span class="keyword">float</span> px, <span class="keyword">float</span> py, <span class="keyword">float</span> r)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">float</span> dx = px - sx, dy = py - sy;</span><br><span class="line">  <span class="keyword">return</span> sqrtf(dx * dx + dy * dy) - r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">opUnion</span><span class="params">(<span class="keyword">float</span> d1, <span class="keyword">float</span> d2)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> d1 &lt; d2 ? d1 : d2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> T px + scale * r * cosf(theta), py + scale * r * sin(theta)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">f</span><span class="params">(<span class="keyword">float</span> px, <span class="keyword">float</span> py, <span class="keyword">float</span> theta, <span class="keyword">float</span> scale, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">float</span> d = <span class="number">0.0f</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">float</span> r = <span class="number">0.0f</span>; r &lt; <span class="number">0.8f</span>; r += <span class="number">0.02f</span>)</span><br><span class="line">    d = opUnion(d, sdCircle(T, <span class="number">0.05f</span> * scale * (<span class="number">0.95f</span> - r)));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (n &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">-1</span>; t &lt;= <span class="number">1</span>; t += <span class="number">2</span>) &#123;</span><br><span class="line">      <span class="keyword">float</span> tt = theta + t * <span class="number">1.8f</span>;</span><br><span class="line">      <span class="keyword">float</span> ss = scale * <span class="number">0.9f</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">float</span> r = <span class="number">0.2f</span>; r &lt; <span class="number">0.8f</span>; r += <span class="number">0.1f</span>) &#123;</span><br><span class="line">        d = opUnion(d, f(T, tt, ss * <span class="number">0.5f</span>, n - <span class="number">1</span>));</span><br><span class="line">        ss *= <span class="number">0.8f</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = argc &gt; <span class="number">1</span> ? atoi(argv[<span class="number">1</span>]) : <span class="number">3</span>;</span><br><span class="line">  <span class="keyword">for</span> (sy = <span class="number">0.8f</span>; sy &gt; <span class="number">0.0f</span>; sy -= <span class="number">0.02f</span>, <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> (sx = <span class="number">-0.35f</span>; sx &lt; <span class="number">0.35f</span>; sx += <span class="number">0.01f</span>)</span><br><span class="line">      <span class="built_in">putchar</span>(f(<span class="number">0</span>, <span class="number">0</span>, PI * <span class="number">0.5f</span>, <span class="number">1.0f</span>, n) &lt; <span class="number">0</span> ? <span class="string">&#x27;*&#x27;</span> : <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、Demo2-1"><a href="#2、Demo2-1" class="headerlink" title="2、Demo2"></a>2、Demo2</h2><p><img src="/img/christmas/202112251547766.jpg"></p><p>&emsp;&emsp;程序源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> X 25 <span class="comment">//画面长度</span></span></span><br><span class="line"><span class="keyword">int</span> background[<span class="number">20</span>][<span class="number">2</span> * X] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> SNOW = <span class="number">30</span>; <span class="comment">//雪花密度</span></span><br><span class="line"><span class="comment">/*******************************</span></span><br><span class="line"><span class="comment">画树</span></span><br><span class="line"><span class="comment">*******************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, j, x, y;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    y = i;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * i + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      background[y][(X - i) + j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    y++;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * (i + <span class="number">1</span>) + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      background[y][(X - (i + <span class="number">1</span>)) + j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    y++;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * (i + <span class="number">3</span>) + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      background[y][(X - (i + <span class="number">3</span>)) + j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    y++;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      background[y][X + (<span class="number">2</span> * j - <span class="number">2</span>)] = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*******************************</span></span><br><span class="line"><span class="comment">画雪花</span></span><br><span class="line"><span class="comment">*******************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">snow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  srand(time(<span class="literal">NULL</span>));</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; SNOW; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    x = rand() % (<span class="number">2</span> * X);</span><br><span class="line">    y = rand() % <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">if</span> ((background[y][x] == <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      background[y][x] = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*******************************</span></span><br><span class="line"><span class="comment">打印</span></span><br><span class="line"><span class="comment">*******************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x, y;</span><br><span class="line">  <span class="keyword">for</span> (y = <span class="number">0</span>; y &lt; <span class="number">20</span>; y++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; <span class="number">2</span> * X; x++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (background[y][x] == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (background[y][x] == <span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (background[y][x] == <span class="number">2</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (background[y][x] == <span class="number">3</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*******************************</span></span><br><span class="line"><span class="comment">清除雪花</span></span><br><span class="line"><span class="comment">*******************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear_snow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * X; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (background[i][j] == <span class="number">3</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        background[i][j] = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  tree();</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    snow();</span><br><span class="line">    display();</span><br><span class="line">    Sleep(<span class="number">1</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    clear_snow();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、其他-C-语言代码"><a href="#3、其他-C-语言代码" class="headerlink" title="3、其他 C 语言代码"></a>3、其他 C 语言代码</h2><p>&emsp;&emsp;参考知乎的一篇文章：<a href="https://www.zhihu.com/question/27015321">https://www.zhihu.com/question/27015321</a></p><p><img src="/img/christmas/202112251618549.jpg"></p><h1 id="六、源码获取"><a href="#六、源码获取" class="headerlink" title="六、源码获取"></a>六、源码获取</h1><p>&emsp;&emsp;我的 GitHub 仓库：<a href="https://github.com/sun0225SUN/code">https://github.com/sun0225SUN/code</a></p><p><img src="/img/christmas/202112251907902.jpg"></p><p>&emsp;&emsp;阿里云盘：<a href="https://www.aliyundrive.com/s/EJM6BYYzu6N">https://www.aliyundrive.com/s/EJM6BYYzu6N</a></p><p>&emsp;&emsp;百度网盘：<a href="https://pan.baidu.com/s/10EYS2xzEDR5AppDx1kF_kg">https://pan.baidu.com/s/10EYS2xzEDR5AppDx1kF_kg</a></p><p>&emsp;&emsp;提取码：6666</p><h1 id="七、后记"><a href="#七、后记" class="headerlink" title="七、后记"></a>七、后记</h1><p>&emsp;&emsp;除了圣诞节，今天还是 22 考研的日子，学长学姐们考研加油哇！！！一研为定！！！一战成硕！！！冲冲冲！！！</p><p>&emsp;&emsp;欢迎关注我的个人公众号【不负人间理想】，愿你我都可以找到自己喜欢的做的事情，成为更好的自己！道阻且长，不负人间理想！</p><p><img src="/img/christmas/202112252006324.jpg"></p>]]></content>
    
    
    <summary type="html">圣诞树代码分享</summary>
    
    
    
    <category term="经验技巧" scheme="https://sunguoqi.com/categories/%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="圣诞树" scheme="https://sunguoqi.com/tags/%E5%9C%A3%E8%AF%9E%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Django 项目部署</title>
    <link href="https://sunguoqi.com/posts/19630.html"/>
    <id>https://sunguoqi.com/posts/19630.html</id>
    <published>2021-12-15T07:25:00.000Z</published>
    <updated>2022-01-10T17:14:42.681Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人学习笔记，参考文章如下：<br> <a href="https://blog.csdn.net/tr_136163798/article/details/120901363">https://blog.csdn.net/tr_136163798/article/details/120901363</a><br> <a href="https://www.dusaiphoto.com/article/71/">https://www.dusaiphoto.com/article/71/</a><br> <a href="https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/">https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/</a><br> <a href="https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/deployment/">https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/deployment/</a></p></blockquote><p>&emsp;&emsp;按照 Django 官方文档的指引，我们已经做好了一个投票应用。我们是在本地开发的，项目最终上线是要部署到服务器上的，本篇笔记记录了我个人部署的整个过程，仅供参考。</p><h1 id="一、新建站点"><a href="#一、新建站点" class="headerlink" title="一、新建站点"></a>一、新建站点</h1><h2 id="1、使用宝塔面板创建一个站点"><a href="#1、使用宝塔面板创建一个站点" class="headerlink" title="1、使用宝塔面板创建一个站点"></a>1、使用宝塔面板创建一个站点</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141447383.jpg"></p><p><code>站点创建成功！</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141449344.jpg"></p><h2 id="2、配置-SSL-证书（可不做）"><a href="#2、配置-SSL-证书（可不做）" class="headerlink" title="2、配置 SSL 证书（可不做）"></a>2、配置 SSL 证书（可不做）</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141453461.jpg"></p><p><code>配置成功</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141453652.jpg"></p><h1 id="二、打包程序"><a href="#二、打包程序" class="headerlink" title="二、打包程序"></a>二、打包程序</h1><h2 id="1、导出依赖"><a href="#1、导出依赖" class="headerlink" title="1、导出依赖"></a>1、导出依赖</h2><p>&emsp;&emsp;本地打开项目，执行以下命令导出项目依赖包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141503174.jpg"></p><h2 id="2、打包上传"><a href="#2、打包上传" class="headerlink" title="2、打包上传"></a>2、打包上传</h2><p>&emsp;&emsp;关闭 pycharm，把项目 mysite 做成压缩包，使用宝塔面板上传到网站目录<code>/www/wwwroot/django.sunguoqi.com</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141508134.jpg"></p><h2 id="3、解压"><a href="#3、解压" class="headerlink" title="3、解压"></a>3、解压</h2><p>&emsp;&emsp;宝塔面板可以直接解压文件，不必在命令行中操作。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141511760.jpg"></p><h1 id="三、环境安装"><a href="#三、环境安装" class="headerlink" title="三、环境安装"></a>三、环境安装</h1><h2 id="1、安装虚拟环境"><a href="#1、安装虚拟环境" class="headerlink" title="1、安装虚拟环境"></a>1、安装虚拟环境</h2><p>&emsp;&emsp;使用 Xshell 远程主机，进入网站目录，执行以下命令安装虚拟环境。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><h2 id="2、创建虚拟环境"><a href="#2、创建虚拟环境" class="headerlink" title="2、创建虚拟环境"></a>2、创建虚拟环境</h2><p>&emsp;&emsp;进入项目目录</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141521903.jpg"></p><p>&emsp;&emsp;执行以下命令创建虚拟环境。venv 为虚拟环境的名称，可自定义</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv</span><br></pre></td></tr></table></figure><h2 id="3、激活虚拟环境"><a href="#3、激活虚拟环境" class="headerlink" title="3、激活虚拟环境"></a>3、激活虚拟环境</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> venv</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source bin/activate</span><br></pre></td></tr></table></figure><h2 id="4、安装依赖包"><a href="#4、安装依赖包" class="headerlink" title="4、安装依赖包"></a>4、安装依赖包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install <span class="literal">-r</span> requirements.txt</span><br></pre></td></tr></table></figure><p><code>报错</code></p><p><code>ERROR: Failed building wheel for mysqlclient</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141527399.jpg"></p><p><code>解决方案</code></p><p>&emsp;&emsp;分别执行下以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt<span class="literal">-get</span> install python3 python<span class="literal">-dev</span> python3<span class="literal">-dev</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt<span class="literal">-get</span> install <span class="built_in">build-essential</span> libssl<span class="literal">-dev</span> libffi<span class="literal">-dev</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt<span class="literal">-get</span> install libxml2<span class="literal">-dev</span> libxslt1<span class="literal">-dev</span> zlib1g<span class="literal">-dev</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重新安装数据库引擎</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install mysqlclient</span><br></pre></td></tr></table></figure><p><code>成功</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141540851.jpg"></p><p>&emsp;&emsp;在执行下包安装命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install <span class="literal">-r</span> requirements.txt</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;因为安装数据库引擎的时候程序终止了，下面的包还没有装。</p><p><code>成功</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141547343.jpg"></p><h1 id="四、配置项目数据库"><a href="#四、配置项目数据库" class="headerlink" title="四、配置项目数据库"></a>四、配置项目数据库</h1><h2 id="1、修改项目数据库配置信息"><a href="#1、修改项目数据库配置信息" class="headerlink" title="1、修改项目数据库配置信息"></a>1、修改项目数据库配置信息</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141542651.jpg"></p><h2 id="2、迁移数据库"><a href="#2、迁移数据库" class="headerlink" title="2、迁移数据库"></a>2、迁移数据库</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py migrate</span><br></pre></td></tr></table></figure><p><code>成功</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141548876.jpg"></p><h1 id="五、启动项目"><a href="#五、启动项目" class="headerlink" title="五、启动项目"></a>五、启动项目</h1><h2 id="1、修改项目设置"><a href="#1、修改项目设置" class="headerlink" title="1、修改项目设置"></a>1、修改项目设置</h2><p><code>mysite/setting.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141821969.jpg"></p><h2 id="2、创建后台管理超级用户"><a href="#2、创建后台管理超级用户" class="headerlink" title="2、创建后台管理超级用户"></a>2、创建后台管理超级用户</h2><p>&emsp;&emsp;因为未导入开发时的数据库数据，所以我们现在没有后台账户数据，执行以下命令创建超级用户。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><h2 id="3、启动项目"><a href="#3、启动项目" class="headerlink" title="3、启动项目"></a>3、启动项目</h2><p>&emsp;&emsp;开放你的主机 8000 端口，执行以下命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8000</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;项目可以正常启动！</p><h1 id="六、Screen-进程托管"><a href="#六、Screen-进程托管" class="headerlink" title="六、Screen 进程托管"></a>六、Screen 进程托管</h1><p>&emsp;&emsp;当 SSH 会话关闭时，Web 服务也一起被关闭了，导致网站无法连接。我们需要让进程 24 小时不间断的工作，这里我是用 screen 实现的。</p><h2 id="1、安装-screen"><a href="#1、安装-screen" class="headerlink" title="1、安装 screen"></a>1、安装 screen</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt<span class="literal">-get</span> install screen</span><br></pre></td></tr></table></figure><h2 id="2、创建一个-screen"><a href="#2、创建一个-screen" class="headerlink" title="2、创建一个 screen"></a>2、创建一个 screen</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen <span class="literal">-S</span> django_study</span><br></pre></td></tr></table></figure><h2 id="3、启动项目-1"><a href="#3、启动项目-1" class="headerlink" title="3、启动项目"></a>3、启动项目</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8000</span></span><br></pre></td></tr></table></figure><h1 id="七、Nginx-反向代理"><a href="#七、Nginx-反向代理" class="headerlink" title="七、Nginx 反向代理"></a>七、Nginx 反向代理</h1><p>&emsp;&emsp;我们目前还只能用<code>IP:Port</code>的方式来访问 web，当最终项目上线一般都是用域名去访问的。我们项目的域名对应是<code>django.sunguoqi.com</code></p><p>&emsp;&emsp;利用 Nginx 的反向代理就可以将域名和端口建立关系了。</p><p><code>在宝塔面板上配置</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141708637.jpg"></p><h1 id="八、部署完成"><a href="#八、部署完成" class="headerlink" title="八、部署完成"></a>八、部署完成</h1><p>&emsp;&emsp;访问<code>django.sunguoqi.com/polls/</code>，没有可用的投票，因为我们后台没添加数据。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141711210.jpg"></p><h2 id="1、登录后台"><a href="#1、登录后台" class="headerlink" title="1、登录后台"></a>1、登录后台</h2><p>&emsp;&emsp;访问<code>django.sunguoqi.com/admin/</code>，</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141823499.jpg"></p><h2 id="2、添加投票"><a href="#2、添加投票" class="headerlink" title="2、添加投票"></a>2、添加投票</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141825403.jpg"></p><h2 id="3、进行投票"><a href="#3、进行投票" class="headerlink" title="3、进行投票"></a>3、进行投票</h2><p>&emsp;&emsp;访问<code>django.sunguoqi.com/polls/</code>进行投票。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141826224.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112151219504.jpg"></p><h2 id="4、提交数据"><a href="#4、提交数据" class="headerlink" title="4、提交数据"></a>4、提交数据</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112151220984.jpg"></p><h1 id="九、DEBUG-False？"><a href="#九、DEBUG-False？" class="headerlink" title="九、DEBUG=False？"></a>九、DEBUG=False？</h1><p>&emsp;&emsp;本质上我们目前项目使用的还是 Django 自带的 web 服务器，只是用 Nginx 做了一个反向代理。</p><p>&emsp;&emsp;当我们正式部署项目的时候，我们需要关闭调试，当我们不做任何更改便启动项目，便会出现如下报错。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141835217.jpg"></p><p>&emsp;&emsp;在项目开发阶段，DEBUG=True 的时候，Django 会用自带的的 web 服务来处理静态文件，但他的性能不是很好。所以在项目部署阶段，DEBUG=False 的时候，Django 便不在管理静态文件了，Django 想让我们把静态文件交给 Nginx（或者其他 web 服务器）来处理。</p><p>&emsp;&emsp;这个时候就需要我们处理下静态文件。</p><h2 id="1、配置静态文件路径"><a href="#1、配置静态文件路径" class="headerlink" title="1、配置静态文件路径"></a>1、配置静态文件路径</h2><p>&emsp;&emsp;首先我们将 setting.py 里面的相关配置改成这个样子。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭调试模式</span></span><br><span class="line">DEBUG = False</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许的服务器</span></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件收集目录</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2、收集静态文件"><a href="#2、收集静态文件" class="headerlink" title="2、收集静态文件"></a>2、收集静态文件</h2><p>&emsp;&emsp;执行以下命令，对项目中的静态文件进行收集，收集后存放的位置就是我们上面设置的静态文件收集目录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py collectstatic</span><br></pre></td></tr></table></figure><h2 id="3、配置-Nginx"><a href="#3、配置-Nginx" class="headerlink" title="3、配置 Nginx"></a>3、配置 Nginx</h2><p>&emsp;&emsp;在站点配置文件中加入以下内容。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|woff|woff2)<span class="variable">$</span></span><br><span class="line">&#123;</span><br><span class="line">    expires      <span class="number">30</span>d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(js|css)?<span class="variable">$</span></span><br><span class="line">&#123;</span><br><span class="line">    expires      <span class="number">12</span><span class="built_in">h</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /\.</span><br><span class="line">&#123;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112151456372.jpg"></p><h2 id="4、启动项目"><a href="#4、启动项目" class="headerlink" title="4、启动项目"></a>4、启动项目</h2><p>&emsp;&emsp;ok 了！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112151457364.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人学习笔记，参考文章如下：&lt;br&gt; &lt;a href=&quot;https://blog.csdn.net/tr_136163798/article/details/120901363&quot;&gt;https://blog.csdn.net/tr_136163798</summary>
      
    
    
    
    <category term="Django 学习笔记" scheme="https://sunguoqi.com/categories/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://sunguoqi.com/tags/Python/"/>
    
    <category term="Django" scheme="https://sunguoqi.com/tags/Django/"/>
    
    <category term="Web 开发" scheme="https://sunguoqi.com/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
    <category term="项目部署" scheme="https://sunguoqi.com/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Django 自定义后台</title>
    <link href="https://sunguoqi.com/posts/35809.html"/>
    <id>https://sunguoqi.com/posts/35809.html</id>
    <published>2021-12-14T06:25:00.000Z</published>
    <updated>2022-01-10T17:14:42.681Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人学习笔记，参考 django 官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/">https://docs.djangoproject.com/zh-hans/3.2/</a></p></blockquote><h1 id="一、自定义后台"><a href="#一、自定义后台" class="headerlink" title="一、自定义后台"></a>一、自定义后台</h1><p>&emsp;&emsp;Django 提供了相应的接口供我们自定义 Django 自带的后台管理应用。</p><p>&emsp;&emsp;比如，这是 Django 后台增加 Question 的一个表单，我们现在需要把<code>Question text</code> 和 <code>Date </code>的顺序换一下。该怎么做呢？</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141258569.jpg"></p><p>&emsp;&emsp;<code>polls</code>这是我们自己写的应用，我们是在<code>admin.py</code> 里注册到后台的，对应的后台配置也在这里。</p><p><code>polls/admin.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django的接口，默认已经引入。</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入我们自己写的数据表（类）</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 引用默认的API来自定义后台。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span>(<span class="params">admin.ModelAdmin</span>):</span></span><br><span class="line">    <span class="comment"># 字段</span></span><br><span class="line">    fields = [<span class="string">&#x27;pub_date&#x27;</span>, <span class="string">&#x27;question_text&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册以下就可以交给django后台管理啦！</span></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要改一下配置，把配置的类传进去</span></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br><span class="line">admin.site.register(Choice)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这样就改好了，这是一个很简单的尝试，当然，Django 还提供了其他的 API。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141314828.jpg"></p><p>&emsp;&emsp;只有两个字段，我们可以调一下字段的顺序，如果有十个字段呢？</p><p>&emsp;&emsp;我们可以为他们分组，像这样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span>(<span class="params">admin.ModelAdmin</span>):</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="literal">None</span>, &#123;<span class="string">&#x27;fields&#x27;</span>: [<span class="string">&#x27;question_text&#x27;</span>]&#125;),</span><br><span class="line">        (<span class="string">&#x27;时间信息&#x27;</span>, &#123;<span class="string">&#x27;fields&#x27;</span>: [<span class="string">&#x27;pub_date&#x27;</span>]&#125;),</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;于是他就会变成这个样子。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141318136.jpg"></p><h1 id="二、添加关联的对象"><a href="#二、添加关联的对象" class="headerlink" title="二、添加关联的对象"></a>二、添加关联的对象</h1><p>&emsp;&emsp;一个投票对应了多个选项，但是后台默认没有显示，我们如何在后台关联数据表呢？</p><p>&emsp;&emsp;我们在之前就把 Choice 表给注册了，似乎已经关联数据表了，但这样非常的低效，高效的设计是我们在创建一个新的投票问题时就设置好他的选项。</p><p><code>polls/admin.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceInline</span>(<span class="params">admin.StackedInline</span>):</span></span><br><span class="line">    model = Choice</span><br><span class="line">    extra = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span>(<span class="params">admin.ModelAdmin</span>):</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="literal">None</span>,               &#123;<span class="string">&#x27;fields&#x27;</span>: [<span class="string">&#x27;question_text&#x27;</span>]&#125;),</span><br><span class="line">        (<span class="string">&#x27;Date information&#x27;</span>, &#123;<span class="string">&#x27;fields&#x27;</span>: [<span class="string">&#x27;pub_date&#x27;</span>], <span class="string">&#x27;classes&#x27;</span>: [<span class="string">&#x27;collapse&#x27;</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line">    inlines = [ChoiceInline]</span><br><span class="line"></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141326534.jpg"></p><p>&emsp;&emsp;有点小问题。表单占据了大量的屏幕区域来显示所有关联的 <code>Choice</code> 对象的字段。我们可以把继承的类改成<code>TabularInline</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceInline</span>(<span class="params">admin.TabularInline</span>):</span></span><br><span class="line">    <span class="comment">#...</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;于是，就变成了这样。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141329198.jpg"></p><p>&emsp;&emsp;当然，Django 官方文档还对展示页面等等进行了自定义，这块我没继续学习！</p><h1 id="三、Simple-UI-快速上手"><a href="#三、Simple-UI-快速上手" class="headerlink" title="三、Simple UI 快速上手"></a>三、Simple UI 快速上手</h1><p>&emsp;&emsp;根据 Django 的官方文档，你完全可以自定义后台的各各方面！但是，已经有人给我们做好了轮子，我们直接用就可以了。</p><p>&emsp;&emsp;这是 simple ui 的官方文档：<a href="https://simpleui.72wo.com/docs/simpleui/">https://simpleui.72wo.com/docs/simpleui/</a></p><p>&emsp;&emsp;他是一个基于 Django Admin 的现代化主题，配合 Element-UI 和 Vue，让页面更具现代化。</p><p><strong>安装</strong></p><p>&emsp;&emsp;是用 pip 进行安装，先激活虚拟环境，安装在虚拟环境里。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django<span class="literal">-simpleui</span></span><br></pre></td></tr></table></figure><p><strong>日志如下</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(venv) <span class="built_in">PS</span> J:\study_django\venv\Scripts&gt; pip install django<span class="literal">-simpleui</span></span><br><span class="line">Collecting django<span class="literal">-simpleui</span></span><br><span class="line">  Downloading django<span class="literal">-simpleui</span><span class="literal">-2022</span>.<span class="number">1</span>.tar.gz (<span class="number">2.0</span> MB)</span><br><span class="line">     |████████████████████████████████| <span class="number">2.0</span> MB <span class="number">252</span> kB/s</span><br><span class="line">  Preparing metadata (setup.py) ... done</span><br><span class="line">Requirement already satisfied: django <span class="keyword">in</span> j:\study_django\venv\lib\site<span class="literal">-packages</span> (from django<span class="literal">-simpleui</span>) (<span class="number">3.2</span>.<span class="number">9</span>)</span><br><span class="line">Requirement already satisfied: asgiref&lt;<span class="number">4</span>,&gt;=<span class="number">3.3</span>.<span class="number">2</span> <span class="keyword">in</span> j:\study_django\venv\lib\site<span class="literal">-packages</span> (from django-&gt;django<span class="literal">-simpleui</span>) (<span class="number">3.4</span>.<span class="number">1</span>)</span><br><span class="line">Requirement already satisfied: pytz <span class="keyword">in</span> j:\study_django\venv\lib\site<span class="literal">-packages</span> (from django-&gt;django<span class="literal">-simpleui</span>) (<span class="number">2021.3</span>)</span><br><span class="line">Requirement already satisfied: sqlparse&gt;=<span class="number">0.2</span>.<span class="number">2</span> <span class="keyword">in</span> j:\study_django\venv\lib\site<span class="literal">-packages</span> (from django-&gt;django<span class="literal">-simpleui</span>) (<span class="number">0.4</span>.<span class="number">2</span>)</span><br><span class="line">Building wheels <span class="keyword">for</span> collected packages: django<span class="literal">-simpleui</span></span><br><span class="line">  Building wheel <span class="keyword">for</span> django<span class="literal">-simpleui</span> (setup.py) ... done</span><br><span class="line">  Created wheel <span class="keyword">for</span> django<span class="literal">-simpleui</span>: filename=django_simpleui<span class="literal">-2022</span>.<span class="number">1</span><span class="literal">-py3</span><span class="literal">-none</span><span class="literal">-any</span>.whl size=<span class="number">2080238</span> sha256=<span class="number">731</span>a17b568c71d817ce9ad1eeaa35488d1499f0f15cca278e79f46d763f9446c</span><br><span class="line">  Stored <span class="keyword">in</span> directory: c:\users\lenovo\appdata\local\pip\cache\wheels\<span class="number">77</span>\<span class="number">4</span>c\<span class="number">93</span>\<span class="number">599300</span>b3823726a1922e2a1f929a3733190e3837b51525e38c</span><br><span class="line">Successfully built django<span class="literal">-simpleui</span></span><br><span class="line">Installing collected packages: django<span class="literal">-simpleui</span></span><br><span class="line">Successfully installed django<span class="literal">-simpleui</span><span class="literal">-2022</span>.<span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>挂载项目</strong></p><p>&emsp;&emsp;这是一个基于 Django Admin 的应用，我们需要把他挂载到我们的项目中。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141356818.jpg"></p><p><strong>重启项目</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p><strong>成功</strong></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141400475.jpg"></p><p>&emsp;&emsp;你可以继续探索下这个后台管理界面，他比自带的后台更加现代化。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141401986.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112141402847.jpg"></p><p>&emsp;&emsp;其次我们也可以魔改这个主题，具体请参考<code>Simple UI</code>的官方文档。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人学习笔记，参考 django 官方文档：&lt;a href=&quot;https://docs.djangoproject.com/zh-hans/3.2/&quot;&gt;https://docs.djangoproject.com/zh-hans/3.2/&lt;/a&gt;&lt;</summary>
      
    
    
    
    <category term="Django 学习笔记" scheme="https://sunguoqi.com/categories/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://sunguoqi.com/tags/Python/"/>
    
    <category term="Django" scheme="https://sunguoqi.com/tags/Django/"/>
    
    <category term="Web 开发" scheme="https://sunguoqi.com/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Django 自动化测试 &amp;&amp; 静态文件的引入</title>
    <link href="https://sunguoqi.com/posts/51599.html"/>
    <id>https://sunguoqi.com/posts/51599.html</id>
    <published>2021-12-10T15:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.677Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人学习笔记，参考 django 官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/">https://docs.djangoproject.com/zh-hans/3.2/</a></p></blockquote><h1 id="一、自动化测试"><a href="#一、自动化测试" class="headerlink" title="一、自动化测试"></a>一、自动化测试</h1><p>&emsp;&emsp;测试代码，就是检查你的代码能否正常运行（废话）  </p><p>&emsp;&emsp;实话说，就目前为止，我写程序都是运行——&gt;报错——&gt;然后看报错信息——&gt;<code>print</code>输入输出这样去测试的。但是项目毕竟是一个整体的项目，这样测试未免太不专业了。</p><p>&emsp;&emsp;自动化测试具有以下优点：</p><ul><li>测试将节约你的时间</li><li>测试不仅能发现错误，而且能预防错误</li><li>测试是你的代码更有吸引力</li><li>测试有利于团队协作</li></ul><p>听起来不错，那就试试吧！</p><h2 id="1、首先得有个-BUG"><a href="#1、首先得有个-BUG" class="headerlink" title="1、首先得有个 BUG"></a>1、首先得有个 BUG</h2><p>&emsp;&emsp;按照我们之前写的这个应用逻辑，当我们访问<code>index</code>这个页面时，我们应该会得到最近发布的五条投票，如果有五条的话。</p><p>&emsp;&emsp;但是现在有一个小 bug 就是，如果我们的投票是定时到明天发布的，我们的想法是用户明天才能看到这条投票，<code>index</code>页面不应该显示这条数据，但按照目前的逻辑，<code>index</code>会立马显示这条数据。 </p><p>&emsp;&emsp;<code>注意</code>：上面描述的确实是一个 BUG，但是还有一个重要的 BUG，就是之前我们再写数据模型时，我们根本没定义任何方法来显示一天内的数据。原谅我没有看到这个要求：Question 是在一天之内发布的。</p><p>下面是 model 层现在的状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django框架的接口模块，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个“问题”类（表），表里有两个字段。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="comment"># 问题描述字段</span></span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    <span class="comment"># 创建日期字段</span></span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&#x27;date published&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">was_published_recently</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.pub_date &gt;= timezone.now() - datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># python魔法方法，显示调用该对象的时候的返回内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个选项类（表），表中包含三个字段。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Choice</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="comment"># 这个表里定义了一个外键字段，因为一个问题可以有多个选项，每个问题对应每个问题的选项。</span></span><br><span class="line">    question = models.ForeignKey(Question, on_delete=models.CASCADE)</span><br><span class="line">    <span class="comment"># 选项描述字段</span></span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    <span class="comment"># 是否选取字段</span></span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># python魔法方法，显示调用该对象的时候的返回内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、暴露这个-BUG"><a href="#2、暴露这个-BUG" class="headerlink" title="2、暴露这个 BUG"></a>2、暴露这个 BUG</h2><p>&emsp;&emsp;文字描述这个 BUG 确实有点苍白无力，下面我们用 <code>python </code><a href="http://manage.py/">manage.py</a><code> shell</code> 命令来暴露这个 BUG。 </p><p>&emsp;&emsp;在项目根目录下打开终端，输入<code>python manage.py shell</code> 进入交互式编译环境。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import datetime</span><br><span class="line">&gt;&gt;&gt; from django.utils import timezone</span><br><span class="line">&gt;&gt;&gt; from polls.models import Question</span><br><span class="line">&gt;&gt;&gt; <span class="comment"># 创建了一个实例对象，他的时间是未来的。</span></span><br><span class="line">&gt;&gt;&gt; future_question = Question(pub_date=timezone.now() + datetime.timedelta(days=<span class="number">30</span>))</span><br><span class="line">&gt;&gt;&gt; <span class="comment"># 会公开近期投票吗？</span></span><br><span class="line">&gt;&gt;&gt; future_question.was_published_recently()</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;很显然现在应用会公开未来的投票，所以我们要修复这个 BUG，哦对了，这不是一个自动化测试，我们只是在交互式环境下测试的，我们应该把他写成一个文件，当项目运行时，执行自动化测试。</p><h2 id="3、自动化测试"><a href="#3、自动化测试" class="headerlink" title="3、自动化测试"></a>3、自动化测试</h2><p>&emsp;&emsp;按照惯例，Django 应用的测试应该写在应用的 <code>tests.py</code> 文件里。测试系统会自动的在所有以 <code>tests</code> 开头的文件里寻找并执行测试代码。</p><p><code>polls/tests.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的测试接口，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="comment"># Create your tests here.</span></span><br><span class="line"><span class="comment"># 引入datatime模块</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"><span class="comment"># 引入我们的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionModelTests</span>(<span class="params">TestCase</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_was_published_recently_with_future_question</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        未来的一个时间他的返回值应该是False</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        time = timezone.now() + datetime.timedelta(days=<span class="number">30</span>)</span><br><span class="line">        future_question = Question(pub_date=time)</span><br><span class="line">        self.assertIs(future_question.was_published_recently(), <span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、运行测试"><a href="#4、运行测试" class="headerlink" title="4、运行测试"></a>4、运行测试</h2><p>&emsp;&emsp;在终端执行测试命令<code>python manage.py test polls</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PS J:\study_django\mysite&gt; python manage.py test polls</span><br><span class="line">Creating test database <span class="keyword">for</span> alias <span class="string">&#x27;default&#x27;</span>...</span><br><span class="line">System check identified no issues (<span class="number">0</span> silenced).</span><br><span class="line">E</span><br><span class="line">======================================================================</span><br><span class="line">ERROR: test_was_published_recently_with_future_question (polls.tests.QuestionModelTests)</span><br><span class="line">未来的一个时间他的返回值应该是<span class="literal">False</span></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;J:\study_django\mysite\polls\tests.py&quot;</span>, line <span class="number">19</span>, <span class="keyword">in</span> test_was_published_recently_with_future_question</span><br><span class="line">    self.assertIs(future_question.was_published_recently(), <span class="literal">False</span>)</span><br><span class="line">AttributeError: <span class="string">&#x27;Question&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;was_published_recently&#x27;</span></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">1</span> test <span class="keyword">in</span> <span class="number">0.003</span>s</span><br><span class="line"></span><br><span class="line">FAILED (errors=<span class="number">1</span>)</span><br><span class="line">Destroying test database <span class="keyword">for</span> alias <span class="string">&#x27;default&#x27;</span>...</span><br><span class="line">PS J:\study_django\mysite&gt;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;以下是自动化测试的运行过程：</p><ul><li><p><code>python manage.py test polls</code> 将会寻找 <code>polls</code> 应用里的测试代码</p></li><li><p>它找到了 <a href="https://docs.djangoproject.com/zh-hans/3.2/topics/testing/tools/#django.test.TestCase">django.test.TestCase</a> 的一个子类</p></li><li><p>它创建一个特殊的数据库供测试使用</p></li><li><p>它在类中寻找测试方法——以 <code>test</code> 开头的方法。</p></li><li><p>在 <code>test_was_published_recently_with_future_question</code> 方法中，它创建了一个 <code>pub_date</code> 值为 30 天后的 <code>Question</code> 实例。</p></li><li><p>接着使用 <code>assertls()</code> 方法，发现 <code>was_published_recently()</code> 返回了 <code>True</code>，而我们期望它返回 <code>False</code>。</p></li></ul><h2 id="5、修复这个-BUG"><a href="#5、修复这个-BUG" class="headerlink" title="5、修复这个 BUG"></a>5、修复这个 BUG</h2><p>&emsp;&emsp;当 <code>pub_date</code> 为未来某天时， <code>Question.was_published_recently()</code> 应该返回 <code>False</code>。修改 <code>models.py</code> 里的方法，让它只在日期是过去式的时候才返回 <code>True</code>：</p><p><code>polls/models.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">was_published_recently</span>(<span class="params">self</span>):</span></span><br><span class="line">    now = timezone.now()</span><br><span class="line">    <span class="keyword">return</span> now - datetime.timedelta(days=<span class="number">1</span>) &lt;= self.pub_date &lt;= now</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="6、更全面的测试"><a href="#6、更全面的测试" class="headerlink" title="6、更全面的测试"></a>6、更全面的测试</h2><p>&emsp;&emsp;最好对过去、最近、将来都进行测试。于是把测试代码修改如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的测试接口，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="comment"># Create your tests here.</span></span><br><span class="line"><span class="comment"># 引入datatime模块</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"><span class="comment"># 引入我们的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionModelTests</span>(<span class="params">TestCase</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_was_published_recently_with_future_question</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        未来的一个时间他的返回值应该是False</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        time = timezone.now() + datetime.timedelta(days=<span class="number">30</span>)</span><br><span class="line">        future_question = Question(pub_date=time)</span><br><span class="line">        self.assertIs(future_question.was_published_recently(), <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_was_published_recently_with_old_question</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        最近一天的</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        time = timezone.now() - datetime.timedelta(days=<span class="number">1</span>, seconds=<span class="number">1</span>)</span><br><span class="line">        old_question = Question(pub_date=time)</span><br><span class="line">        self.assertIs(old_question.was_published_recently(), <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_was_published_recently_with_recent_question</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        过去的</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        time = timezone.now() - datetime.timedelta(hours=<span class="number">23</span>, minutes=<span class="number">59</span>, seconds=<span class="number">59</span>)</span><br><span class="line">        recent_question = Question(pub_date=time)</span><br><span class="line">        self.assertIs(recent_question.was_published_recently(), <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="7、其他方案"><a href="#7、其他方案" class="headerlink" title="7、其他方案"></a>7、其他方案</h2><p>&emsp;&emsp;还有一个解决思路就是，我们不应该显示未来的投票，那么我们在视图显示时，就应该过滤掉<code>过去</code>和<code>未来</code>这个我没有继续研究。</p><h1 id="二、静态文件的引入"><a href="#二、静态文件的引入" class="headerlink" title="二、静态文件的引入"></a>二、静态文件的引入</h1><p>&emsp;&emsp;首先，在 <code>polls</code> 目录下创建一个名为 <code>static</code> 的目录。Django 将在该目录下查找静态文件，这种方式和 Diango 在 <code>polls/templates/</code> 目录下查找 template 的方式类似。</p><h2 id="1、新建-css-样式"><a href="#1、新建-css-样式" class="headerlink" title="1、新建 css 样式"></a>1、新建 css 样式</h2><p>在静态文件目录下新建样式。</p><p><code>static/style.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、引入静态文件"><a href="#2、引入静态文件" class="headerlink" title="2、引入静态文件"></a>2、引入静态文件</h2><p>在模板中引入静态文件。</p><p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;style.css&#x27; %&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、运行项目"><a href="#3、运行项目" class="headerlink" title="3、运行项目"></a>3、运行项目</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112102259664.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人学习笔记，参考 django 官方文档：&lt;a href=&quot;https://docs.djangoproject.com/zh-hans/3.2/&quot;&gt;https://docs.djangoproject.com/zh-hans/3.2/&lt;/a&gt;&lt;</summary>
      
    
    
    
    <category term="Django 学习笔记" scheme="https://sunguoqi.com/categories/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://sunguoqi.com/tags/Python/"/>
    
    <category term="Django" scheme="https://sunguoqi.com/tags/Django/"/>
    
    <category term="Web 开发" scheme="https://sunguoqi.com/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>First Django App！</title>
    <link href="https://sunguoqi.com/posts/4904.html"/>
    <id>https://sunguoqi.com/posts/4904.html</id>
    <published>2021-12-09T07:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.677Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人学习笔记，参考django官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/">https://docs.djangoproject.com/zh-hans/3.2/</a></p></blockquote><h1 id="一、First-Django-APP"><a href="#一、First-Django-APP" class="headerlink" title="一、First Django APP"></a>一、First Django APP</h1><p>&emsp;&emsp;上篇笔记从零创建了一个django项目，一个项目肯定是由多个模块组成的，比方说一个电商项目，包括支付模块，商品展示模块，商家用户聊天模块等等，这些模块便可称之为一个应用。</p><p>&emsp;&emsp;本篇笔记继续跟着django官方文档创建了一个投票的应用。</p><p>&emsp;&emsp;它由两部分组成：</p><ul><li>一个让人们查看和投票的公共站点。</li><li>一个让你能添加、修改和删除投票的管理站点。</li></ul><p>&emsp;&emsp;在项目目录下，执行下面这行命令，创建一个应用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp polls</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此时app目录如下，各文件的作用在使用中揭晓。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure><h1 id="二、挂载-app"><a href="#二、挂载-app" class="headerlink" title="二、挂载 app"></a>二、挂载 app</h1><p>&emsp;&emsp;app创建完成，需要把app加载到整个项目上。</p><p>&emsp;&emsp;为了避免项目名称和其他的一些模块名冲突，可以将<code>&#39;polls&#39;,</code>写成，<code>polls.apps.PollsConfig,</code>注意格式，字符串列表需要用<code>,</code>分开。</p><p><code>settings.py</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &#x27;polls&#x27;,</span><br><span class="line"></span><br><span class="line">    &#x27;django.contrib.admin&#x27;,</span><br><span class="line">    &#x27;django.contrib.auth&#x27;,</span><br><span class="line">    &#x27;django.contrib.contenttypes&#x27;,</span><br><span class="line">    &#x27;django.contrib.sessions&#x27;,</span><br><span class="line">    &#x27;django.contrib.messages&#x27;,</span><br><span class="line">    &#x27;django.contrib.staticfiles&#x27;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="三、编写model层"><a href="#三、编写model层" class="headerlink" title="三、编写model层"></a>三、编写model层</h1><p>&emsp;&emsp;model层，是Django的数据管理层，负责和数据库交互，编写model层就是设计应用所需要的数据表，得益于Django的ORM模块，我们不必写SQL语句就可以操作数据表。</p><p>&emsp;&emsp;model层里的一个类就是一个数据表，一行就是一个对象，一列就是一个对象的一个属性。</p><p><code>polls/models.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django框架的接口模块，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个“问题”类（表），表里有两个字段。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="comment"># 问题描述字段</span></span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    <span class="comment"># 创建日期字段</span></span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&#x27;date published&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># python魔法方法，显示调用该对象的时候的返回内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个选项类（表），表中包含三个字段。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Choice</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="comment"># 这个表里定义了一个外键字段，因为一个问题可以有多个选项，每个问题对应每个问题的选项。</span></span><br><span class="line">    question = models.ForeignKey(Question, on_delete=models.CASCADE)</span><br><span class="line">    <span class="comment"># 选项描述字段</span></span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    <span class="comment"># 是否选取字段</span></span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># python魔法方法，显示调用该对象的时候的返回内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;model层写好了，数据表创建好了吗，并没有，我们还需要执行以下命令。</p><p><code>生成中间文件</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations polls</span><br></pre></td></tr></table></figure><p><code>日志如下</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">polls\migrations\0001_initial.py</span><br><span class="line">  - Create model Question</span><br><span class="line">  - Create model Choice</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;django为我们生成了一个<code>0001_initial.py</code>，他是一个中间文件，执行迁移数据库的命令后，django会依赖这个文件去帮我们创建数据库表。</p><p><code>迁移数据</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><p><code>日志如下</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  Apply all migrations: admin, auth, contenttypes, polls, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying polls.0001_initial... OK</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查看生成的表，撒花。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112062211624.jpg"></p><h2 id="1、使用Django可视化管理数据"><a href="#1、使用Django可视化管理数据" class="headerlink" title="1、使用Django可视化管理数据"></a>1、使用Django可视化管理数据</h2><p>&emsp;&emsp;表已经创建好了，如何使用django自带的后台可视化管理数据呢，这需要我们注册一下。（选项类也要注册到里面去，后面会用到）</p><p><code>polls/admin.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django的接口，默认已经引入。</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入我们自己写的数据表（类）</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册以下就可以交给django后台管理啦！</span></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line">admin.site.register(Question)</span><br></pre></td></tr></table></figure><h2 id="2、启动项目"><a href="#2、启动项目" class="headerlink" title="2、启动项目"></a>2、启动项目</h2><p>&emsp;&emsp;重新启动下项目，看下Django后台可不可以编辑我们的数据表。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入：<a href="http://127.0.0.1:8000/admin/">http://127.0.0.1:8000/admin/</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112062226232.jpg"></p><h1 id="四、编写view层"><a href="#四、编写view层" class="headerlink" title="四、编写view层"></a>四、编写view层</h1><p>&emsp;&emsp;数据我们已经创建好了，也可以进行基本的CRUD操作了，接下来就是前端显示了对吧。view就是干这个的。</p><p>&emsp;&emsp;view层可以和数据库交互，处理前端显示，但有些东西是不需要和数据库交互就可以显示的。</p><p>&emsp;&emsp;所以我们先写一个<code>Hello World</code>展示在前端，然后再和model层结合，写两个吧，方便引入路由器的概念。</p><p><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># # Django的接口，默认已引入，这是一个渲染的函数，后面经常用。</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># 引入 HttpResponse 来处理HTTp响应</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;&lt;h1&gt;Hello world!&lt;/h1&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;&lt;h1&gt;Hello Django!&lt;/h1&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;写了两个视图函数，我们需要把他显示在前端，但是有两个，我们改如何分别显示他们呢？</p><p>&emsp;&emsp;路由器。</p><h1 id="五、编写路由器"><a href="#五、编写路由器" class="headerlink" title="五、编写路由器"></a>五、编写路由器</h1><p>&emsp;&emsp;类比于电脑前的路由器，电脑前的路由器是把局域网内的（WIFI信号内）的网络请求，打包成一个数据包发出去的，然后再把响应发回来。</p><p>&emsp;&emsp;同理，我们配置下Django的路由，就可以让每个视图，各回各家，各找各妈了。</p><p>在 <code>polls</code> 目录下创建一个新的文件<code>urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># path 就是处理路径的一个模块</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入我们自己写的视图函数，不引入的话路由器怎么知道改管理谁的视图呢？</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置路由规则，各回各家，各找各妈！</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;index&#x27;</span>, views.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;hello&#x27;</span>, views.hello, name=<span class="string">&#x27;hello&#x27;</span>),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1、挂载路由"><a href="#1、挂载路由" class="headerlink" title="1、挂载路由"></a>1、挂载路由</h2><p>&emsp;&emsp;路由管理我们写好了，但是这只是一个app的路由管理，整个项目是还需要一个路由管理的，所以我们需要将我们写的这个应用的路由文件挂载到项目的路由管理上去。</p><p><code>mysite/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;mysite URL Configuration</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/3.2/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, views.home, name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;blog/&#x27;, include(&#x27;blog.urls&#x27;))</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># django的后台管理模块，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="comment"># 路径处理模块，默认已经引入path，我们需要引入一个include模块，因为我们要引入app自己的路由规则</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    <span class="comment"># 引入polls应用的url路由配置文件。</span></span><br><span class="line">    path(<span class="string">&#x27;polls/&#x27;</span>, include(<span class="string">&#x27;polls.urls&#x27;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="2、启动项目-1"><a href="#2、启动项目-1" class="headerlink" title="2、启动项目"></a>2、启动项目</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这时候我们可以启动项目，查看下我们的路由和视图是否可以正常工作。按照我们编写的逻辑。</p><p>&emsp;&emsp;访问<a href="http://127.0.0.1:8000/polls/index">http://127.0.0.1:8000/polls/index</a> 会显示<code>Hello world!</code>，并且是一级标题</p><p>&emsp;&emsp;访问<a href="http://127.0.0.1:8000/polls/hello">http://127.0.0.1:8000/polls/hello</a> 会显示<code>Hello Django!</code>，同样是一级标题</p><p>&emsp;&emsp;很好，项目正常运行了！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112062346626.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112062347492.jpg"></p><h1 id="六、编写模板"><a href="#六、编写模板" class="headerlink" title="六、编写模板"></a>六、编写模板</h1><p>&emsp;&emsp;从<code>&lt;h1&gt;&lt;/h1&gt;</code>一级标题可以正常显示我们知道，我们完全可以return一个HTML文档，当然我们最好把它分离出来，因为写在这个文件里不方便修改，也有点臃肿。</p><p>&emsp;&emsp;在<code>polls</code>根目录下创建<code>templates</code>文件夹，然后在此目录创建一个<code>index.html</code>文件。</p><p><code>templates/index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Django!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>更改视图函数</strong></p><p><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django的接口，默认已引入，这是一个渲染的函数，后面经常用。</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># 引入 HttpResponse 来处理HTTp响应</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;&lt;h1&gt;Hello world!&lt;/h1&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>,context=<span class="literal">None</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;测试，程序正常。</p><p>&emsp;&emsp;因为我们这里用到了<code>index.html</code>文件，使用<code>render</code>函数更加方便。</p><p>&emsp;&emsp;但有个小问题，就是我们的内容是写死在HTML文件的，我们有办法让HTML的文件跟着我们的程序改变吗，有的，就是Django的插值语法。</p><p>&emsp;&emsp;我们把<code>&lt;h1&gt;</code>标签里的内容改成。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;&#123;name&#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;name就是一个变量，随着变量值的不同，HTML就响应不同的内容了。</p><p>&emsp;&emsp;在视图函数里加入name变量。</p><p><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># # Django的接口，默认已引入，这是一个渲染的函数，后面经常用。</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># 引入 HttpResponse 来处理HTTp响应</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;&lt;h1&gt;Hello world!&lt;/h1&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">request</span>):</span></span><br><span class="line">    name = <span class="string">&quot;小孙同学&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context=&#123;<span class="string">&#x27;name&#x27;</span>: name&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>context</code>就是变量和模板交接的东西。专业名称叫做<code>上下文</code></p><p>&emsp;&emsp;测试一下，我们可以写动态的数据啦！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112070018196.jpg"></p><h1 id="七、写点有用的视图"><a href="#七、写点有用的视图" class="headerlink" title="七、写点有用的视图"></a>七、写点有用的视图</h1><p>&emsp;&emsp;上面虽然写了两个视图，打通了前端，但是没有和后端交互。把我们写的视图注释掉，继续跟着官方文档写点有用的视图吧。</p><p><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的渲染函数，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># 引入我们写的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写了一个和后端交互的视图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 按照时间逆序排列，查询前五个数据表中存在的投票，存储为列表</span></span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&#x27;-pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line">    <span class="comment"># 上下文</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;latest_question_list&#x27;</span>: latest_question_list</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 返回渲染好的页面</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>templates/index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--先判断是否存在数据，存在则遍历输出，否则返回不存在--&gt;</span></span><br><span class="line">&#123;% if latest_question_list %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for question in latest_question_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/polls/&#123;&#123; question.id &#125;&#125;/&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>没有可用的投票。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重启应用。<br>访问<code>http://127.0.0.1:8000/polls/</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112082155564.jpg"></p><p>访问<code>http://127.0.0.1:8000/admin/</code>为应用增加加几个投票。</p><p>访问<code>http://127.0.0.1:8000/polls/</code>正常显示</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112091506881.jpg"></p><h1 id="八、路由分发的进阶"><a href="#八、路由分发的进阶" class="headerlink" title="八、路由分发的进阶"></a>八、路由分发的进阶</h1><p>&emsp;&emsp;上面写了几个投票，他是一个超链接， <code>href</code>值指向的是这个投票对应的详情。所以我们需要定义一个新的视图函数<code>detail</code>(名字自拟)来显示详情。<br><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的渲染函数，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># 引入我们写的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写了一个和后端交互的视图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 按照时间逆序排列，查询前五个数据表中存在的投票，存储为列表</span></span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&#x27;-pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line">    <span class="comment"># 上下文</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;latest_question_list&#x27;</span>: latest_question_list</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 返回渲染好的页面</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示详情函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;你在看问题 %s。&quot;</span> % question_id)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;定义一个新的视图后，我们需要为这个视图配置url的规则。</p><p>&emsp;&emsp;但是，按照上述的设计，每个详情都应该对应一个<code>URl</code>，那我们是不是要写好多<code>URL</code>？</p><p>&emsp;&emsp;可以是也可以不是，因为这些URL是有规律的，路由分发的路径可以用公式代替。</p><p><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># ex: /polls/</span></span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/</span></span><br><span class="line">    path(<span class="string">&#x27;&lt;int:question_id&gt;/&#x27;</span>, views.detail, name=<span class="string">&#x27;detail&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重启项目，点进去相应的问题，可以显示内容了，虽然这里只是显示问题几。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112082216677.jpg"></p><h1 id="九、去除模板中的硬编码-URL"><a href="#九、去除模板中的硬编码-URL" class="headerlink" title="九、去除模板中的硬编码 URL"></a>九、去除模板中的硬编码 URL</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/polls/&#123;&#123; question.id &#125;&#125;/&quot;</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;记得这行代码吧，就是写在<code>index.html</code>里的，这里有个问题，这个路径是写死的，一旦我们改了路由地址，我们还需要动模板里面的<code>href</code>值，这样不好。</p><p>&emsp;&emsp;这时候<code>path()</code>函数的第三个参数就起作用了。</p><p><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;&lt;int:question_id&gt;/&#x27;</span>, views.detail, name=<span class="string">&#x27;detail&#x27;</span>),</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;把模板这样写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;但这样还有一个问题，我们的URL最终是给项目使用的，但一个项目里有多个应用，名字有重名怎么办，所以这就需要我们为应用加一个名字。</p><p><code>poll/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">app_name = <span class="string">&#x27;polls&#x27;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;把模板这样写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;polls:detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="十、显示详情"><a href="#十、显示详情" class="headerlink" title="十、显示详情"></a>十、显示详情</h1><p>&emsp;&emsp;当我们点进去一个投票后，可以进入该投票的详情页，然后对其进行选择，之前我们仅仅显示了你在看问题几，现在是时候该细化了。</p><p>&emsp;&emsp;首先，我们在后台为这个投票加几个数据。然后在模板文件夹里创建一个模板<code>detail.html</code>，显示详情。</p><p><strong>新建模板</strong><br><code>detail.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>更新视图</strong><br><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的渲染函数，默认已经引入</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="comment"># 引入我们写的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写了一个和后端交互的视图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 按照时间逆序排列，查询前五个数据表中存在的投票，存储为列表</span></span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&#x27;-pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line">    <span class="comment"># 上下文</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;latest_question_list&#x27;</span>: latest_question_list</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 返回渲染好的页面</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示详情函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    <span class="comment"># 404异常处理</span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;detail.html&#x27;</span>, &#123;<span class="string">&#x27;question&#x27;</span>: question&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;404异常处理需要引用一个，<code>get_object_or_404</code>，emmm，雀食，多写异常处理是好事。<br>测试一下。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112082329464.jpg"></p><h1 id="十一、编写表单"><a href="#十一、编写表单" class="headerlink" title="十一、编写表单"></a>十一、编写表单</h1><p>&emsp;&emsp;我们已经写好的详情页需要显示的内容，但这毕竟是一个选择题，这样写只能展示，但用户没法选择，所以我们需要写一个表单。</p><p><code>detail.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        &#123;% if error_message %&#125;<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; error_message &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#123;% endif %&#125;</span><br><span class="line">        &#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;choice&quot;</span> <span class="attr">id</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; choice.id &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;运行项目，表单可以正常显示。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112091351898.jpg"></p><p>&emsp;&emsp;但是这只是前端的表单，我们是需要提交数据到数据库的，目前的这个提交按钮形同虚设，所以我们需要定义一个新的视图函数，然后添加到表单的<code>action</code>属性上。这个视图函数负责接受表单里的数据，然后将其添加到数据库中。</p><p><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Django自带的渲染函数，默认已经引入，404处理函数。</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="comment"># 引入我们写的数据表</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写了一个和后端交互的视图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 按照时间逆序排列，查询前五个数据表中存在的投票，存储为列表</span></span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&#x27;-pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line">    <span class="comment"># 上下文</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;latest_question_list&#x27;</span>: latest_question_list</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 返回渲染好的页面</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示详情函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    <span class="comment"># 404异常处理</span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;detail.html&#x27;</span>, &#123;<span class="string">&#x27;question&#x27;</span>: question&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理投票结果    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vote</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        selected_choice = question.choice_set.get(pk=request.POST[<span class="string">&#x27;choice&#x27;</span>])</span><br><span class="line">    <span class="keyword">except</span> (KeyError, Choice.DoesNotExist):</span><br><span class="line">        <span class="comment"># 重新显示问题投票表单。</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;polls/detail.html&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;question&#x27;</span>: question,</span><br><span class="line">            <span class="string">&#x27;error_message&#x27;</span>: <span class="string">&quot;您没有选择任何一个选项。&quot;</span>,</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>为其配置url规则<br><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="comment"># ex: /polls/5/vote/</span></span><br><span class="line">    path(<span class="string">&#x27;&lt;int:question_id&gt;/vote/&#x27;</span>, views.vote, name=<span class="string">&#x27;vote&#x27;</span>),</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;当我们选择了选项，下面就是显示投票结果了，所以我们还需要定义一个视图，来显示投票结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">results</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;results.html&#x27;</span>, &#123;<span class="string">&#x27;question&#x27;</span>: question&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们需要定义显示结果的模板文件。<br><code>results.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>答案<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125; -- &#123;&#123; choice.votes &#125;&#125; vote&#123;&#123; choice.votes|pluralize &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;polls:detail&#x27; question.id %&#125;&quot;</span>&gt;</span>再次投票?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;为其匹配路由规则。<br><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="comment"># ex: /polls/5/results/</span></span><br><span class="line">    path(<span class="string">&#x27;&lt;int:question_id&gt;/results/&#x27;</span>, views.results, name=<span class="string">&#x27;results&#x27;</span>),</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;当我们投完票后，我们就可以指定相应的路由地址来查看投票结果了。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112091403253.jpg"></p><p>&emsp;&emsp;但是这样非常不智能，我们的需求是，当我们投完票后就可以自动跳转到相应的路由地址查看投票结果。</p><p>&emsp;&emsp;我们需要在投完票后添加这个功能，所以我们需要更改<code>vote</code>这个视图函数来实现这个功能。<br><code>polls/views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vote</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        selected_choice = question.choice_set.get(pk=request.POST[<span class="string">&#x27;choice&#x27;</span>])</span><br><span class="line">    <span class="keyword">except</span> (KeyError, Choice.DoesNotExist):</span><br><span class="line">        <span class="comment"># Redisplay the question voting form.</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;detail.html&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;question&#x27;</span>: question,</span><br><span class="line">            <span class="string">&#x27;error_message&#x27;</span>: <span class="string">&quot;You didn&#x27;t select a choice.&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        selected_choice.votes += <span class="number">1</span></span><br><span class="line">        selected_choice.save()</span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&#x27;polls:results&#x27;</span>, args=(question.<span class="built_in">id</span>,)))</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;值得注意的是，因为我们这里引用了<code>HttpResponseRedirect()</code>和<code>reverse()</code>函数，所以我们需要从相应的模块里引入他们。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span>  HttpResponseRedirect</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;到此，简易的投票功能就已经实现了，不谈及样式问题，官方还有一个优化，就是使用通用视图。</p><h1 id="十二、通用视图"><a href="#十二、通用视图" class="headerlink" title="十二、通用视图"></a>十二、通用视图</h1><p>&emsp;&emsp;改良可做可不做，下面的代码会少一点，但我觉得上面的代码更容易理解。</p><h2 id="1、改良-URLconf"><a href="#1、改良-URLconf" class="headerlink" title="1、改良 URLconf"></a>1、改良 URLconf</h2><p><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&#x27;polls&#x27;</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.IndexView.as_view(), name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;&lt;int:pk&gt;/&#x27;</span>, views.DetailView.as_view(), name=<span class="string">&#x27;detail&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;&lt;int:pk&gt;/results/&#x27;</span>, views.ResultsView.as_view(), name=<span class="string">&#x27;results&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;&lt;int:question_id&gt;/vote/&#x27;</span>, views.vote, name=<span class="string">&#x27;vote&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;注意，第二个和第三个匹配准则中，路径字符串中匹配模式的名称已经由 <code>&lt;question_id&gt; </code>改为 <code>&lt;pk&gt;</code>。</p><h2 id="2、改良视图"><a href="#2、改良视图" class="headerlink" title="2、改良视图"></a>2、改良视图</h2><p>&emsp;&emsp;在视图中，我们是通过get方法获取数据表中的数据然后赋值给一个变量（对象），但我们也可以直接把数据表搬到视图中，这应该就是所谓的通用视图吧。</p><p>&emsp;&emsp;删除旧的 index, detail, 和 results 视图，并用 Django 的通用视图代替。<br><code>polls/urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span>(<span class="params">generic.ListView</span>):</span></span><br><span class="line">    template_name = <span class="string">&#x27;index.html&#x27;</span></span><br><span class="line">    context_object_name = <span class="string">&#x27;latest_question_list&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回最近五个已发布的问题。&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Question.objects.order_by(<span class="string">&#x27;-pub_date&#x27;</span>)[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailView</span>(<span class="params">generic.DetailView</span>):</span></span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&#x27;detail.html&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResultsView</span>(<span class="params">generic.DetailView</span>):</span></span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&#x27;results.html&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vote</span>(<span class="params">request, question_id</span>):</span></span><br><span class="line">    ... <span class="comment"># 和之前一样，不用改。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人学习笔记，参考django官方文档：&lt;a href=&quot;https://docs.djangoproject.com/zh-hans/3.2/&quot;&gt;https://docs.djangoproject.com/zh-hans/3.2/&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="Django 学习笔记" scheme="https://sunguoqi.com/categories/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://sunguoqi.com/tags/Python/"/>
    
    <category term="Django" scheme="https://sunguoqi.com/tags/Django/"/>
    
    <category term="Web 开发" scheme="https://sunguoqi.com/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Hello Django！</title>
    <link href="https://sunguoqi.com/posts/17846.html"/>
    <id>https://sunguoqi.com/posts/17846.html</id>
    <published>2021-12-06T14:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.677Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人学习笔记，参考django官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/">https://docs.djangoproject.com/zh-hans/3.2/</a></p></blockquote><h1 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h1><h2 id="1、使用-pycharm-创建项目"><a href="#1、使用-pycharm-创建项目" class="headerlink" title="1、使用 pycharm 创建项目"></a>1、使用 pycharm 创建项目</h2><p>&emsp;&emsp;选择虚拟环境创建django项目，为项目搭建了一个虚拟隔离环境，避免因为各种依赖包版本不同导致的bug。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061854597.jpg"></p><h2 id="2、激活虚拟环境"><a href="#2、激活虚拟环境" class="headerlink" title="2、激活虚拟环境"></a>2、激活虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd .\venv\Scripts\</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">activate</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061859595.jpg"></p><h1 id="二、安装-Django"><a href="#二、安装-Django" class="headerlink" title="二、安装 Django"></a>二、安装 Django</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;验证Django是否安装成功！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m django --version</span><br></pre></td></tr></table></figure><h1 id="三、创建Django项目"><a href="#三、创建Django项目" class="headerlink" title="三、创建Django项目"></a>三、创建Django项目</h1><p>&emsp;&emsp;<code>cd .. </code> <code>cd ..</code> 回到项目根目录，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject mysite</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此时项目文件目录如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;项目骨架已经搭建好，具体文件是干什么用的，django官方文档写的很清楚。</p><ul><li><p>最外层的 mysite/ 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。</p></li><li><p>manage.py: 一个让你用各种方式管理 Django 项目的命令行工具。你可以阅读 django-admin 和 manage.py 获取所有 manage.py 的细节。</p></li><li><p>里面一层的 mysite/ 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 mysite.urls).</p></li><li><p>mysite/<strong>init</strong>.py：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。如果你是 Python 初学者，阅读官方文档中的 更多关于包的知识。</p></li><li><p>mysite/settings.py：Django 项目的配置文件。如果你想知道这个文件是如何工作的，请查看 Django 配置 了解细节。</p></li><li><p>mysite/urls.py：Django 项目的 URL 声明，就像你网站的“目录”。阅读 URL调度器 文档来获取更多关于 URL 的内容。</p></li><li><p>mysite/asgi.py：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。阅读 如何使用 ASGI 来部署 了解更多细节。</p></li><li><p>mysite/wsgi.py：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。阅读 如何使用 WSGI 进行部署 了解更多细节。</p></li></ul><h1 id="四、启动项目"><a href="#四、启动项目" class="headerlink" title="四、启动项目"></a>四、启动项目</h1><p>&emsp;&emsp;<code>cd mysite</code> 进入项目目录，执行以下命令，运行项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061918963.jpg"></p><h1 id="五、初始化项目配置"><a href="#五、初始化项目配置" class="headerlink" title="五、初始化项目配置"></a>五、初始化项目配置</h1><p>&emsp;&emsp;打开<code>settings.py</code>文件，这里有该项目的各种配置项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = &#x27;zh-hans&#x27;</span><br><span class="line"></span><br><span class="line">TIME_ZONE = &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><h2 id="1、配置数据库"><a href="#1、配置数据库" class="headerlink" title="1、配置数据库"></a>1、配置数据库</h2><h3 id="1-1、新建mysql数据库"><a href="#1-1、新建mysql数据库" class="headerlink" title="1.1、新建mysql数据库"></a>1.1、新建mysql数据库</h3><p>&emsp;&emsp;django不需要数据库也可以运行，但为了项目可以更好的管理数据，这里使用mysql数据库。</p><p>&emsp;&emsp;新建数据库命令如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;mysql -uroot -p</span><br><span class="line">Enter password: ****</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">...</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database study_django;</span></span><br><span class="line">Query OK, 1 row affected (0.10 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2、修改配置"><a href="#1-2、修改配置" class="headerlink" title="1.2、修改配置"></a>1.2、修改配置</h3><p>&emsp;&emsp;修改 <code>settings.py</code> 第76行进行数据库的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;</span><br><span class="line">        &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,</span><br><span class="line">        &#x27;NAME&#x27;: &#x27;study_django&#x27;,</span><br><span class="line">        &#x27;USER&#x27;: &#x27;root&#x27;,</span><br><span class="line">        &#x27;PASSWORD&#x27;: &#x27;数据库用户密码&#x27;,</span><br><span class="line">        &#x27;HOST&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">        &#x27;PORT&#x27;: &#x27;3306&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3、安装依赖"><a href="#1-3、安装依赖" class="headerlink" title="1.3、安装依赖"></a>1.3、安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><h2 id="2、迁移数据库表"><a href="#2、迁移数据库表" class="headerlink" title="2、迁移数据库表"></a>2、迁移数据库表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h2 id="3、使用-pycharm-管理数据库"><a href="#3、使用-pycharm-管理数据库" class="headerlink" title="3、使用 pycharm 管理数据库"></a>3、使用 pycharm 管理数据库</h2><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061947648.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061948671.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061947309.jpg"></p><h1 id="六、创建Djang超级用户"><a href="#六、创建Djang超级用户" class="headerlink" title="六、创建Djang超级用户"></a>六、创建Djang超级用户</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS J:\study_django\mysite&gt; python manage.py createsuperuser</span><br><span class="line">用户名 (leave blank to use &#x27;lenovo&#x27;): admin</span><br><span class="line">电子邮件地址: 2516943693@qq.com</span><br><span class="line">Password:</span><br><span class="line">Password (again):</span><br><span class="line">Superuser created successfully.</span><br><span class="line">PS J:\study_django\mysite&gt; </span><br></pre></td></tr></table></figure><h2 id="1、重新运行项目"><a href="#1、重新运行项目" class="headerlink" title="1、重新运行项目"></a>1、重新运行项目</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><h2 id="2、进入Django后台管理界面"><a href="#2、进入Django后台管理界面" class="headerlink" title="2、进入Django后台管理界面"></a>2、进入Django后台管理界面</h2><p>进入 <a href="http://127.0.0.1:8000/admin">http://127.0.0.1:8000/admin</a> 登录后台</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202112061958926.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人学习笔记，参考django官方文档：&lt;a href=&quot;https://docs.djangoproject.com/zh-hans/3.2/&quot;&gt;https://docs.djangoproject.com/zh-hans/3.2/&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="Django 学习笔记" scheme="https://sunguoqi.com/categories/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://sunguoqi.com/tags/Python/"/>
    
    <category term="Django" scheme="https://sunguoqi.com/tags/Django/"/>
    
    <category term="Web 开发" scheme="https://sunguoqi.com/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>豆瓣电影top250爬虫及可视化分析</title>
    <link href="https://sunguoqi.com/posts/64684.html"/>
    <id>https://sunguoqi.com/posts/64684.html</id>
    <published>2021-11-07T14:00:00.000Z</published>
    <updated>2022-04-04T02:52:47.130Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>站在巨人的肩膀上！</p></blockquote><p>&emsp;&emsp;人类社会已经进入大数据时代，大数据深刻改变着我们的工作和生活。随着互联网、移动互联网、社交网络等的迅猛发展，各种数量庞大、种类繁多、随时随地产生和更新的大数据，蕴含着前所未有的社会价值和商业价值！！！</p><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;本文是一篇爬虫实战学习笔记，记录近些时日对爬虫的认识和学习心得，主要使用了 <code>requests</code>、 <code>re</code> 、<code>Beautifulsoup</code> 和<code>pandas</code>库，初学爬虫，代码写的有点烂，望包涵！</p><h1 id="二、实例引入"><a href="#二、实例引入" class="headerlink" title="二、实例引入"></a>二、实例引入</h1><p>&emsp;&emsp;假设由于工作或者项目要求，我们需要获取豆瓣电影 Top250 的影片数据，进行可视化分析。<br>&emsp;&emsp;数据包括 <code>影片名</code>    <code>上映年份</code>  <code> 评分</code>  <code>导演</code>  <code>主演</code>  <code>电影类别</code>  <code>上映地区</code>  <code>影片名言</code>  等<br>&emsp;&emsp;原始的数据存放在豆瓣的网页上，像这样。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111061255548.png"></p><center>我们需要将数据采集下来，存放在一张 excel 表里</center><center>像这样！</center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111062302411.jpg"></p><center>然后对其进行可视化分析</center><center>像这样</center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111061311152.png"></p><center> 这样</center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111061310335.png"></p><center>.......</center><p>&emsp;&emsp;试想一下，我们该怎么做？</p><p><strong>&emsp;&emsp;天大寒，砚冰坚，手指不可屈伸，弗之怠，录毕，走送之，不敢稍逾约？</strong></p><p>&emsp;&emsp;我想极少数的人会选择人工摘录，这是一个极不明智的选择。在信息时代，我们有计算机，我们有python，我们应该想些办法让计算机去做这些事情。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111061627232.jpg"></p><h1 id="三、爬虫"><a href="#三、爬虫" class="headerlink" title="三、爬虫"></a>三、爬虫</h1><p>&emsp;&emsp;爬虫，其实就是代替人力去完成信息抓取工作的一门技术，他能按照一定的规则，从互联网上抓取任何我们想要的信息。</p><h1 id="四、爬取思路"><a href="#四、爬取思路" class="headerlink" title="四、爬取思路"></a>四、爬取思路</h1><p>&emsp;&emsp;如何写爬虫？我们写爬虫的思路是什么？</p><p>&emsp;&emsp;前文提到，爬虫是代替人去完成信息抓取工作的，那么接下我们需要思考的问题便是，人是如何完成信息抓取工作的。</p><p>&emsp;&emsp;首先，我们打开豆瓣电影 TOP250 排行榜，分析我们需要的数据存放在哪里，然后复制粘贴，把我们的数据存放在excel表格里，依次重复如此枯燥乏味的工作对吧。</p><p>&emsp;&emsp;是的，其实爬虫要做的工作也是如此，写爬虫的大致思路如下。</p><p>&emsp;&emsp;<code>确定URL</code>——&gt;<code>发起请求获得服务器响应数据</code>——&gt;<code>解析数据</code>——&gt; <code>数据存储</code></p><h1 id="五、爬虫实战"><a href="#五、爬虫实战" class="headerlink" title="五、爬虫实战"></a>五、爬虫实战</h1><h2 id="1、单页爬取"><a href="#1、单页爬取" class="headerlink" title="1、单页爬取"></a>1、单页爬取</h2><p>&emsp;&emsp;先把单页爬取的代码放在这里，稍后我会做详细解释。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">@Time : 2021/11/6 下午 4:59</span></span><br><span class="line"><span class="string">@Author : SunGuoqi</span></span><br><span class="line"><span class="string">@Website : https://sunguoqi.com</span></span><br><span class="line"><span class="string">@Github: https://github.com/sun0225SUN</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入一些模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先确定URL</span></span><br><span class="line">url = <span class="string">&#x27;https://movie.douban.com/top250&#x27;</span></span><br><span class="line"><span class="comment"># UA伪装</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 发起请求</span></span><br><span class="line">response = requests.get(url, headers=headers)</span><br><span class="line"><span class="comment"># 获得响应文件文本</span></span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line">html = response.text</span><br><span class="line"><span class="comment"># 创建BeautifulSoup对象，方便解析</span></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="comment"># 找出所有的li标签</span></span><br><span class="line">all_li = soup.find(<span class="string">&#x27;ol&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;grid_view&#x27;</span>&#125;).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建一个空列表，存放我们的数据。</span></span><br><span class="line">datas = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> all_li:</span><br><span class="line">    <span class="comment"># 提取影片名称（只提取了中文名称）</span></span><br><span class="line">    name = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;title&#x27;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 提取影片评分</span></span><br><span class="line">    score = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:average&#x27;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 提取影片经典语录</span></span><br><span class="line">    quote = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&quot;inq&quot;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 下面提取影片信息部分</span></span><br><span class="line">    info = item.find_all(<span class="string">&#x27;p&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;)</span><br><span class="line">    <span class="comment"># print(info.text)</span></span><br><span class="line">    <span class="comment"># 返回的是一个列表，列表里是一个元组</span></span><br><span class="line">    <span class="comment"># print(info[0].text)</span></span><br><span class="line">    info_contents = info[<span class="number">0</span>].text</span><br><span class="line">    <span class="comment"># 分割影片信息，提取影片 导演 || 主演 || 上映年份 || 国家/地区 || 类型</span></span><br><span class="line">    result = re.findall(</span><br><span class="line">        <span class="string">&#x27;^.*?\u5bfc\u6f14:\s(.*?)\s.*?\u4e3b\u6f14:\s(.*?)\s.*?(\d&#123;4&#125;)\s.*?([\u4e00-\u9fa5].*)\xa0.*?\u002f.*?([\u4e00-\u9fa5].*?)\s\s.*$&#x27;</span>,</span><br><span class="line">        info_contents, re.S)</span><br><span class="line">    <span class="comment"># 把数据按找字典的格式存放到列表里</span></span><br><span class="line">    datas.append(&#123;</span><br><span class="line">        <span class="string">&#x27;片名&#x27;</span>: name,</span><br><span class="line">        <span class="string">&#x27;年份&#x27;</span>: result[<span class="number">0</span>][<span class="number">2</span>],</span><br><span class="line">        <span class="string">&#x27;评分&#x27;</span>: score,</span><br><span class="line">        <span class="string">&#x27;导演&#x27;</span>: result[<span class="number">0</span>][<span class="number">0</span>],</span><br><span class="line">        <span class="string">&#x27;主演&#x27;</span>: result[<span class="number">0</span>][<span class="number">1</span>],</span><br><span class="line">        <span class="string">&#x27;类型&#x27;</span>: result[<span class="number">0</span>][<span class="number">4</span>],</span><br><span class="line">        <span class="string">&#x27;国家/地区&#x27;</span>: result[<span class="number">0</span>][<span class="number">3</span>],</span><br><span class="line">        <span class="string">&#x27;经典台词&#x27;</span>: quote</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;爬取完成！！！&quot;</span>)</span><br><span class="line"><span class="comment"># 写入到文件</span></span><br><span class="line">df = pd.DataFrame(datas)</span><br><span class="line">df.to_csv(<span class="string">&quot;豆瓣电影.csv&quot;</span>, index=<span class="literal">False</span>, header=<span class="literal">True</span>, encoding=<span class="string">&#x27;utf_8_sig&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;已写入豆瓣.csv文件&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="1-1、导入模块"><a href="#1-1、导入模块" class="headerlink" title="1.1、导入模块"></a>1.1、导入模块</h3><p>&emsp;首先我们需要导入四个模块，没有下面库的同学需要<code>PIP</code>安装下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure><h3 id="1-2、确定URL"><a href="#1-2、确定URL" class="headerlink" title="1.2、确定URL"></a>1.2、确定URL</h3><p>&emsp;&emsp;我们请求的URL是明确的，就是<code>https://movie.douban.com/top250?start=0&amp;filter=</code>,其后面的参数是和多页爬取和过滤相关的，这个我们后面会用到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://movie.douban.com/top250&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="1-3、发起请求"><a href="#1-3、发起请求" class="headerlink" title="1.3、发起请求"></a>1.3、发起请求</h3><p>&emsp;&emsp;我们打开浏览器，输入网址，按下<code>enter</code>键后便可获得精美的页面，但其实在这期间，计算机和浏览器为我们做了很多事情。</p><p>&emsp;&emsp;不妨我们试一下，打开我们的浏览器，输入网址<code>https://movie.douban.com/top250</code>，然后按下我们电脑上的<code>F12</code>键，打开开发者工具，选择<code>Network</code>选项卡，刷新一下页面，你会看到很多数据包。这便是我们按下<code>enter</code>键后获得的数据本身，浏览器根据相应的规则对这些数据包进行解析和渲染，便生成了我们见到的网页。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111062320593.jpg"></p><p>&emsp;&emsp;我们是通过浏览器去获取和解析数据的，那么爬虫如何像浏览器一样去请求数据呢？</p><p>&emsp;&emsp;站在巨人的肩膀上，Python大牛们已经解决了这个问题，并把它封装成了一个库，这个库便是<code>requests</code>库，我们只需要调用库里面封装好的函数就可以模拟浏览器请求数据了。</p><p>&emsp;&emsp;似乎还需要讲一个东西，就是<code>请求头</code> <code>请求体</code>和<code>响应头</code> <code>响应体</code>的问题。</p><p>&emsp;&emsp;打开我们的开发者工具，点击一条数据，选择<code>headers</code>选项卡，我们便可以看到此次请求的请求头，其中包括我们请求的<code>URL</code> <code> 请求方法</code> <code>UA标识</code> <code>请求参数</code>等等</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111062334833.jpg"></p><p>&emsp;&emsp;包裹是有身份的，就像我们收到的快递一样，数据包也是如此，我们需要知道这个数据是谁发送的，要干嘛，所以我们需要<code>请求头</code> <code>请求体</code>这样一个东西。</p><p>&emsp;&emsp;一些网站会设置反爬虫机制，如果服务器发现请求是python发送的，便不会正常响应，所以我们需要伪装一下身份。</p><p>&emsp;&emsp;解决方法就是利用请求头进行<code>UA伪装</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先确定URL</span></span><br><span class="line">url = <span class="string">&#x27;https://movie.douban.com/top250&#x27;</span></span><br><span class="line"><span class="comment"># UA伪装</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 发起请求</span></span><br><span class="line">response = requests.get(url, headers=headers)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如何查看自己浏览器的<code>UA标识</code>呢？打开开发者工具，找到我们<code>headers</code>选项卡，展开第三条数据即可看到我们电脑的<code>UA</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111062348783.jpg"></p><h3 id="1-4、获得响应"><a href="#1-4、获得响应" class="headerlink" title="1.4、获得响应"></a>1.4、获得响应</h3><p>&emsp;&emsp;如果程序正常运行，便会发送URL对应的资源文件，我们可以打印一下他的响应内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;屏幕应该会打印一大堆HTML文本，我们的数据就存放在里面。</p><h3 id="1-5、数据解析"><a href="#1-5、数据解析" class="headerlink" title="1.5、数据解析"></a>1.5、数据解析</h3><p>&emsp;&emsp;现在，我们成功获取了HTML文件，我们需要的数据就存放在里面，但是如何过滤掉我们不需要的东西呢？</p><blockquote><p>&emsp;当米开朗琪罗被问及如何完成《大卫》这样匠心的雕刻作品时，他有一段著名的回答: ”很简单，你需要用锤子把石头上不像大卫的地方敲掉就行了。“</p></blockquote><p>&emsp;&emsp;再次站在前人的肩膀上，<code>BeautifulSoup</code>库闪亮出场。</p><p>&emsp;&emsp;在使用<code>BeautifulSoup</code>库之前，我们应该很清楚的知道我们需要的数据存放在什么位置。</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202111070014598.jpg"></p><p>&emsp;&emsp;很显然，我们需要的数据存放在一个<code>ol</code>有序列表里，每条数据便是一个列表项<code>li</code>，每个<code>li</code>标签又长什么样子呢？</p><p>&emsp;&emsp;因为豆瓣后台源代码有点乱，我们把它复制到<code>vscode</code>里格式化一下再看。</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202111070020090.jpg"></p><p>&emsp;&emsp;我们需要的数据存放的位置就更加明显了。现在。。。我们可以喝一碗美味的汤了（BeautifulSoup）</p><p>&emsp;&emsp;先将我们获取的HTML文本封装成<code>BeautifulSoup对象</code>，对象里包含了很多属性和方法，方便我们查找和获取我们需要的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line">html = response.text</span><br><span class="line"><span class="comment"># 创建BeautifulSoup对象，方便解析</span></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里我们首先获取所有的<code>li</code>标签，然后遍历<code>all_li</code> 获得每个<code>li</code>里的数据，在进行解析就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出所有的li标签</span></span><br><span class="line">all_li = soup.find(<span class="string">&#x27;ol&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;grid_view&#x27;</span>&#125;).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们创建一个空列表，将以后获得得每条数据，都存放在里面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datas = []</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们通过上面的分析发现，影片名称存放在下面这一小块。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://movie.douban.com/subject/1292052/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>肖申克的救赎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>The Shawshank Redemption<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;other&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>月黑高飞(港) / 刺激1995(台)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;playable&quot;</span>&gt;</span>[可播放]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;其对应的解析便是<code>name = item.find(&#39;span&#39;, &#123;&#39;class&#39;: &#39;title&#39;&#125;).text</code></p><p>&emsp;&emsp;影片得分，存放在下面这一小块。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rating5-t&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rating_num&quot;</span> <span class="attr">property</span>=<span class="string">&quot;v:average&quot;</span>&gt;</span>9.7<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">property</span>=<span class="string">&quot;v:best&quot;</span> <span class="attr">content</span>=<span class="string">&quot;10.0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>2478010人评价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;其对应的解析便是<code>name = item.find(&#39;span&#39;, &#123;&#39;class&#39;: &#39;title&#39;&#125;).text</code></p><p>&emsp;&emsp;影片语录存放在下面这一小块。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;quote&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inq&quot;</span>&gt;</span>希望让人自由。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;其对应的解析便是<code>quote = item.find(&#39;span&#39;, &#123;&#39;class&#39;: &quot;inq&quot;&#125;).text</code></p><p>&emsp;&emsp;其他内容都在这里面，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    导演: 弗兰克·德拉邦特 Frank Darabont<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>主演: 蒂姆·罗宾斯 Tim Robbins /...<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    1994<span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>美国<span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>犯罪 剧情</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;有些同学可能会发现，如果我们依旧按照上面的方式去解析，我们只能获得<code>p</code>标签里面的内容，没法把导演哇，主演哇，等等分离出来，emmm，怎么办呢？</p><p>&emsp;&emsp;魔法终究可以被魔法打败，我们有最强的字符串处理工具，就是<code>正则表达式</code>。在使用之前，我们应该先引用先导入此模块。</p><p>&emsp;&emsp;首先我们获取的<code>p</code>标签里的内容，它长下面这个样子。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">导演: 弗兰克·德拉邦特 Frank Darabont   主演: 蒂姆·罗宾斯 Tim Robbins /...</span><br><span class="line">1994 / 美国 / 犯罪 剧情</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;其对应的解析便是<code>    result = re.findall(&#39;^.*?\u5bfc\u6f14:\s(.*?)\s.*?\u4e3b\u6f14:\s(.*?)\s.*?(\d&#123;4&#125;)\s.*?([\u4e00-\u9fa5].*)\xa0.*?\u002f.*?([\u4e00-\u9fa5].*?)\s\s.*$&#39;,info_contents, re.S)</code></p><p>&emsp;&emsp;这里关于正则表达式就不多说了，有兴趣的同学可以研究研究。</p><blockquote><p>计算机科学领域有一个笑话，如果你有一个问题打算用正则表达式来解决，那么就是两个问题了。</p></blockquote><p>&emsp;&emsp;于是，程序就变成下面这样了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> all_li:</span><br><span class="line">    <span class="comment"># 提取影片名称（只提取了中文名称）</span></span><br><span class="line">    name = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;title&#x27;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 提取影片评分</span></span><br><span class="line">    score = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:average&#x27;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 提取影片经典语录</span></span><br><span class="line">    quote = item.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&quot;inq&quot;</span>&#125;).text</span><br><span class="line">    <span class="comment"># 下面提取影片信息部分</span></span><br><span class="line">    info = item.find_all(<span class="string">&#x27;p&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;)</span><br><span class="line">    <span class="comment"># print(info.text)</span></span><br><span class="line">    <span class="comment"># 返回的是一个列表，列表里是一个元组</span></span><br><span class="line">    <span class="comment"># print(info[0].text)</span></span><br><span class="line">    info_contents = info[<span class="number">0</span>].text</span><br><span class="line">    <span class="comment"># 分割影片信息，提取影片 导演 || 主演 || 上映年份 || 国家/地区 || 类型</span></span><br><span class="line">    result = re.findall(</span><br><span class="line">        <span class="string">&#x27;^.*?\u5bfc\u6f14:\s(.*?)\s.*?\u4e3b\u6f14:\s(.*?)\s.*?(\d&#123;4&#125;)\s.*?([\u4e00-\u9fa5].*)\xa0.*?\u002f.*?([\u4e00-\u9fa5].*?)\s\s.*$&#x27;</span>,</span><br><span class="line">        info_contents, re.S)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;接着我们把数据以字典的方式存放到列表里。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把数据按找字典的格式存放到列表里</span></span><br><span class="line">datas.append(&#123;</span><br><span class="line">    <span class="string">&#x27;片名&#x27;</span>: name,</span><br><span class="line">    <span class="string">&#x27;年份&#x27;</span>: result[<span class="number">0</span>][<span class="number">2</span>],</span><br><span class="line">    <span class="string">&#x27;评分&#x27;</span>: score,</span><br><span class="line">    <span class="string">&#x27;导演&#x27;</span>: result[<span class="number">0</span>][<span class="number">0</span>],</span><br><span class="line">    <span class="string">&#x27;主演&#x27;</span>: result[<span class="number">0</span>][<span class="number">1</span>],</span><br><span class="line">    <span class="string">&#x27;类型&#x27;</span>: result[<span class="number">0</span>][<span class="number">4</span>],</span><br><span class="line">    <span class="string">&#x27;国家/地区&#x27;</span>: result[<span class="number">0</span>][<span class="number">3</span>],</span><br><span class="line">    <span class="string">&#x27;经典台词&#x27;</span>: quote</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;OK，这样其实我们就把单张的豆瓣影片数据爬取完成了！</p><h3 id="1-6、写入文件"><a href="#1-6、写入文件" class="headerlink" title="1.6、写入文件"></a>1.6、写入文件</h3><p>&emsp;&emsp;写入文件用的是强大的<code>pandas</code>库，这里需要注意下编码格式，否则打开的可能是乱码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(datas)</span><br><span class="line">df.to_csv(<span class="string">&quot;豆瓣电影.csv&quot;</span>, index=<span class="literal">False</span>, header=<span class="literal">True</span>, encoding=<span class="string">&#x27;utf_8_sig&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2、我是如何“放弃”爬取多页数据的"><a href="#2、我是如何“放弃”爬取多页数据的" class="headerlink" title="2、我是如何“放弃”爬取多页数据的"></a>2、我是如何“放弃”爬取多页数据的</h2><p>&emsp;&emsp;接下来我们要做的问题就是多页爬取了，单页爬取对应的是一个<code>URL</code>，多页爬取对应的当然就是多个<code>URL</code>了</p><p>&emsp;&emsp;emmm，不太严格，严格来说应该是我们每次请求的<code>URL</code>附加的参数变了，我们找到每次请求附加的参数变化规律就可以了。</p><p>&emsp;&emsp;第一页对应的URL：<code>https://movie.douban.com/top250?start=0&amp;filter=</code></p><p>&emsp;&emsp;第二页对应的URL：<code>https://movie.douban.com/top250?start=25&amp;filter=</code></p><p>&emsp;&emsp;…</p><p>&emsp;&emsp;第十页对应的URL：<code>https://movie.douban.com/top250?start=225&amp;filter=</code></p><p>  很简单就发现了对吧，就是<code>start</code>参数的值变了，于是我们可以这样构造<code>URL</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://movie.douban.com/top250?start=&#x27;</span> + <span class="built_in">str</span>(k * <span class="number">25</span>)</span><br></pre></td></tr></table></figure><p>  用<code>for</code>循环遍历就好了。（当然还要注意data=[]要放在最外面，要不然获取每页数据时，data就被清空了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for k in range(10):</span><br><span class="line">    print(&quot;正在抓取第&#123;&#125;页数据...&quot;.format(k+1))</span><br><span class="line">url = &#x27;https://movie.douban.com/top250?start=&#x27; + str(k * 25)</span><br><span class="line">......再把之前的代码加上去就可以了。</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;大功告成！！！</p><p>&emsp;&emsp;可是，真的这样么，我太天真了，现实给我来了当头一棒。</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202111070131061.jpg"></p><p>&emsp;&emsp;第二页数据就报错了，没有<code>result[0][2]</code>条数据，也就是年份，emmm，其实不是年份，是因为我们写的正则表达式没有捕捉到主演信息，所以列表索引超了。仔细查找下问题，看下图！</p><p><img src="https://gitee.com/sun0225/photos/raw/master/img/202111070134179.jpg"></p><p>&emsp;&emsp;好吧，我确实忽略这个问题了，因为这个top榜主要是简介，字数什么的有限制，并不能完成主演等等详细数据的爬取任务，而且我们也没有去写异常处理。</p><p>&emsp;&emsp;仔细分析后，网页内容不只这一条不符合规范，如果要加入异常处理的话，需要加入很多，况且数据也不全，所以我放弃爬取多页了？？？</p><h2 id="3、我是如何完成爬取多页数据的"><a href="#3、我是如何完成爬取多页数据的" class="headerlink" title="3、我是如何完成爬取多页数据的"></a>3、我是如何完成爬取多页数据的</h2><p>&emsp;&emsp;在参考了其他同类的爬虫文章后，我发现，top 250 页面只是电影简介，详情都在点开电影链接之后。</p><p>&emsp;&emsp;比如，我们打开《肖申克的救赎》这部电影，该电影的所有信息都会按规范的格式展现在了我们的面前。</p><p>&emsp;&emsp;我们再写一个爬虫，爬取每个电影的链接，然后打开电影详情链接，去解析详情文本就可以了。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071350199.jpg"></p><p>&emsp;&emsp;具体代码如下，这个我就不做具体分析了，思路和上面差不多，最复杂的就是解析数据和数据清洗那里，需要一点点尝试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">@Time : 2021/11/7 下午 4:25</span></span><br><span class="line"><span class="string">@Author : SunGuoqi</span></span><br><span class="line"><span class="string">@Website : https://sunguoqi.com</span></span><br><span class="line"><span class="string">@Github: https://github.com/sun0225SUN</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据存放在列表里</span></span><br><span class="line">datas = []</span><br><span class="line"><span class="comment"># 遍历十页数据</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在抓取第&#123;&#125;页数据...&quot;</span>.<span class="built_in">format</span>(k + <span class="number">1</span>))</span><br><span class="line">    url = <span class="string">&#x27;https://movie.douban.com/top250?start=&#x27;</span> + <span class="built_in">str</span>(k * <span class="number">25</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    soup = BeautifulSoup(r.text, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    <span class="comment"># 查找电影链接</span></span><br><span class="line">    lists = soup.find_all(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;hd&#x27;</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 遍历每条电影链接</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> lists:</span><br><span class="line">        href = item.a[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">        <span class="comment"># 休息一下，防止被封</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="comment"># 请求每条电影，获得详细信息</span></span><br><span class="line">        response = requests.get(href, headers=headers)</span><br><span class="line">        <span class="comment"># 把获取好的电影数据打包成BeautifulSoup对象</span></span><br><span class="line">        movie_soup = BeautifulSoup(response.text, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 解析每条电影数据</span></span><br><span class="line">        <span class="comment"># 片名</span></span><br><span class="line">        name = movie_soup.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:itemreviewed&#x27;</span>&#125;).text.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 上映年份</span></span><br><span class="line">        year = movie_soup.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;year&#x27;</span>&#125;).text.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment"># 评分</span></span><br><span class="line">        score = movie_soup.find(<span class="string">&#x27;strong&#x27;</span>, &#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:average&#x27;</span>&#125;).text</span><br><span class="line">        <span class="comment"># 评价人数</span></span><br><span class="line">        votes = movie_soup.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:votes&#x27;</span>&#125;).text</span><br><span class="line">        infos = movie_soup.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;info&#x27;</span>&#125;).text.split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">1</span>:<span class="number">11</span>]</span><br><span class="line">        <span class="comment"># infos返回的是一个列表，我们只需要索引提取就好了</span></span><br><span class="line">        <span class="comment"># 导演</span></span><br><span class="line">        director = infos[<span class="number">0</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 编剧</span></span><br><span class="line">        scriptwriter = infos[<span class="number">1</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 主演</span></span><br><span class="line">        actor = infos[<span class="number">2</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 类型</span></span><br><span class="line">        filmtype = infos[<span class="number">3</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 国家/地区</span></span><br><span class="line">        area = infos[<span class="number">4</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 数据清洗一下</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> area:</span><br><span class="line">            area = infos[<span class="number">5</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27; / &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 语言</span></span><br><span class="line">            language = infos[<span class="number">6</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27; / &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            area = infos[<span class="number">4</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27; / &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 语言</span></span><br><span class="line">            language = infos[<span class="number">5</span>].split(<span class="string">&#x27;: &#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27; / &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;大陆&#x27;</span> <span class="keyword">in</span> area <span class="keyword">or</span> <span class="string">&#x27;香港&#x27;</span> <span class="keyword">in</span> area <span class="keyword">or</span> <span class="string">&#x27;台湾&#x27;</span> <span class="keyword">in</span> area:</span><br><span class="line">            area = <span class="string">&#x27;中国&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;戛纳&#x27;</span> <span class="keyword">in</span> area:</span><br><span class="line">            area = <span class="string">&#x27;法国&#x27;</span></span><br><span class="line">        <span class="comment"># 时长</span></span><br><span class="line">        times0 = movie_soup.find(attrs=&#123;<span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:runtime&#x27;</span>&#125;).text</span><br><span class="line">        times = re.findall(<span class="string">&#x27;\d+&#x27;</span>, times0)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将数据写入列表</span></span><br><span class="line">        datas.append(&#123;</span><br><span class="line">            <span class="string">&#x27;片名&#x27;</span>: name,</span><br><span class="line">            <span class="string">&#x27;上映年份&#x27;</span>: year,</span><br><span class="line">            <span class="string">&#x27;评分&#x27;</span>: score,</span><br><span class="line">            <span class="string">&#x27;评价人数&#x27;</span>: votes,</span><br><span class="line">            <span class="string">&#x27;导演&#x27;</span>: director,</span><br><span class="line">            <span class="string">&#x27;编剧&#x27;</span>: scriptwriter,</span><br><span class="line">            <span class="string">&#x27;主演&#x27;</span>: actor,</span><br><span class="line">            <span class="string">&#x27;类型&#x27;</span>: filmtype,</span><br><span class="line">            <span class="string">&#x27;国家/地区&#x27;</span>: area,</span><br><span class="line">            <span class="string">&#x27;语言&#x27;</span>: language,</span><br><span class="line">            <span class="string">&#x27;时长(分钟)&#x27;</span>: times</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;电影《&#123;0&#125;》已爬取完成...&quot;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入到文件</span></span><br><span class="line">df = pd.DataFrame(datas)</span><br><span class="line">df.to_csv(<span class="string">&quot;豆瓣电影top250.csv&quot;</span>, index=<span class="literal">False</span>, header=<span class="literal">True</span>, encoding=<span class="string">&#x27;utf_8_sig&#x27;</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>infos</code>那里直接提取这个<code>div</code>里面所有的子孙节点的文本，返回的是一个列表，像下面这样，然后用索引去提取，再清洗下就可以存储到字典列表里了，还有要注意豆瓣<code>反爬机制</code>，不要请求过快，<code>time.sleep(0.5)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;导演: 弗兰克·德拉邦特&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;编剧: 弗兰克·德拉邦特 / 斯蒂芬·金&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;主演: 蒂姆·罗宾斯 / 摩根·弗里曼 / 鲍勃·冈顿 / 威廉姆·赛德勒 / 克兰西·布朗 / 吉尔·贝罗斯 / 马克·罗斯顿 / 詹姆斯·惠特摩 / 杰弗里·德曼 / 拉里·布兰登伯格 / 尼尔·吉恩托利 / 布赖恩·利比 / 大卫·普罗瓦尔 / 约瑟夫·劳格诺 / 祖德·塞克利拉 / 保罗·麦克兰尼 / 芮妮·布莱恩 / 阿方索·弗里曼 / V·J·福斯特 / 弗兰克·梅德拉诺 / 马克·迈尔斯 / 尼尔·萨默斯 / 耐德·巴拉米 / 布赖恩·戴拉特 / 唐·麦克马纳斯&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;类型: 剧情 / 犯罪&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;制片国家/地区: 美国&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;语言: 英语&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;上映日期: 1994-09-10(多伦多电影节) / 1994-10-14(美国)&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;片长: 142分钟&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;又名: 月黑高飞(港) / 刺激1995(台) / 地狱诺言 / 铁窗岁月 / 消香克的救赎&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;IMDb: tt0111161&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;&#x27;</span>]</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;因为我们这次请求的链接，解析的文本确实比较多，所以我们需要稍等一会才可以拿到我们的数据了，不妨去喝杯咖啡~</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071627548.jpg"></p><h1 id="六、数据可视化分析-Echarts"><a href="#六、数据可视化分析-Echarts" class="headerlink" title="六、数据可视化分析 Echarts"></a>六、数据可视化分析 Echarts</h1><p>&emsp;&emsp;关于数据爬取我们就完成了，接下来我们要做的就是可视化分析。</p><p>&emsp;&emsp;可视化分析这块我还没有系统学习，以下内容是借鉴其他博主的。</p><p>&emsp;&emsp;参考链接：</p><p>&emsp;&emsp;<a href="https://blog.csdn.net/weixin_42512684/article/details/90708037">https://blog.csdn.net/weixin_42512684/article/details/90708037</a>    </p><p>&emsp;&emsp; <a href="https://blog.csdn.net/weixin_42152811/article/details/115366846">https://blog.csdn.net/weixin_42152811/article/details/115366846</a></p><h2 id="1、导入pyecharts模块"><a href="#1、导入pyecharts模块" class="headerlink" title="1、导入pyecharts模块"></a>1、导入<code>pyecharts</code>模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar</span><br></pre></td></tr></table></figure><h2 id="2、各地区上映电影数量前十"><a href="#2、各地区上映电影数量前十" class="headerlink" title="2、各地区上映电影数量前十"></a>2、各地区上映电影数量前十</h2><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/01.html">https://box.sunguoqi.com/douban/01.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071731842.jpg"></p><center>源代码</center><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">&#x27;top250.csv&#x27;</span>)</span><br><span class="line">year_counts = data[<span class="string">&#x27;上映年份&#x27;</span>].value_counts()</span><br><span class="line">year_counts.columns = [<span class="string">&#x27;上映年份&#x27;</span>, <span class="string">&#x27;数量&#x27;</span>]</span><br><span class="line">year_counts = year_counts.sort_index()</span><br><span class="line">c = (</span><br><span class="line">    Bar()</span><br><span class="line">        .add_xaxis(<span class="built_in">list</span>(year_counts.index))</span><br><span class="line">        .add_yaxis(<span class="string">&#x27;上映数量&#x27;</span>, year_counts.values.tolist())</span><br><span class="line">        .set_global_opts(</span><br><span class="line">        title_opts=opts.TitleOpts(title=<span class="string">&#x27;各年份上映电影数量&#x27;</span>),</span><br><span class="line">        yaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;上映数量&#x27;</span>),</span><br><span class="line">        xaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;上映年份&#x27;</span>),</span><br><span class="line">        datazoom_opts=[opts.DataZoomOpts(), opts.DataZoomOpts(type_=<span class="string">&#x27;inside&#x27;</span>)], )</span><br><span class="line">        .render(<span class="string">&#x27;各年份上映电影数量.html&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="3、电影评价人数前二十"><a href="#3、电影评价人数前二十" class="headerlink" title="3、电影评价人数前二十"></a>3、电影评价人数前二十</h2><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/02.html">https://box.sunguoqi.com/douban/02.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071738641.jpg"></p><center>源代码</center><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">&#x27;top250.csv&#x27;</span>)</span><br><span class="line">df = data.sort_values(by=<span class="string">&#x27;评价人数&#x27;</span>, ascending=<span class="literal">True</span>)</span><br><span class="line">c = (</span><br><span class="line">    Bar()</span><br><span class="line">        .add_xaxis(df[<span class="string">&#x27;片名&#x27;</span>].values.tolist()[-<span class="number">20</span>:])</span><br><span class="line">        .add_yaxis(<span class="string">&#x27;评价人数&#x27;</span>, df[<span class="string">&#x27;评价人数&#x27;</span>].values.tolist()[-<span class="number">20</span>:])</span><br><span class="line">        .reversal_axis()</span><br><span class="line">        .set_global_opts(</span><br><span class="line">        title_opts=opts.TitleOpts(title=<span class="string">&#x27;电影评价人数&#x27;</span>),</span><br><span class="line">        yaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;片名&#x27;</span>),</span><br><span class="line">        xaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;人数&#x27;</span>),</span><br><span class="line">        datazoom_opts=opts.DataZoomOpts(type_=<span class="string">&#x27;inside&#x27;</span>),</span><br><span class="line">    )</span><br><span class="line">        .set_series_opts(label_opts=opts.LabelOpts(position=<span class="string">&quot;right&quot;</span>))</span><br><span class="line">        .render(<span class="string">&#x27;电影评价人数前二十.html&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="4、各年份上映电影数量"><a href="#4、各年份上映电影数量" class="headerlink" title="4、各年份上映电影数量"></a>4、各年份上映电影数量</h2><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/03.html">https://box.sunguoqi.com/douban/03.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071739220.jpg"></p><center>源代码</center><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">&#x27;top250.csv&#x27;</span>)</span><br><span class="line">country_counts = data[<span class="string">&#x27;国家/地区&#x27;</span>].value_counts()</span><br><span class="line">country_counts.columns = [<span class="string">&#x27;国家/地区&#x27;</span>, <span class="string">&#x27;数量&#x27;</span>]</span><br><span class="line">country_counts = country_counts.sort_values(ascending=<span class="literal">True</span>)</span><br><span class="line">c = (</span><br><span class="line">    Bar()</span><br><span class="line">        .add_xaxis(<span class="built_in">list</span>(country_counts.index)[-<span class="number">10</span>:])</span><br><span class="line">        .add_yaxis(<span class="string">&#x27;地区上映数量&#x27;</span>, country_counts.values.tolist()[-<span class="number">10</span>:])</span><br><span class="line">        .reversal_axis()</span><br><span class="line">        .set_global_opts(</span><br><span class="line">        title_opts=opts.TitleOpts(title=<span class="string">&#x27;地区上映电影数量&#x27;</span>),</span><br><span class="line">        yaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;国家/地区&#x27;</span>),</span><br><span class="line">        xaxis_opts=opts.AxisOpts(name=<span class="string">&#x27;上映数量&#x27;</span>),</span><br><span class="line">    )</span><br><span class="line">        .set_series_opts(label_opts=opts.LabelOpts(position=<span class="string">&quot;right&quot;</span>))</span><br><span class="line">        .render(<span class="string">&#x27;各地区上映电影数量前十.html&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="5、其他可视化分析实例"><a href="#5、其他可视化分析实例" class="headerlink" title="5、其他可视化分析实例"></a>5、其他可视化分析实例</h2><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/04.html">https://box.sunguoqi.com/douban/04.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071743994.jpg"></p><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/05.html">https://box.sunguoqi.com/douban/05.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071744754.jpg"></p><center>在线演示地址：<a href="https://box.sunguoqi.com/douban/06.html">https://box.sunguoqi.com/douban/06.html</a></center><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202111071745526.jpg"></p><h1 id="七、后记"><a href="#七、后记" class="headerlink" title="七、后记"></a>七、后记</h1><p>&emsp;&emsp;数据可视化还是很酷的，大家可以点进去网址查看，图表是可以动态交互的。<br>&emsp;&emsp;到此，本文就结束了！爬虫代码写的确实比较烂，并没有进行模块化编写以及异常处理，仅供交流！<br>&emsp;&emsp;欢迎关注小孙同学的个人公众号<code>【不负人间理想】</code>，愿你我都可以不负人间理想，成为更好的自己！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;站在巨人的肩膀上！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;人类社会已经进入大数据时代，大数据深刻改变着我们的工作和生活。随着互联网、移动互联网、社交网络等的迅猛发展，各种数量庞大、种类繁多、随时随地产生和更新的大数据，蕴</summary>
      
    
    
    
    <category term="网络爬虫学习笔记" scheme="https://sunguoqi.com/categories/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="爬虫" scheme="https://sunguoqi.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>炫酷流光个人主页源码分享及在线部署教程</title>
    <link href="https://sunguoqi.com/posts/31034.html"/>
    <id>https://sunguoqi.com/posts/31034.html</id>
    <published>2021-10-10T07:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、写在前面"><a href="#一、写在前面" class="headerlink" title="一、写在前面"></a>一、写在前面</h1><br/>&emsp;&emsp;编程之所以迷人，正因其永远不乏乐趣，今天给大家分享一套精美的个人主页源码，并附带在线部署教程，一起来感受程序的魅力吧！<h1 id="二、效果展示"><a href="#二、效果展示" class="headerlink" title="二、效果展示"></a>二、效果展示</h1><p>&emsp;&emsp;网址一（部署在服务器上，响应速度较快）：<a href="https://sunguoqi.com/about/">https://sunguoqi.com/about/</a></p><p>&emsp;&emsp;网址二（托管在GitHub上，响应速度较慢）：<a href="https://sun0225sun.github.io/My-profile/">https://sun0225sun.github.io/My-profile/</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110092032792.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110092033343.png"></p><h1 id="三、部分源码窥探"><a href="#三、部分源码窥探" class="headerlink" title="三、部分源码窥探"></a>三、部分源码窥探</h1><h2 id="1、HTML"><a href="#1、HTML" class="headerlink" title="1、HTML"></a>1、HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">id</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210715233345.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> I am your sunshine<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">href</span>=<span class="string">&quot;images/avatar.bab2b7d4.jpeg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/h.9c69ed6c.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/nekotora.99cf6f8c.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://www.googletagmanager.com/gtag/js?id=UA-137340638-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">dataLayer.push(<span class="built_in">arguments</span>)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.dataLayer = <span class="built_in">window</span>.dataLayer || [], a(<span class="string">&quot;js&quot;</span>, <span class="keyword">new</span> <span class="built_in">Date</span>), a(<span class="string">&quot;config&quot;</span>, <span class="string">&quot;UA-137340638-1&quot;</span>);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.sunguoqi.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;clip&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.sunguoqi.com/categories/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>归档<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;clip&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.sunguoqi.com/archives/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>文章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;clip&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.sunguoqi.com/comments/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>留言板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onContextMenu</span>=<span class="string">&quot;alert(&#x27;禁止查看源代码，您的行为已记录。&#x27;); return false&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">NOOP</span>=<span class="string">&quot;if (window.event != null &amp;&amp; window.event.button == 2) alert (&#x27;Thanks...&#x27;);&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;background&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;startrack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        ...................此处省略部分代码........................</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer ch&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>小孙同学在努力<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>蘑菇森林的尽头，新世界的起点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;c&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Say hello to me @ sunshine<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/page.3a0791a3.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/stats.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;https://api.uomg.com/api/rand.music?sort=热歌榜&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、CSS"><a href="#2、CSS" class="headerlink" title="2、CSS"></a>2、CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(.<span class="number">19</span>, <span class="number">1</span>, .<span class="number">22</span>, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Microsoft YaHei;</span><br><span class="line">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">1150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#212121</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden</span><br><span class="line">&#125;</span><br><span class="line">..............此处省略部分代码................</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">700px</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">body</span>,</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">min-width</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.container</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: auto;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5%</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">div</span><span class="selector-class">.el</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">75px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: -<span class="number">40%</span> auto <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...............省略部分代码................</span><br><span class="line">    <span class="selector-class">.gate</span> <span class="selector-class">.links</span> <span class="selector-class">.item</span> <span class="selector-class">.inner</span> <span class="selector-tag">h5</span>,</span><br><span class="line">    <span class="selector-class">.gate</span> <span class="selector-class">.links</span> <span class="selector-class">.item</span> <span class="selector-class">.inner</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.footer</span> &#123;</span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">100px</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.footer</span> <span class="selector-tag">h3</span>,</span><br><span class="line">    <span class="selector-class">.footer</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">letter-spacing</span>: .<span class="number">2em</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: nekotora;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">../fonts/nekotora.54f9b137.eot</span>);</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">../fonts/nekotora.54f9b137.eot#iefix</span>) <span class="built_in">format</span>(<span class="string">&quot;embedded-opentype&quot;</span>), <span class="built_in">url</span>(<span class="string">../fonts/nekotora.4ea5ebe6.woff2</span>) <span class="built_in">format</span>(<span class="string">&quot;woff2&quot;</span>), <span class="built_in">url</span>(<span class="string">../fonts/nekotora.9106c612.woff</span>) <span class="built_in">format</span>(<span class="string">&quot;woff&quot;</span>), <span class="built_in">url</span>(<span class="string">../fonts/nekotora.28169ea4.ttf</span>) <span class="built_in">format</span>(<span class="string">&quot;truetype&quot;</span>), <span class="built_in">url</span>(<span class="string">../images/nekotora.33032896.svg#nekotora</span>) <span class="built_in">format</span>(<span class="string">&quot;svg&quot;</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[class*=<span class="string">&quot; icon-&quot;</span>]</span>:before,</span><br><span class="line">[class^=icon-]:before &#123;</span><br><span class="line">    font-family: nekotora;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    speak: none;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">text-decoration</span>: inherit;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: .<span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-variant</span>: normal;</span><br><span class="line">    <span class="attribute">text-transform</span>: none;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: .<span class="number">2em</span>;</span><br><span class="line">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">    -moz-osx-<span class="attribute">font-smoothing</span>: grayscale</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-search</span>:before &#123;</span><br><span class="line">    content: <span class="string">&quot;\e800&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">.............此处省略部分代码..............</span><br></pre></td></tr></table></figure><h2 id="3、JS"><a href="#3、JS" class="headerlink" title="3、JS"></a>3、JS</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">global</span></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">global</span>.Ta=<span class="built_in">global</span>.Ta||&#123;&#125;;</span><br><span class="line">    Ta.hack=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">params</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">conf</span>:&#123;<span class="attr">sid</span>:<span class="number">30582263</span>,<span class="attr">pf</span>:<span class="number">1</span>,<span class="attr">logo</span>:<span class="number">255</span>,<span class="attr">hot</span>:&#123;&#125;&#125;        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(<span class="built_in">this</span>);</span><br><span class="line">..........此处省略部分代码..........</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Bb20&quot;</span>: [<span class="function"><span class="keyword">function</span> (<span class="params"><span class="built_in">require</span>, <span class="built_in">module</span>, <span class="built_in">exports</span></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.prototype.document = <span class="built_in">window</span>.document, <span class="built_in">Object</span>.prototype.location = <span class="built_in">window</span>.location; <span class="keyword">var</span> t = <span class="built_in">require</span>(<span class="string">&quot;zepto&quot;</span>).$; <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> e = [<span class="string">&quot;希望能成为有趣的人&quot;</span>, <span class="string">&quot;给时光以生命&lt;br&gt;给岁月以文明&quot;</span>, <span class="string">&quot;你好，请多指教&quot;</span>, <span class="string">&quot;一望无际的迷雾中，&lt;br&gt;有人在寻找光明!&quot;</span>, <span class="string">&quot;你所热爱的&lt;br&gt;就是你的生活&quot;</span>, <span class="string">&quot;当你在凝视着网页的时候&lt;br&gt;网页也正在凝视着你&quot;</span>, <span class="string">&quot;热爱……&quot;</span>, <span class="string">&quot;平凡的日常正奇迹的发生着&quot;</span>, <span class="string">&quot;敬畏之心！&quot;</span>, <span class="string">&quot;赞美之心！&quot;</span>, <span class="string">&quot;我很好奇！&quot;</span>, <span class="string">&quot;欢迎大家光临星象馆&lt;br&gt;这里有着无论何时永远不会消失&lt;br&gt;美丽的无穷光辉&lt;br&gt;满天的星星等候着大家的到来&quot;</span>, <span class="string">&quot;*舒缓的现代音乐*&quot;</span>],...............此处省略部分代码..............</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="四、完整源码获取"><a href="#四、完整源码获取" class="headerlink" title="四、完整源码获取"></a>四、完整源码获取</h1><p>&emsp;&emsp;微信搜索公众号【不负人间理想】，关注公众号后，回复关键词【流光个人主页源码】即可获得下载链接！！！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101048147.png"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101100869.png"></p><p>&emsp;&emsp;从公众号获取源码解压后，您将拥有以下文件，双击<code>index.html</code>即可看到效果!</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101105634.jpg"></p><h1 id="五、DIY建议"><a href="#五、DIY建议" class="headerlink" title="五、DIY建议"></a>五、DIY建议</h1><p>&emsp;&emsp;用您常用的编辑器打开文件夹（推荐使用<code>VScode</code>），DIY的话主要修改<code>index.htm</code>l里的内容和结构，注意程序引入的是<code>fontawesome</code>字体图标，可在<code>nekotora.99cf6f8c.css</code>中修改！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110092105171.jpg"></p><h1 id="六、在线部署教程"><a href="#六、在线部署教程" class="headerlink" title="六、在线部署教程"></a>六、在线部署教程</h1><p>&emsp;&emsp;DIY之后，您的个人网页就做好了，但是仅支持本地访问，小伙伴们无法在线访问哇？怎么办呢？？？</p><p>&emsp;&emsp;emmmmmmmm…..</p><p>&emsp;&emsp;今天教大家一种免费的解决方案，将代码托管在GitHub上，并利用<code>GitHub pages</code>在线部署！</p><h2 id="1、注册GitHub"><a href="#1、注册GitHub" class="headerlink" title="1、注册GitHub"></a>1、注册GitHub</h2><p>&emsp;&emsp;进入<a href="https://github.com/">GitHub官网</a>注册账号，已有账号的童鞋可以跳过。（GitHub的注册页面真的是越来越炫酷了）</p><p>&emsp;&emsp;视频演示：<a href="https://www.bilibili.com/video/BV1Ev411P7BN">https://www.bilibili.com/video/BV1Ev411P7BN</a></p><h2 id="2、新建一个仓库"><a href="#2、新建一个仓库" class="headerlink" title="2、新建一个仓库"></a>2、新建一个仓库</h2><p>&emsp;&emsp;点击主页右上角的<code>+</code>新建一个仓库，填写仓库名，描述信息，添加一个自述文件(可选)后点击<code>creat repository</code>确认创建。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101414224.jpg"></p><h2 id="3、将代码上传到仓库"><a href="#3、将代码上传到仓库" class="headerlink" title="3、将代码上传到仓库"></a>3、将代码上传到仓库</h2><h3 id="3-1-GitHub在线上传"><a href="#3-1-GitHub在线上传" class="headerlink" title="3.1 GitHub在线上传"></a>3.1 GitHub在线上传</h3><p>&emsp;&emsp;选择<code>Add file</code>——&gt;<code>Upload files</code>——&gt;<code>CTRL+A 全选文件</code>——&gt;<code>拖动到GitHub的上传区域</code>——&gt;<code>等待上传</code> ——&gt;<code>上传成功</code>——&gt;<code>确认Commit Changes</code></p><blockquote><p>注意这里上传的是文件夹里面的文件（包含四个文件夹和一个<code>index.html</code>文件），而不是上传单独的一个文件夹。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101430549.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101437827.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101438458.jpg"></p><h3 id="3-2-使用git上传"><a href="#3-2-使用git上传" class="headerlink" title="3.2 使用git上传"></a>3.2 使用git上传</h3><p>&emsp;&emsp;将远程仓库的代码下载到本地<code>git clone https://github.com/你的仓库地址</code></p><p>&emsp;&emsp;然后执行<code>git add</code> <code>git commit </code> <code>git push</code>命令就可以了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有（C） Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindows</span><br><span class="line"></span><br><span class="line"><span class="built_in">PS</span> I:\桌面\My<span class="literal">-profile</span>&gt; git add .</span><br><span class="line"></span><br><span class="line"><span class="built_in">PS</span> I:\桌面\My<span class="literal">-profile</span>&gt; git commit <span class="literal">-m</span> <span class="string">&quot;first commit&quot;</span></span><br><span class="line">[<span class="type">main</span> <span class="type">cd1a05f</span>] first commit</span><br><span class="line"> <span class="number">11</span> files changed, <span class="number">1245</span> insertions(+)</span><br><span class="line"> create mode <span class="number">100644</span> css/<span class="built_in">h</span>.<span class="number">9</span>c69ed6c.css</span><br><span class="line"> create mode <span class="number">100644</span> css/nekotora.<span class="number">99</span>cf6f8c.css</span><br><span class="line"> create mode <span class="number">100644</span> fonts/nekotora.<span class="number">28169</span>ea4.ttf</span><br><span class="line"> create mode <span class="number">100644</span> fonts/nekotora.<span class="number">4</span>ea5ebe6.woff2</span><br><span class="line"> create mode <span class="number">100644</span> fonts/nekotora.<span class="number">54</span>f9b137.eot</span><br><span class="line"> create mode <span class="number">100644</span> fonts/nekotora.<span class="number">9106</span>c612.woff</span><br><span class="line"> create mode <span class="number">100644</span> images/butterfly.png</span><br><span class="line"> create mode <span class="number">100644</span> images/hexo.jpg</span><br><span class="line"> create mode <span class="number">100644</span> index.html</span><br><span class="line"> create mode <span class="number">100644</span> js/page.<span class="number">3</span>a0791a3.js</span><br><span class="line"> create mode <span class="number">100644</span> js/stats.js</span><br><span class="line"> </span><br><span class="line"><span class="built_in">PS</span> I:\桌面\My<span class="literal">-profile</span>&gt; git push</span><br><span class="line">Enumerating objects: <span class="number">18</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">18</span>/<span class="number">18</span>), done.</span><br><span class="line">Delta compression <span class="keyword">using</span> up to 8 threads</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">17</span>/<span class="number">17</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">17</span>/<span class="number">17</span>), <span class="number">56.44</span> KiB | <span class="number">8.06</span> MiB/s, done.</span><br><span class="line">Total <span class="number">17</span> (delta <span class="number">1</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack<span class="literal">-reused</span> <span class="number">0</span></span><br><span class="line">remote: Resolving deltas: <span class="number">100</span>% (<span class="number">1</span>/<span class="number">1</span>), done.</span><br><span class="line">To https://github.com/sun0225SUN/My<span class="literal">-profile</span>.git</span><br><span class="line">   <span class="number">01178</span>c4..cd1a05f  main -&gt; main</span><br><span class="line"><span class="built_in">PS</span> I:\桌面\My<span class="literal">-profile</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="4、GitHub-Pages设置"><a href="#4、GitHub-Pages设置" class="headerlink" title="4、GitHub Pages设置"></a>4、GitHub Pages设置</h2><p>&emsp;&emsp;点击仓库页面上的<code>Settings</code>——&gt;选择<code>Pages</code>选项——&gt;将<code>Source</code>设置为<code>main</code>分支——&gt;<code>Save</code>保存</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101415953.jpg"></p><h2 id="5、大功告成！"><a href="#5、大功告成！" class="headerlink" title="5、大功告成！"></a>5、大功告成！</h2><p>&emsp;&emsp;点击<code>Save</code>保存之后，自动刷新页面，我们就可以看到项目的访问网址了，比如<code>https://sun0225sun.github.io/My-profile/</code></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202110101417355.jpg"></p><h1 id="七、写在后面"><a href="#七、写在后面" class="headerlink" title="七、写在后面"></a>七、写在后面</h1><p>&emsp;&emsp;<code>ctrl+c</code> <code>ctrl+v</code> 即使你没有任何的项目部署经验，你也可以拥有如此炫酷的个人主页，码字不易，点个赞支持下呗！</p><p>&emsp;&emsp;欢迎大家关注我的个人公众号【不负人间理想】，愿你我都可以不负人家理想，成为更好的自己！</p>]]></content>
    
    
    <summary type="html">编程之所以迷人，正因其永远不乏乐趣！</summary>
    
    
    
    <category term="经验技巧" scheme="https://sunguoqi.com/categories/%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>Butterfly 主题添加天气小部件</title>
    <link href="https://sunguoqi.com/posts/32121.html"/>
    <id>https://sunguoqi.com/posts/32121.html</id>
    <published>2021-09-01T14:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.685Z</updated>
    
    <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>&emsp;&emsp;如果你想要做一件事情，首先，你应该去了解这件事情，了解这件事情别人有没有做过。第二，这件事情你可不可以做的比别人更好。</p></div><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;我不是魔改大佬，但有一颗折腾的心，在网站上添加天气小部件，感觉还是有点意思的。但浏览了仅有的几篇相关教程之后，感觉写的都差点意思，于是就自己写下了这篇文章。</p><h1 id="二、效果预览"><a href="#二、效果预览" class="headerlink" title="二、效果预览"></a>二、效果预览</h1><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">电脑端</button></li><li class="tab"><button type="button" data-href="#note1-2">手机端</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012106653.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012107332.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="三、具体步骤"><a href="#三、具体步骤" class="headerlink" title="三、具体步骤"></a>三、具体步骤</h1><h2 id="1、申请天气API"><a href="#1、申请天气API" class="headerlink" title="1、申请天气API"></a>1、申请天气API</h2><p>&emsp;&emsp;国内天气API有多种，此处推荐<code>和风天气</code>，如果您第一次使用和风天气，首先，您应该去官网注册一个账号，<a href="https://id.qweather.com/#/register?redirect=https%3A%2F%2Fconsole.qweather.com">点我进入</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012116465.jpg"></p><p>&emsp;&emsp;申请账号并登录后，请到<strong>和风天气开发平台</strong>创建一个<strong>简约插件</strong>，<a href="https://widget.qweather.com/create-simple">点我进入</a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012116769.jpg"></p><p>&emsp;&emsp;配置插件的相关属性，首先，您应该为您的插件取一个名字，内容属性均可以自定义。</p><p>&emsp;&emsp;注意：为了确保天气小部件的正常显示，这里选择固定在浏览器中，具体位置后续在调节。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012122302.jpg"></p><p>&emsp;&emsp;设置完成后，选择下面的生成代码即可，生成的代码如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;he-plugin-simple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">WIDGET = &#123;</span></span><br><span class="line"><span class="javascript">  <span class="string">&quot;CONFIG&quot;</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;modules&quot;</span>: <span class="string">&quot;01234&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;background&quot;</span>: <span class="string">&quot;5&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;tmpColor&quot;</span>: <span class="string">&quot;FF9900&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;tmpSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;cityColor&quot;</span>: <span class="string">&quot;4A86E8&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;citySize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;aqiColor&quot;</span>: <span class="string">&quot;FF9900&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;aqiSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;weatherIconSize&quot;</span>: <span class="string">&quot;24&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;alertIconSize&quot;</span>: <span class="string">&quot;18&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;padding&quot;</span>: <span class="string">&quot;10px 10px 10px 10px&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;shadow&quot;</span>: <span class="string">&quot;0&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;language&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;fixed&quot;</span>: <span class="string">&quot;true&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;vertical&quot;</span>: <span class="string">&quot;top&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;horizontal&quot;</span>: <span class="string">&quot;left&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;left&quot;</span>: <span class="string">&quot;10&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;top&quot;</span>: <span class="string">&quot;10&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&quot;key&quot;</span>: <span class="string">&quot;您自己的key&quot;</span></span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、添加-lt-div-gt"><a href="#2、添加-lt-div-gt" class="headerlink" title="2、添加&lt;div&gt;"></a>2、添加<code>&lt;div&gt;</code></h2><p>&emsp;&emsp;打开您的博客所在文件夹，在<code>blog\themes\butterfly\layout\includes\headers</code>目录下的<code>nav.pug</code>文件中添加以下内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;he-plugin-simple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> 也可以写成这种形式<code>  #he-plugin-simple</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012128396.jpg"></p><h2 id="3、添加weather-js"><a href="#3、添加weather-js" class="headerlink" title="3、添加weather.js"></a>3、添加<code>weather.js</code></h2><p>&emsp;&emsp;打开您的博客所在文件夹，在<code>blog\themes\butterfly\source\js</code>目录下添加<code>weather.js</code>文件，并填入一下内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">WIDGET = &#123;</span><br><span class="line">  <span class="string">&quot;CONFIG&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;modules&quot;</span>: <span class="string">&quot;01234&quot;</span>,</span><br><span class="line">    <span class="string">&quot;background&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tmpColor&quot;</span>: <span class="string">&quot;4A86E8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tmpSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cityColor&quot;</span>: <span class="string">&quot;FF9900&quot;</span>,</span><br><span class="line">    <span class="string">&quot;citySize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;aqiColor&quot;</span>: <span class="string">&quot;4A86E8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;aqiSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;weatherIconSize&quot;</span>: <span class="string">&quot;24&quot;</span>,</span><br><span class="line">    <span class="string">&quot;alertIconSize&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;padding&quot;</span>: <span class="string">&quot;0px 0px 0px 0px&quot;</span>,</span><br><span class="line">    <span class="string">&quot;shadow&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;language&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">    <span class="string">&quot;fixed&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vertical&quot;</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">    <span class="string">&quot;horizontal&quot;</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">    <span class="string">&quot;left&quot;</span>: <span class="string">&quot;125&quot;</span>,</span><br><span class="line">    <span class="string">&quot;top&quot;</span>: <span class="string">&quot;20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;key&quot;</span>: <span class="string">&quot;你的key&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012133220.jpg"></p><h2 id="4、Inject引入"><a href="#4、Inject引入" class="headerlink" title="4、Inject引入"></a>4、Inject引入</h2><p>&emsp;&emsp;在配置文件<code>_config.butterfly</code>的<code>inject</code>属性中引入以下代码。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;/js/weather.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012159223.jpg"></p><h2 id="5、调试"><a href="#5、调试" class="headerlink" title="5、调试"></a>5、调试</h2><p>&emsp;&emsp;在终端输入<code>hexo clean</code> <code>hexo g</code> <code>hexo s</code>后运行博客，调试<code>left</code>和<code>top</code>属性，使天气小部件显示在合适位置。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012139035.jpg"></p><p>&emsp;&emsp;前端调试后，记修改<code>weather.js</code>文件中的<code>left</code> <code>top</code>属性。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202109012141616.jpg"></p><h1 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h1><p>&emsp;&emsp;大致流程就是这样，其实很简单，emmm，好吧，确实很简单，欢迎各位大佬在评论区留言交流。</p>]]></content>
    
    
    <summary type="html">为网站添加天气小部件</summary>
    
    
    
    <category term="个人网站" scheme="https://sunguoqi.com/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="Butterfly" scheme="https://sunguoqi.com/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Github首页美化教程</title>
    <link href="https://sunguoqi.com/posts/36473.html"/>
    <id>https://sunguoqi.com/posts/36473.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.697Z</updated>
    
    <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>代码可以不会敲，但是逼格一定要高！</p></div><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>&emsp;&emsp;相信很多童靴在敲代码之余，都致力于美化自身所处的环境。比如对博客网站的魔改，对IDE的美化，对电脑壁纸的精挑细选等等。</p><p>&emsp;&emsp;GitHub（Gayhub）相信大多数童靴（程序基）都不陌生，GitHub用户主页布局默认是这样的。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291659421.jpg"></p><p align="center">然鹅...</p><p align="center">我们在GitHub上见到过更炫酷的主页。</p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">像这样</button></li><li class="tab"><button type="button" data-href="#note1-2">这样</button></li><li class="tab"><button type="button" data-href="#note1-3">甚至可以在GitHub上下棋</button></li><li class="tab"><button type="button" data-href="#note1-4">显示自己的社交状态</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291708380.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291708258.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-3"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291711759.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-4"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291717407.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p align="center">哇哦，太酷了，我也想拥有！！！</p><h1 id="二、如何实现"><a href="#二、如何实现" class="headerlink" title="二、如何实现"></a>二、如何实现</h1><p>&emsp;&emsp;其实DIY Github 的首页很简单，我们只需要新建一个仓库名和自己 Github 用户名相同的仓库并且添加一个 <code>README.md</code>自述文件即可。</p><p>&emsp;&emsp;理论存在，实践开始。（新建一个同名仓库，并添加一个自述文件后确认）</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291731894.jpg"></p><p>&emsp;&emsp;GitHub默认为此文件添加了demo，我们编辑此文件，即可开启自己的DIY之路了！</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291734955.jpg"></p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">变化前</button></li><li class="tab"><button type="button" data-href="#note1-2">变化后</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291726466.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291737708.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="三、酷炫一点"><a href="#三、酷炫一点" class="headerlink" title="三、酷炫一点"></a>三、酷炫一点</h1><p>&emsp;&emsp;Github提供了这样一个特殊的<code>markdown</code>文件以供我们DIY主页，如果您熟悉HTML，CSS以及MarkDown语法的话，扩展性很高。</p><p>&emsp;&emsp;可是。。。毕竟个人的创造力有限，如何能在短时间拥有一个酷炫的个人主页呢！</p><p>&emsp;&emsp;emmm，有了，<code>ctrl+c</code> <code>ctrl+v</code></p><h2 id="1、Metrics（GitHub-信息统计）"><a href="#1、Metrics（GitHub-信息统计）" class="headerlink" title="1、Metrics（GitHub 信息统计）"></a>1、Metrics（GitHub 信息统计）</h2><p><img src="https://metrics.lecoq.io/sun0225SUN?template=classic&config.timezone=Asia/Shanghai" alt="Metrics"></p><p>&emsp;&emsp;获得类似上图的 GitHub 数据统计，需要用到一个在线工具<a href="https://metrics.lecoq.io/">「Metrics」</a>，打开网站之后，在左侧输入你的 GitHub ID，稍等一会，就会返回右侧所有和你相关的数据。</p><p>&emsp;&emsp;点击右侧的 Markdown code 选项卡，切换到统计视图对应的 Markdown 链接，复制代码添加到<code>README.md</code>文件中。</p><blockquote><p>代码格式可以是markdown语法，也可以是HTML语法，但HTML的扩展性更强一点，建议采用HTML语法格式书写。</p></blockquote><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://metrics.lecoq.io/sun0225SUN?template=classic&amp;config.timezone=Asia%2FShanghai&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Metrics</span>](<span class="link">https://metrics.lecoq.io/sun0225SUN?template=classic&amp;config.timezone=Asia%2FShanghai</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2、GitHub-Stats-Card（GitHub-统计卡片）"><a href="#2、GitHub-Stats-Card（GitHub-统计卡片）" class="headerlink" title="2、GitHub Stats Card（GitHub 统计卡片）"></a>2、GitHub Stats Card（GitHub 统计卡片）</h2><p>  在您的自述文件中获取动态生成的 GitHub 统计信息！<a class="btn-beautify button--animated blue larger" href="https://github.com/anuraghazra/github-readme-stats"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img height="137px" src="https://github-readme-stats.vercel.app/api?username=sun0225SUN&hide_title=true&hide_border=true&show_icons=trueline_height=21&text_color=000&icon_color=000&bg_color=0,ea6161,ffc64d,fffc4d,52fa5a&theme=graywhite" /></div><p>&emsp;&emsp;<code>详情可以看上面的官方文档，在README.md添加如下代码，查看展示demo，下同。</code></p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">height</span>=<span class="string">&quot;137px&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://github-readme-stats.vercel.app/api?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;show_icons=trueline_height=21&amp;text_color=000&amp;icon_color=000&amp;bg_color=0,ea6161,ffc64d,fffc4d,52fa5a&amp;theme=graywhite&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![这里写你的昵称&#x27;s GitHub stats</span>](<span class="link">https://github-readme-stats.vercel.app/api?username=这里替换成你的 GitHub ID</span>)](<span class="link">https://github.com/anuraghazra/github-readme-stats</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="3、Most-used-languages（使用语言统计）"><a href="#3、Most-used-languages（使用语言统计）" class="headerlink" title="3、Most used languages（使用语言统计）"></a>3、Most used languages（使用语言统计）</h2><p>  在您的自述文件中添加使用编程语言对比统计图<a class="btn-beautify button--animated blue larger" href="https://github.com/anuraghazra/github-readme-stats"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img  src="https://github-readme-stats.vercel.app/api/top-langs/?username=sun0225SUN&hide_title=true&hide_border=true&layout=compact&langs_count=6&text_color=000&icon_color=fff&bg_color=0,52fa5a,4dfcff,c64dff&theme=graywhite" /></div><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;layout=compact&amp;langs_count=6&amp;text_color=000&amp;icon_color=fff&amp;bg_color=0,52fa5a,4dfcff,c64dff&amp;theme=graywhite&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">这里写你的昵称&#x27;s Most used languages</span>](<span class="link">https://github-readme-stats.vercel.app/api/top-langs/?username=这里替换成你的 GitHub ID&amp;layout=compact&amp;hide_border=true&amp;langs_count=10</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="4、Github-Profile-Trophy（GitHub-资料奖杯）"><a href="#4、Github-Profile-Trophy（GitHub-资料奖杯）" class="headerlink" title="4、Github Profile Trophy（GitHub 资料奖杯）"></a>4、Github Profile Trophy（GitHub 资料奖杯）</h2><p>&emsp;&emsp;添加奖杯信息。<a class="btn-beautify button--animated blue larger" href="https://github.com/ryo-ma/github-profile-trophy/"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img  src="https://github-profile-trophy.vercel.app/?username=sun0225SUN&theme=gruvbox&row=1&column=7&no-frame=true&no-bg=true" /></div><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://github-profile-trophy.vercel.app/?username=sun0225SUN&amp;theme=gruvbox&amp;row=1&amp;column=7&amp;no-frame=true&amp;no-bg=true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![trophy</span>](<span class="link">https://github-profile-trophy.vercel.app/?username=sun0225SUN</span>)](<span class="link">https://github.com/ryo-ma/github-profile-trophy</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="5、Shields-io（GitHub-徽章）"><a href="#5、Shields-io（GitHub-徽章）" class="headerlink" title="5、Shields.io（GitHub 徽章）"></a>5、Shields.io（GitHub 徽章）</h2><p>&emsp;&emsp;为你的开源项目生成高质量小徽章图标，直接复制链接使用。<a class="btn-beautify button--animated blue larger" href="https://shields.io/"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108291802417.jpg"></p><span ><img  src="https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&logo=html5&logoColor=white" /><img  src="https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&logo=css3" /><img  src="https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&logo=javascript" /></span><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&amp;logo=html5&amp;logoColor=white&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&amp;logo=css3&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&amp;logo=javascript&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![](https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&amp;logo=html5&amp;logoColor=white)</span><br><span class="line">![](https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&amp;logo=css3)</span><br><span class="line">![](https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&amp;logo=javascript)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="6、Visitor-Badge（GitHub-访客徽章）"><a href="#6、Visitor-Badge（GitHub-访客徽章）" class="headerlink" title="6、Visitor Badge（GitHub 访客徽章）"></a>6、Visitor Badge（GitHub 访客徽章）</h2><p>&emsp;&emsp;这个图标和上面的徽章类似，但作用不同，这个徽标会实时改变，记录此页面被访问的次数。<a class="btn-beautify button--animated blue larger" href="https://visitor-badge.glitch.me/"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img  src="https://visitor-badge.glitch.me/badge?page_id=sun0225SUN" /></div><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://visitor-badge.glitch.me/badge?page_id=sun0225SUN&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://visitor-badge.glitch.me/badge?page<span class="emphasis">_id=sun0225SUN)</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="7、GitHub-Readme-Activity-Graph-（GitHub-活动统计图）"><a href="#7、GitHub-Readme-Activity-Graph-（GitHub-活动统计图）" class="headerlink" title="7、GitHub Readme Activity Graph （GitHub 活动统计图）"></a>7、GitHub Readme Activity Graph （GitHub 活动统计图）</h2><p>&emsp;&emsp;动态生成的活动图，用于显示您过去 31 天的 GitHub 活动。<a class="btn-beautify button--animated blue larger" href="https://github.com/Ashutosh00710/github-readme-activity-graph/"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img src="https://activity-graph.herokuapp.com/graph?username=sun0225SUN&theme=xcode" /></div><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://activity-graph.herokuapp.com/graph?username=sun0225SUN&amp;theme=xcode&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![Sunshine&#x27;s GitHub Activity Graph</span>](<span class="link">https://activity-graph.herokuapp.com/graph?username=sun0225SUN&amp;theme=xcode</span>)](<span class="link">https://github.com/sun0225SUN</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="8、社交统计"><a href="#8、社交统计" class="headerlink" title="8、社交统计"></a>8、社交统计</h2><p>&emsp;&emsp;在 README 中展示你在一些流行的网站的数据。<a class="btn-beautify button--animated blue larger" href="https://github.com/songquanpeng/stats-cards"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div align="center"><img  src="https://stats.justsong.cn/api/csdn?id=weixin_50915462"></div><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://stats.justsong.cn/api/csdn?id=weixin_50915462&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://stats.justsong.cn/api/csdn?id=weixin<span class="emphasis">_50915462)</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="9、GitHub-streak（GitHub-连续打卡）"><a href="#9、GitHub-streak（GitHub-连续打卡）" class="headerlink" title="9、GitHub streak（GitHub 连续打卡）"></a>9、GitHub streak（GitHub 连续打卡）</h2><div align="center"><img  src="https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN" /></div><p>&emsp;&emsp;在 README 中展示您连续提交代码的次数。<a class="btn-beautify button--animated blue larger" href="https://github.com/DenverCoder1/github-readme-streak-stats"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">HTML</button></li><li class="tab"><button type="button" data-href="#note1-2">MarkDown</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![GitHub Streak</span>](<span class="link">https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN</span>)](<span class="link">https://git.io/streak-stats</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="10、打字特效"><a href="#10、打字特效" class="headerlink" title="10、打字特效"></a>10、打字特效</h2><h1 align="center">  <a href="https://sunguoqi.com/">    <img src="https://readme-typing-svg.herokuapp.com/?lines=console.log(%22Hello%2C%20World!%22);小孙同学祝您今天愉快!&center=true&size=27">  </a></h1><p>&emsp;&emsp;嗯。。。对，就是这种循环打字的效果，是不是很炫酷，<a class="btn-beautify button--animated blue larger" href="https://github.com/DenverCoder1/readme-typing-svg"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://sunguoqi.com/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://readme-typing-svg.herokuapp.com/?lines=console.log(%22Hello%2C%20World!%22);小孙同学祝您今天愉快!&amp;center=true&amp;size=27&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四、拿来主义"><a href="#四、拿来主义" class="headerlink" title="四、拿来主义"></a>四、拿来主义</h1><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>拿来主义</span></div>    <div class="hide-content"><center><font size="6"><b>拿来主义</b></font></center><div align="center"><strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;鲁迅</strong></div><p>&emsp;&emsp;中国一向是所谓“闭关主义”，自己不去，别人也不许来。自从给枪炮打破了大门之后，又碰了一串钉子，到现在，成了什么都是“送去主义”了。别的且不说罢，单是学艺上的东西，近来就先送一批古董到巴黎去展览，但终“不知后事如何”；还有几位“大师”们捧着几张古画和新画，在欧洲各国一路的挂过去，叫作“发扬国光”。听说不远还要送梅兰芳博士到苏联去，以催进“象征主义”，此后是顺便到欧洲传道。我在这里不想讨论梅博士演艺和象征主义的关系，总之，活人替代了古董，我敢说，也可以算得显出一点进步了。</p><p>&emsp;&emsp;但我们没有人根据了“礼尚往来”的仪节，说道：拿来！</p><p>&emsp;&emsp;当然，能够只是送出去，也不算坏事情，一者见得丰富，二者见得大度。尼采就自诩过他是太阳，光热无穷，只是给与，不想取得。然而尼采究竟不是太阳，他发了疯。中国也不是，虽然有人说，掘起地下的煤来，就足够全世界几百年之用，但是，几百年之后呢？几百年之后，我们当然是化为魂灵，或上天堂，或落了地狱，但我们的子孙是在的，所以还应该给他们留下一点礼品。要不然，则当佳节大典之际，他们拿不出东西来，只好磕头贺喜，讨一点残羹冷炙做奖赏。</p><p>&emsp;&emsp;这种奖赏，不要误解为“抛来”的东西，这是“抛给”的，说得冠冕些，可以称之为“送来”，我在这里不想举出实例。</p><p>&emsp;&emsp;我在这里也并不想对于“送去”再说什么，否则太不“摩登”了。我只想鼓吹我们再吝啬一点，“送去”之外，还得“拿来”，是为“拿来主义”。</p><p>&emsp;&emsp;但我们被“送来”的东西吓怕了。先有英国的鸦片，德国的废枪炮，后有法国的香粉，美国的电影，日本的印着“完全国货”的各种小东西。于是连清醒的青年们，也对于洋货发生了恐怖。其实，这正是因为那是“送来”的，而不是“拿来”的缘故。</p><p>&emsp;&emsp;所以我们要运用脑髓，放出眼光，自己来拿！</p><p>&emsp;&emsp;譬如罢，我们之中的一个穷青年，因为祖上的阴功（姑且让我这么说说罢），得了一所大宅子，且不问他是骗来的，抢来的，或合法继承的，或是做了女婿换来的。那么，怎么办呢？我想，首先是不管三七二十一，“拿来”！但是，如果反对这宅子的旧主人，怕给他的东西染污了，徘徊不敢走进门，是孱头；勃然大怒，放一把火烧光，算是保存自己的清白，则是昏蛋。不过因为原是羡慕这宅子的旧主人的，而这回接受一切，欣欣然的蹩进卧室，大吸剩下的鸦片，那当然更是废物。“拿来主义”者是全不这样的。</p><p>&emsp;&emsp;他占有，挑选。看见鱼翅，并不就抛在路上以显其“平民化”，只要有养料，也和朋友们像萝卜白菜一样的吃掉，只不用它来宴大宾；看见鸦片，也不当众摔在茅厕里，以见其彻底革命，只送到药房里去，以供治病之用，却不弄“出售存膏，售完即止”的玄虚。只有烟枪和烟灯，虽然形式和印度，波斯，阿剌伯的烟具都不同，确可以算是一种国粹，倘使背着周游世界，一定会有人看，但我想，除了送一点进博物馆之外，其余的是大可以毁掉的了。还有一群姨太太，也大以请她们各自走散为是，要不然，“拿来主义”怕未免有些危机。</p><p>&emsp;&emsp;总之，我们要拿来。我们要或使用，或存放，或毁灭。那么，主人是新主人，宅子也就会成为新宅子。然而首先要这人沉着，勇猛，有辨别，不自私。没有拿来的，人不能自成为新人，没有拿来的，文艺不能自成为新文艺。</p><p>&emsp;&emsp;六月四日。 </p></div></div><p>&emsp;&emsp;基本上添加了上面十个小部件，你的GitHub主页就可以很炫酷了！如下图。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108300319126.png"></p><h1 id="五、优秀案例"><a href="#五、优秀案例" class="headerlink" title="五、优秀案例"></a>五、优秀案例</h1><p>&emsp;&emsp;所谓拿来主义（鲁迅说的已经很明白了，哈哈哈）</p><p>&emsp;&emsp;大家懂的都懂，GitHub是一个大的开源代码托管仓库，自述文件（<code>README.md</code>）肯定也是开源的，当我们看到看到好的创意，炫酷的页面时，我们直接到大佬的仓库里拉取就好了，记得给大佬<code>star</code>，别再白嫖了。</p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">优秀案例仓库一</button></li><li class="tab"><button type="button" data-href="#note1-2">优秀案例仓库二</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><p>开源地址：<a href="https://github.com/EddieHubCommunity/awesome-github-profiles">https://github.com/EddieHubCommunity/awesome-github-profiles</a><a class="btn-beautify button--animated blue larger" href="https://github.com/EddieHubCommunity/awesome-github-profiles"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108300337550.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><p>开源地址：<a href="https://github.com/abhisheknaiidu/awesome-github-profile-readme">https://github.com/abhisheknaiidu/awesome-github-profile-readme</a><a class="btn-beautify button--animated blue larger" href="https://github.com/abhisheknaiidu/awesome-github-profile-readme"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108300338953.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="六、后记"><a href="#六、后记" class="headerlink" title="六、后记"></a>六、后记</h1><p>&emsp;&emsp;爆肝了，终于写好了，GitHub YYDS！！！</p><p>&emsp;&emsp;文章写的有点仓促，可能会有小部分错误，欢迎各位大佬在评论区批评指正。</p><p>&emsp;&emsp;<del>打赏也不是不可以哦！嘻嘻嘻</del></p>]]></content>
    
    
    <summary type="html">代码可以不会敲，但是逼格一定要高！</summary>
    
    
    
    <category term="经验技巧" scheme="https://sunguoqi.com/categories/%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Github" scheme="https://sunguoqi.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题的安装及更新</title>
    <link href="https://sunguoqi.com/posts/42028.html"/>
    <id>https://sunguoqi.com/posts/42028.html</id>
    <published>2021-08-19T16:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.685Z</updated>
    
    <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>butterfiy主题官网有详尽的主题配置文档，<a href="https://butterfly.js.org/">点我进入</a>。本系列文章仅记录本站配置过程及魔改日志。</p></div><hr><h1 id="一、主题安装"><a href="#一、主题安装" class="headerlink" title="一、主题安装"></a>一、主题安装</h1><p>&emsp;&emsp;在hexo主题根目录下通过<code>git bash</code>输入以下命令安装Butterfly主题。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme</span><span class="literal">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><blockquote><p>踩坑日记</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210713002057.jpg"></p><p>&emsp;&emsp;通过上面的下载命令下载主题时，出现上面的错误。</p><p>&emsp;&emsp;字面意思是服务器的SSL证书没有经过第三方机构的签署。 网上也有的说是网络不稳定，连接超时导致，尝试禁用<code>SSL验证</code>解决。</p><p>&emsp;&emsp;命令如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -<span class="literal">-global</span> http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;成功下载：</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210713002722.jpg"></p><h1 id="二、应用主题"><a href="#二、应用主题" class="headerlink" title="二、应用主题"></a>二、应用主题</h1><p>&emsp;&emsp;修改 Hexo 根目录下的 _config.yml，把主题改为butterfly。（大概在_config.yml文件代码第100行）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h1 id="三、安装插件"><a href="#三、安装插件" class="headerlink" title="三、安装插件"></a>三、安装插件</h1><p>&emsp;&emsp;一般情况下在上一步结束后就可以直接在本地运行成功了，但是butterfly主题依赖pug 以及 stylus 的渲染器，如果不安装此插件直接运行网站。会出现如下错误。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210713003949.jpg"></p><p> pug 以及 stylus 的渲染器安装命令如下。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer</span><span class="literal">-pug</span> hexo<span class="literal">-renderer</span><span class="literal">-stylus</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;安装完成后，清除缓存重新运行网站即可。</p><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210713004307.jpg"></p><h1 id="四、主题升级"><a href="#四、主题升级" class="headerlink" title="四、主题升级"></a>四、主题升级</h1><p>&emsp;&emsp;在 hexo 的根目录创建一个文件 <code>_config.butterfly.yml</code>，并把主题目录的 <code>_config.yml</code> 内复制到 <code>_config.butterfly.yml</code> 去。以后只需要在 <code>_config.butterfly.yml</code>进行配置就行。</p><blockquote><p>Hexo会自动合併主题中的<code>_config.yml</code>和<code> _config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/img/20210713142249.jpg"></p><h1 id="五、魔改主题升级"><a href="#五、魔改主题升级" class="headerlink" title="五、魔改主题升级"></a>五、魔改主题升级</h1><p>&emsp;&emsp;魔改主题升级时，直接pull新版本主题文件，新的主题文件会覆盖掉自己的魔改文件。</p><p>&emsp;&emsp;以下命令操作可保证魔改主题的无损升级，升级前记得备份，备份，备份！，万一遇到什么问题可以补救。</p><p>&emsp;&emsp;首先，更新工作的状态树：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;之后，输入如下命令，将文件放在堆栈中，获取更新后，再弹栈：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>附：相关Git命令知识<br><code>git add .</code><br>&emsp;&emsp;他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</p><p><code>git stash</code><br>&emsp;&emsp;能够将所有未提交的修改（工作区和暂存区）保存至堆栈中，用于后续恢复当前工作目录。</p><p><code>git stash pop</code><br>&emsp;&emsp;将当前stash中的内容弹出，并应用到当前分支对应的工作目录上。<br>&emsp;&emsp;注：该命令将堆栈中最近保存的内容删除（栈是先进后出）<br>如果从stash中恢复的内容和当前目录中的内容发生了冲突，也就是说，恢复的内容和当前目录修改了同一行的数据，那么会提示报错，需要解决冲突，可以通过创建新的分支来解决冲突。</p><p>&emsp;&emsp;通过git stash将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常git pull了，git pull完成后，执行git stash pop将之前本地做的修改应用到当前工作区。</p>]]></content>
    
    
    <summary type="html">butterful主题的安装及更新</summary>
    
    
    
    <category term="个人网站" scheme="https://sunguoqi.com/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="Butterfly" scheme="https://sunguoqi.com/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>安装小孙同学</title>
    <link href="https://sunguoqi.com/posts/38126.html"/>
    <id>https://sunguoqi.com/posts/38126.html</id>
    <published>2021-08-19T10:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.685Z</updated>
    
    <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>本教程意在指导朋友安装<code>小孙同学APP</code>，不涉及如何配置网站PWA特性的教程。<br>如需配置网站PWA，请参考<code>糖果屋教程</code> <a class="btn-beautify button--animated blue larger" href="https://akilar.top/posts/8f31c3d0/"   title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a></p></div><hr><h1 id="一、关于PWA"><a href="#一、关于PWA" class="headerlink" title="一、关于PWA"></a>一、关于PWA</h1><p>&emsp;&emsp;PWA的全称是<code>Progressive Web Apps</code>，译为渐进式网络应用程序。装配了PWA以后，用户可以将网站作为<code>Web APP</code>安装到自己的设备上，以原生应用般的方式浏览博客，同时借助PWA的缓存机制，能够更快速的浏览。</p><h1 id="二、实现效果"><a href="#二、实现效果" class="headerlink" title="二、实现效果"></a>二、实现效果</h1><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note-1">电脑端</button></li><li class="tab"><button type="button" data-href="#note-2">平板端</button></li><li class="tab"><button type="button" data-href="#note-3">手机端</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note-1"><blockquote><p>在电脑端安装<code>小孙同学</code>，以应用程序的方式打开本网站，浏览体验和在浏览器差不多，PWA似乎没起到啥卵用。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192009398.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><blockquote><p>在平板端安装<code>小孙同学</code>，平板端浏览体验提升还是很明显的，值得吐槽的是安卓平板浏览器的适配问题，说一如果在平板端安装本站，浏览体验会得到很大的提升。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192012557.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><blockquote><p>在手机端安装<code>小孙同学</code>，这应该是大多朋友的选择，在手机浏览器访问本站时，会因为浏览器的问题，导致浏览体验不佳，安装小孙同学app后，浏览体验有质的飞跃，下次访问时也不用再去浏览器中输入网址了。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192019664.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="三、安装教程"><a href="#三、安装教程" class="headerlink" title="三、安装教程"></a>三、安装教程</h1><p>&emsp;&emsp;值得一提的是，虽然网站的PWA特性可以封装成一个应用程序，但其核心仍需要浏览器的支持，大多数电脑浏览器都支持PWA，但很多国产手机浏览器并不支持，想要安装<code>小孙同学</code>您应该使用合适的浏览器，并且再安装完小孙同学后<strong>不得删除依赖的浏览器</strong>。</p><p>&emsp;&emsp;具体安装步骤如下。</p><div class="tabs" id="note1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note1-1">手机端</button></li><li class="tab"><button type="button" data-href="#note1-2">平板端</button></li><li class="tab"><button type="button" data-href="#note1-3">电脑端</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note1-1"><div class="note blue icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>如果您的手机是小米手机的话，用系统自带的小米浏览器打开本网站，稍等片刻网页即可提示您安装本网站。</p><p>用苹果手机的<code>safari</code>应该也可以（未测试）</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片演示</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192133192.jpg"></p></div></div></div><p>&emsp;&emsp;部分手机浏览器不支持PWA，比如博主经常使用的<code>夸克浏览器</code>，国内支持的手机浏览器并不多，这里推荐使用<code>edge</code>浏览器。</p><p>1、手机应用商店下载<code>edge</code>浏览器</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片演示</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192126678.jpg"></p></div></div><p>2、设置浏览器的权限，允许浏览器添加桌面图标</p><p>小米手机的设置步骤为<code>打开设置</code>——&gt;<code>应用设置</code>——&gt;<code>应用管理</code>——&gt;<code>找到edge浏览器</code>——&gt;<code>权限管理</code>——&gt;<code>添加快捷方式权限设置为允许</code></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片演示</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192126830.jpg"></p></div></div><p>3、再浏览器中输入本站网址<code>https://sunguoqi.com</code>，稍等片刻（似乎需要等一分钟左右的亚子），网页会提示您安装<code>小孙同学</code>，大功告成!</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片演示</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192126894.jpg"></p></div></div><p>4、因不可抗拒因素，我也不知道是为什么，可能是因为浏览器加载的问题吧，有时等了好长时间网页也不会提示安装<code>小孙同学</code>，这时候选择浏览器中间的三个点，找到添加到主屏幕的功能，点击安装即可！</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片演示</span></div>    <div class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108231327651.jpg"></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-2"><blockquote><p>同手机端安装方法。</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note1-3"><blockquote><p>电脑端点击浏览器地址栏右侧的安装按钮即可。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/photos/images/202108192100085.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="四、写在后面"><a href="#四、写在后面" class="headerlink" title="四、写在后面"></a>四、写在后面</h1><p>&emsp;&emsp;如无必须，勿增实体。可能没几个人会选择安装这个应用吧，小孙同学在线卑微，此文章纯属自娱自乐。如有问题，请在评论区留言。</p>]]></content>
    
    
    <summary type="html">相信我，我会越来越好的，爱你！</summary>
    
    
    
    <category term="个人网站" scheme="https://sunguoqi.com/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="PWA" scheme="https://sunguoqi.com/tags/PWA/"/>
    
  </entry>
  
  <entry>
    <title>C#项目实战练习：做自己的QQ</title>
    <link href="https://sunguoqi.com/posts/28877.html"/>
    <id>https://sunguoqi.com/posts/28877.html</id>
    <published>2021-05-30T02:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;C#程序设计实战练习项目，做一个类似于QQ的软件，程序参考明日科技出版的《C#项目开发入门实战》第一章：Q友，做自己的QQ。</p><p>&emsp;&emsp;众所周知，学编程实践大于纯论理学习。为巩固和练习C#程序设计在编写<code>Winform窗体应用程序</code>方面的开发与应用，着手做了这样一个练习，实战中确实遇到了很多坑，也学到了很多，回顾开发过程，记录心得，写下这篇博客。</p><p>&emsp;&emsp;参考教程视频：<a href="https://www.bilibili.com/video/BV1EA411v7HT?p=27">https://www.bilibili.com/video/BV1EA411v7HT?p=27</a></p><p>&emsp;&emsp;教程参考资源：<a href="https://pan.baidu.com/s/1m8SzKBw3laiC3up71TLcfQ">https://pan.baidu.com/s/1m8SzKBw3laiC3up71TLcfQ</a> 提取码:61eb</p><p>&emsp;&emsp;练习参考资源：<a href="https://pan.baidu.com/s/1WQzzSLdZ9PN0VhyeA2XdPA">https://pan.baidu.com/s/1WQzzSLdZ9PN0VhyeA2XdPA</a> 提取码：6666 </p><p>&emsp;&emsp;练习成果演示：<a href="https://www.bilibili.com/video/BV1Yg41137qU/">https://www.bilibili.com/video/BV1Yg41137qU/</a></p><h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p>&emsp;&emsp;QQ作为一款即时通信软件，于1999年2月推出，目前以发展了22年，拥有海量用户和灵活强大的功能。本次实验仅仅做了最基本的四个模块的练习，分别是<code>用户登录界面</code>，<code>用户账号注册界面</code>，<code>主界面</code>，<code>聊天界面</code>.</p><p>&emsp;&emsp; （虽然是练习，但还是想让软件拥有自己的特色，所以将书中的Q友改成了SunTalk，也更改了部分背景空间颜色位置等属性）</p><h1 id="开发技术"><a href="#开发技术" class="headerlink" title="开发技术"></a>开发技术</h1><p>&emsp;&emsp;查了下，腾讯QQ客户端采用 <code>Microsoft Visual C++</code>开发； 服务器端软件采用<code>Linux gcc</code>开发 ；数据库采用<code>MySql</code> 数据库。腾讯QQ采用标准的<code>TCP/IP协议</code>为通信协议。腾讯QQ客户端之间的消息传送也采用了UDP模式。</p><p>&emsp;&emsp;本次练习是在<code>windows</code>操作系统下进行的，使用的是<code>C#编程语言</code>，数据库采用的是<code>MS SQL Server 2019</code>，集成开发环境使用的是<code>Visual Studio 2019</code>。</p><p>&emsp;&emsp;主要涉及了以下内容：</p><blockquote><ul><li><code>Form</code>窗体关键属性、方法和事件的应用；</li><li>如何触发窗体和控件的时间；</li><li><code>ListView</code>控件和<code>ImageLis</code>t组件的结合使用；</li><li>数据库及数据表的建立与管理；</li><li>使用<code>C#</code>操作<code>SQL server</code>数据库；</li><li><code>Timer</code>定时器组件的使用；</li><li>如何判断是否按下了<code>&lt;Enter&gt;</code>键；</li><li>自定义最小化和关闭按钮。</li></ul></blockquote><h1 id="程序缺陷"><a href="#程序缺陷" class="headerlink" title="程序缺陷"></a>程序缺陷</h1><p>&emsp;&emsp;本次练习主要实现了登录，注册，发消息这三个功能，而且只是单机的，确实比较鸡肋，但仍能学到很多东西。</p><h1 id="前车之鉴"><a href="#前车之鉴" class="headerlink" title="前车之鉴"></a>前车之鉴</h1><p>&emsp;&emsp;在起初练习这个项目的时候，使用的框架是<code>.NET Core </code>框架。然而做到后面的时候，发现<code>.NET Core </code>框架存在个严重的bug，不支持上下文菜单组件，和工具栏控件等。这使得本次练习不能继续完美的进行下去了，翻阅了很多论坛，得到了一句真理，开发winform窗体应用程序还是老老实实的用<code>.NET FrameWork</code>框架吧。</p><p>&emsp;&emsp;<code>.NET Core</code>框架无法直接更改成<code>.NET Framework</code>框架，所以，我重头来了一遍。。。</p><p>&emsp;&emsp;然而当我设计完登录窗体，问题又出现了，运行调试，设计好的控件错位了？？？</p><p>&emsp;&emsp;于是又查了各大论坛，发现<code>.NET FrameWork</code>框架确实存在这个问题，笔记本电脑的显示屏分辨率缩放通常被放大到125%或者150%来适应电脑屏幕，而使用<code>.NET FrameWork</code>框架设计窗体似乎必须在分辨率缩放为100%的时候才能保证控件不发生错位（啊这，为什么用<code>.NET core</code>框架不会）但是相应的<code>VS2019</code>上的字体就比较模糊了，目前确实没找到什么好的解决办法，就硬着头皮继续做了下来。。。。。。。</p><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><p>&emsp;&emsp;<code>SunTalk</code>软件业务流程：用户——&gt;软件登录——&gt;是否注册（未注册进入注册页面）——&gt;登录验证——&gt;主窗体——&gt;双击头像——&gt;聊天窗体。</p><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><p>&emsp;&emsp;后续功能的实现都需要操作数据库，所以设计数据库是第一要义，设计数据库之前，我们应该知道我们需要怎样的数据，进而需要设计怎样的表格，数据库的设计和程序窗体的设计应该是并行的，但为了后面调用的方便，还是先将数据库的设计好。</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>&emsp;&emsp;右键<code>对象资源管理器</code>下的<code>数据库</code>，选择新建，为数据库起个名字，点击确定。</p><p><img src="https://i.loli.net/2021/05/28/pkajmVlub1iRUov.jpg"></p><p>&emsp;&emsp;右键<code>db_SunTalk</code>下的表，选择新建表，表的设计分别如下。</p><p>&emsp;&emsp;值得注意的是，<code>以下各表中的ID字段列属性的标识规范（是标识）需要设计成（是），表示增量和标识种子分别为1。</code></p><p>&emsp;&emsp;记得在初次更改标识规范时，出现过无法更改的现象，这时需要在<code>工具</code>下拉菜单的<code>选项</code>中取消<code>阻止保存要求重新创建表的更改</code>复选框的对勾。</p><p><img src="https://i.loli.net/2021/05/28/GpYuyihrBW3TSqj.jpg"></p><h3 id="数据表设计"><a href="#数据表设计" class="headerlink" title="数据表设计"></a>数据表设计</h3><h4 id="tb-User（用户信息表）"><a href="#tb-User（用户信息表）" class="headerlink" title="tb_User（用户信息表）"></a>tb_User（用户信息表）</h4><p><img src="https://i.loli.net/2021/05/28/MsSObz7f4CdrApe.jpg"></p><p><img src="https://i.loli.net/2021/05/28/lmDfz2Xwar1sqPk.jpg"></p><h4 id="tb-Friend（好友信息表）"><a href="#tb-Friend（好友信息表）" class="headerlink" title="tb_Friend（好友信息表）"></a>tb_Friend（好友信息表）</h4><p><img src="https://i.loli.net/2021/05/28/Xq4TQF1zsOdk86U.jpg"></p><h4 id="tb-Message（消息表）"><a href="#tb-Message（消息表）" class="headerlink" title="tb_Message（消息表）"></a>tb_Message（消息表）</h4><p><img src="https://i.loli.net/2021/05/28/VpMOIlvyWPD9BTt.jpg"></p><h4 id="tb-MessageType（消息类型表）"><a href="#tb-MessageType（消息类型表）" class="headerlink" title="tb_MessageType（消息类型表）"></a>tb_MessageType（消息类型表）</h4><p><img src="https://i.loli.net/2021/05/28/9RAWIF2NexY1gjd.jpg"></p><h4 id="tb-FriendLimit（添加好友条件表）"><a href="#tb-FriendLimit（添加好友条件表）" class="headerlink" title="tb_FriendLimit（添加好友条件表）"></a>tb_FriendLimit（添加好友条件表）</h4><p><img src="https://i.loli.net/2021/05/28/HuIdY2CiARt9mKg.jpg"></p><h3 id="视图设计"><a href="#视图设计" class="headerlink" title="视图设计"></a>视图设计</h3><p>新建查询然后输入以下代码，执行创建消息视图。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [dbo].[v_Message]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">       dbo.tb_Message.ID, dbo.tb_Message.FromUserID, dbo.tb_Message.ToUserID, </span><br><span class="line">       dbo.tb_Message.Message, dbo.tb_Message.MessageTypeID, dbo.tb_Message.MessageState, </span><br><span class="line">       dbo.tb_Message.MessageTime, dbo.tb_User.NickName</span><br><span class="line"><span class="keyword">FROM</span>  dbo.tb_Message <span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">       dbo.tb_User <span class="keyword">ON</span> dbo.tb_Message.FromUserID <span class="operator">=</span> dbo.tb_User.ID</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/28/pLqxmeXkP6ZiIYQ.jpg"></p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><h3 id="选择-NET-Framework-框架"><a href="#选择-NET-Framework-框架" class="headerlink" title="选择 .NET Framework 框架"></a>选择 .NET Framework 框架</h3><p>&emsp;&emsp;打开<code>visual studio 2019</code>,创建新项目。这里记得使用<code>.NET Framework</code>框架。</p><p><img src="https://i.loli.net/2021/05/28/xMm26T9DfdCNlte.jpg"></p><h3 id="以100-缩放比例重启VS"><a href="#以100-缩放比例重启VS" class="headerlink" title="以100%缩放比例重启VS"></a>以100%缩放比例重启VS</h3><p>&emsp;&emsp;创建后的界面如下，可能窗口布局会不一样，这没有关系，不过较为显著的是<code>本显示窗体缩放比例已设置为125%，使用100%缩放比例重新启动visual Studio 帮我决定</code>提示，这个要选择<code>使用100%缩放比例重新启动Visual Studio</code>，点击蓝色的超链接即可，否则的话在缩放比例为125%或者150%下设计的窗体，运行调试后控件会错位。</p><p><img src="https://i.loli.net/2021/05/28/9TVLnZ4XUwvKkBH.jpg"></p><h1 id="用户登录窗体"><a href="#用户登录窗体" class="headerlink" title="用户登录窗体"></a>用户登录窗体</h1><h2 id="登录窗体布局设计"><a href="#登录窗体布局设计" class="headerlink" title="登录窗体布局设计"></a>登录窗体布局设计</h2><p>&emsp;&emsp;本次练习参考腾讯QQ的登录页面，窗体设计本身很复杂，需要设计各种图标，不过可以偷个懒，腾讯QQ的界面改改，作为SunTalk窗体的背景，在背景的基础上添加相应控件。</p><p><img src="https://i.loli.net/2021/05/28/S9RqCo2gjQrytWi.jpg"></p><p>&emsp;&emsp;实现上图效果，首先我们将<code>form1</code>窗体<code>NAME</code>更改成<code>Frm_Login</code>，以便在实现代码中调用。（<code>其他窗体也要相应的更改哦，尤其是名字</code>）</p><ul><li><code>Backgroundimage</code>：添加登录背景图片</li><li><code>FormBorderStyle</code>：None</li><li><code>StartPosition</code>：CenterScreen</li><li><code>Text</code>：SunTalk登录</li><li><code>Size</code>：（根据背景拖动窗体就可以了）</li></ul><h2 id="登录窗体控件填充"><a href="#登录窗体控件填充" class="headerlink" title="登录窗体控件填充"></a>登录窗体控件填充</h2><p>&emsp;&emsp;下面我们分析下该登录窗体需要哪些控件，这里头像显示部分的功能没有实现，共包含了以下八个控件。</p><p>&emsp;&emsp;（各控件最重要的部分其实是名字，后续功能实现需要通过名字对其进行调用，控件的其他属性这里只列出部分，可自定义设置，比如字体颜色，字体大小，控件位置，控件背景色等等）</p><p><img src="https://i.loli.net/2021/05/28/mv1JbnIexXDPBZT.jpg"></p><ul><li>1、<code>TextBox</code></li></ul><p><code>Name</code>：txtID</p><p><code>BorderStyle</code>：None</p><ul><li>2、<code>TextBox</code></li></ul><p><code>Name</code>：txtPwd</p><p><code>BorderStyle</code>：None</p><ul><li>3、<code>CheckBox</code></li></ul><p><code>Name</code>：cboxRemember</p><p><code>Text</code>：记住密码</p><ul><li>4、<code>CheckBox</code></li></ul><p><code>Name</code>：cboxAutoLogin</p><p><code>Text</code>：自动登录</p><ul><li>5、<code>Linklabel</code></li></ul><p><code>Name</code>：linklblReg</p><p><code>Text</code>：注册账号</p><ul><li>6、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxLogin</p><p><code>BackColor</code>：Transparent</p><ul><li>7、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxMin</p><p><code>BackColor</code>：Transparent</p><ul><li>8、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxClose</p><p><code>BackColor</code>：Transparent</p><h2 id="登录窗体功能实现"><a href="#登录窗体功能实现" class="headerlink" title="登录窗体功能实现"></a>登录窗体功能实现</h2><p>&emsp;&emsp;选中窗体，在空白区域（无其他控件的地方）双击，或者右键查看代码进入代码编辑区。</p><p><img src="https://i.loli.net/2021/05/28/lenhCZiQp7us5cE.jpg"></p><h3 id="便于测试"><a href="#便于测试" class="headerlink" title="便于测试"></a>便于测试</h3><p>&emsp;&emsp;为了方便测试登录窗体，实现点击安全登陆按钮可以代开主窗体的操作，我们应该事先在数据库中添加一条用户数据。</p><p>&emsp;&emsp;这样我们输入账号即可测试记住密码，打开主窗体等功能。</p><h3 id="判断账号密码格式"><a href="#判断账号密码格式" class="headerlink" title="判断账号密码格式"></a>判断账号密码格式</h3><p>&emsp;&emsp;首先我们需要编写一个函数<code>ValidateInput</code>来判断用户输入账号和密码的格式问题。</p><p>&emsp;&emsp;规则是：账号和密码不应为空，并且账号ID据库里设计的是int类型，最大数据范围是65535。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">ValidateInput</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (txtID.Text.Trim() == <span class="string">&quot;&quot;</span>)<span class="comment">//登录账号</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入登录账号&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtID.Focus();<span class="comment">//使登录账号文本框获得鼠标焦点</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">int</span>.Parse(txtID.Text.Trim())&gt;<span class="number">65535</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入正确的登录账号&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtID.Focus();<span class="comment">//使登录账号文本框获得鼠标焦点</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (txtID.Text.Length&gt;<span class="number">5</span> &amp;&amp; txtPwd.Text.Trim() == <span class="string">&quot;&quot;</span>)<span class="comment">//密码</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入密码&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtPwd.Focus();<span class="comment">//使密码文本框获得鼠标焦点</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="账号类型必须是数字类型"><a href="#账号类型必须是数字类型" class="headerlink" title="账号类型必须是数字类型"></a>账号类型必须是数字类型</h3><p>&emsp;&emsp;账号类型必须是数字类型，为此，我们需要限定此文本框的输入，选中<code>txtID</code>账号登录文本框，在事件中找到<code>KeyPress</code>事件，双击该事件，进入改事件的代码编辑区。输入以下代码。</p><p>&emsp;&emsp;值得注意的是，第一行代码和大括号在我们双击该事件的时候自动生成，我们只需添加大括号内的实现代码。（<code>其余的代码块同理</code>）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtID_KeyPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判断是否为数字</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">char</span>.IsDigit(e.KeyChar) || (e.KeyChar == <span class="string">&#x27;\r&#x27;</span>) || (e.KeyChar == <span class="string">&#x27;\b&#x27;</span>))</span><br><span class="line">        e.Handled = <span class="literal">false</span>;<span class="comment">//在控件中显示该字符</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        e.Handled = <span class="literal">true</span>;<span class="comment">//取消在控件中显示该字符</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现用户登录"><a href="#实现用户登录" class="headerlink" title="实现用户登录"></a>实现用户登录</h3><p>&emsp;&emsp;实现用户登录，我们首先需要在数据库中查询是否存在此账户，然后判断账号和密码是否正确，若正确则进入SunTalk主界面。</p><p>&emsp;&emsp;为此我们需要建立此程序与数据库之间的连接。</p><h4 id="创建DataOperator类"><a href="#创建DataOperator类" class="headerlink" title="创建DataOperator类"></a>创建DataOperator类</h4><p>&emsp;&emsp;在项目资源管理器下右键项目文件，在右键菜单中选择添加，为程序添加一个<code>DataOperator</code>类，此类实现了本程序与本地数据库的连接。实现代码如下。</p><p>&emsp;&emsp;在<code>DataOperator</code>类的代码编辑区，我们首先引用两个命名空间，这是操作数据库必要的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br></pre></td></tr></table></figure><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><p>&emsp;&emsp;在公共代码编辑区添加如下代码连接到本地数据库，这里的需要更改成自己的数据库账号和密码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据库连接字符串</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> connString = <span class="string">@&quot;Data Source=LAPTOP-KQ506P5I;Database=db_SunTalk;User ID=sa;Pwd=！！！！！！！;&quot;</span>;</span><br><span class="line"><span class="comment">//数据库连接对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> SqlConnection connection = <span class="keyword">new</span> SqlConnection(connString);</span><br></pre></td></tr></table></figure><h4 id="执行查询，返回列"><a href="#执行查询，返回列" class="headerlink" title="执行查询，返回列"></a>执行查询，返回列</h4><p>&emsp;&emsp;定义一个<code>ExecSQL</code>方法来查询数据库，并返回查询结果结果中的第一行第一列。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">ExecSQL</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">    <span class="keyword">if</span> (connection.State == ConnectionState.Closed)<span class="comment">//如果当前数据库连接处于关闭状态</span></span><br><span class="line">        connection.Open();  <span class="comment">//打开数据库连接</span></span><br><span class="line">    <span class="built_in">int</span> num = Convert.ToInt32(command.ExecuteScalar());<span class="comment">//执行查询</span></span><br><span class="line">    connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">    <span class="keyword">return</span> num;<span class="comment">//返回结果中的第一行第一列</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="返回结果，返回行数"><a href="#返回结果，返回行数" class="headerlink" title="返回结果，返回行数"></a>返回结果，返回行数</h4><p>&emsp;&emsp;定义一个<code>ExecSQLResult</code>方法来查询数据库，并返回受影响的行数。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">ExecSQLResult</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">    <span class="keyword">if</span> (connection.State == ConnectionState.Closed)<span class="comment">//如果当前数据库连接处于关闭状态</span></span><br><span class="line">        connection.Open();<span class="comment">//打开数据库连接</span></span><br><span class="line">    <span class="built_in">int</span> result = command.ExecuteNonQuery();<span class="comment">//执行SQL语句</span></span><br><span class="line">    connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">    <span class="keyword">return</span> result;<span class="comment">//返回受影响的行数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建Publicclass类"><a href="#创建Publicclass类" class="headerlink" title="创建Publicclass类"></a>创建Publicclass类</h4><p>&emsp;&emsp;为程序添加一个<code>Publicclass</code>类，在该类中定义一个静态变量来记录<code>loginID</code>用来记录用户登录账号。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> loginID;</span><br></pre></td></tr></table></figure><h4 id="创建Publicclass类的实例对象"><a href="#创建Publicclass类的实例对象" class="headerlink" title="创建Publicclass类的实例对象"></a>创建Publicclass类的实例对象</h4><p>&emsp;&emsp;在<code>Frm_Login</code>的公共变量或方法的代码编辑区创建用户账号的的实例对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataOperator dataOper = <span class="keyword">new</span> DataOperator();</span><br></pre></td></tr></table></figure><h4 id="触发安全登录窗体"><a href="#触发安全登录窗体" class="headerlink" title="触发安全登录窗体"></a>触发安全登录窗体</h4><p>&emsp;&emsp;选中安全登录控件，双击进入该控件的<code>click</code>点击事件，该事件通过查询<code>tb_User</code>数据表中是否存在相匹配的账户来实现用户登录功能，实现代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxLogin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (ValidateInput())   <span class="comment">//调用自定义方法验证用户输入</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> sql = <span class="string">&quot;select count(*) from tb_User where ID=&quot;</span> + <span class="built_in">int</span>.Parse(txtID.Text.Trim()) </span><br><span class="line">+ <span class="string">&quot; and Pwd = &#x27;&quot;</span> + txtPwd.Text.Trim() + <span class="string">&quot;&#x27;&quot;</span>;   <span class="comment">//定义查询SQL语句</span></span><br><span class="line">       <span class="built_in">int</span> num = dataOper.ExecSQL(sql);       <span class="comment">//数据库查询</span></span><br><span class="line">       <span class="keyword">if</span> (num == <span class="number">1</span>)  <span class="comment">//验证通过</span></span><br><span class="line">       &#123;</span><br><span class="line">           PublicClass.loginID = <span class="built_in">int</span>.Parse(txtID.Text.Trim());<span class="comment">//设置登录的用户号码</span></span><br><span class="line">           <span class="keyword">if</span> (cboxRemember.Checked)</span><br><span class="line">           &#123;</span><br><span class="line">               dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Remember=1 where ID=&quot;</span> + </span><br><span class="line"><span class="built_in">int</span>.Parse(txtID.Text.Trim()));<span class="comment">//记住密码</span></span><br><span class="line">               <span class="keyword">if</span> (cboxAutoLogin.Checked)</span><br><span class="line">                   dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set AutoLogin=1 where ID=&quot;</span> + </span><br><span class="line"><span class="built_in">int</span>.Parse(txtID.Text.Trim()));<span class="comment">//自动登录</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Remember=0 where ID=&quot;</span> + </span><br><span class="line"><span class="built_in">int</span>.Parse(txtID.Text.Trim()));</span><br><span class="line">               dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set AutoLogin=0 where ID=&quot;</span> + </span><br><span class="line"><span class="built_in">int</span>.Parse(txtID.Text.Trim()));</span><br><span class="line">           &#125;</span><br><span class="line">           dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Flag=1 where ID=&quot;</span> + </span><br><span class="line"><span class="built_in">int</span>.Parse(txtID.Text.Trim()));<span class="comment">//设置在线状态</span></span><br><span class="line">           Frm_Main frmMain = <span class="keyword">new</span> Frm_Main();<span class="comment">//创建主窗体对象</span></span><br><span class="line">           frmMain.Show();<span class="comment">//显示主窗体</span></span><br><span class="line">           <span class="keyword">this</span>.Visible = <span class="literal">false</span>;<span class="comment">//隐藏登录主窗体</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           MessageBox.Show(<span class="string">&quot;输入的用户名或密码有误！&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK, </span><br><span class="line">MessageBoxIcon.Error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加Frm-Main窗体"><a href="#添加Frm-Main窗体" class="headerlink" title="添加Frm_Main窗体"></a>添加Frm_Main窗体</h3><p>&emsp;&emsp;编写完上面的代码，不出意外的话，会报错，原因在这行代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Frm_Main frmMain = <span class="keyword">new</span> Frm_Main();<span class="comment">//创建主窗体对象</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;是的，在创建主窗体实例对象时，我们应该保证此窗体时真实存在的，于是，我们必须事先添加此窗体。</p><p>&emsp;&emsp;在项目资源管理器下右键项目文件，在右键菜单中选择添加，为程序添加一个<code>form窗体</code>，并将改窗体的<code>Name</code>设置成<code>Frm_Main</code></p><h3 id="按下回车键自动登录"><a href="#按下回车键自动登录" class="headerlink" title="按下回车键自动登录"></a>按下回车键自动登录</h3><p>&emsp;&emsp;如何实现当账号和密码都输入完成后，不点击安全登录空间，而是按下<code>Enter</code>键便实现登录功能呢？</p><p>&emsp;&emsp;我们将<code>txtPwd</code>控件的<code>KeyPress</code>事件和<code>Enter</code>键相关联即可。实现代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtPwd_KeyPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.KeyChar == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//判断是否按下回车键</span></span><br><span class="line">        pboxLogin_Click(sender, e);<span class="comment">//使登录按钮获得鼠标焦点</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现记住密码和自动登录功能"><a href="#实现记住密码和自动登录功能" class="headerlink" title="实现记住密码和自动登录功能"></a>实现记住密码和自动登录功能</h3><h4 id="自动登录的逻辑"><a href="#自动登录的逻辑" class="headerlink" title="自动登录的逻辑"></a>自动登录的逻辑</h4><p>&emsp;&emsp;要实现自动登录，必须先记住密码。为此，需要在记住密码下添加如下逻辑。</p><p>&emsp;&emsp;选中<code>cboxRemember</code>控件，双击即可进入<code>CheckedChanged</code>事件代码编辑区编写如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cboxRemember_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!cboxRemember.Checked)<span class="comment">//判断记住密码文本框为未选中状态</span></span><br><span class="line">        cboxAutoLogin.Checked = <span class="literal">false</span>;<span class="comment">//自动登录设置为未选中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="判断数据表中自动登录字段"><a href="#判断数据表中自动登录字段" class="headerlink" title="判断数据表中自动登录字段"></a>判断数据表中自动登录字段</h4><p>&emsp;&emsp;当我们第一次登录软件的时候，如果勾选了记住密码，当我们成功登录后，自动登录的字段值就会从默认的0变成1，提交修改到数据库中。</p><p>&emsp;&emsp;当我们第二次登录时，我们需要判断数据表中的自动登录字段，于是我们需要在<code>DataOperator</code>类中添加一个<code>GetDataSet</code>方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> DataSet <span class="title">GetDataSet</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlDataAdapter sqlda = <span class="keyword">new</span> SqlDataAdapter(sql, connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">    DataSet ds = <span class="keyword">new</span> DataSet();<span class="comment">//创建数据集对象</span></span><br><span class="line">    sqlda.Fill(ds);<span class="comment">//填充数据集</span></span><br><span class="line">    <span class="keyword">return</span> ds;<span class="comment">//返回数据集</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实时检测账号，自动填充密码"><a href="#实时检测账号，自动填充密码" class="headerlink" title="实时检测账号，自动填充密码"></a>实时检测账号，自动填充密码</h4><p>&emsp;&emsp;当用户设置了记住密码，则在用户输入账号时，对账号进行实时检测，如果在数据库中检测到有匹配记录，则对登录密码自动填充。</p><p>&emsp;&emsp;此方法需要引用<code>System.Data</code>命名空间，于是在程序在上方，需要添加如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Data;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;事件实现代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtID_TextChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ValidateInput();</span><br><span class="line">    <span class="comment">//根据号码查询其密码、记住密码和自动登录字段的值</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select Pwd,Remember,AutoLogin from tb_User where ID=&quot;</span> +<span class="built_in">int</span>.Parse(txtID.Text.Trim()) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">    DataSet ds = dataOper.GetDataSet(sql);<span class="comment">//查询结果存储到数据集中</span></span><br><span class="line">    <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &gt; <span class="number">0</span>)<span class="comment">//判断是否存在该用户</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Convert.ToInt32(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">1</span>]) == <span class="number">1</span>)<span class="comment">//判断是否记住密码</span></span><br><span class="line">        &#123;</span><br><span class="line">            cboxRemember.Checked = <span class="literal">true</span>;<span class="comment">//记录密码复选框选中</span></span><br><span class="line">            txtPwd.Text = ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>].ToString();<span class="comment">//自动输入密码</span></span><br><span class="line">            <span class="keyword">if</span> (Convert.ToInt32(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">2</span>]) == <span class="number">1</span>)<span class="comment">//判断是否自动登录</span></span><br><span class="line">            &#123;</span><br><span class="line">                cboxAutoLogin.Checked = <span class="literal">true</span>;<span class="comment">//自动登录复选框选中</span></span><br><span class="line">                pboxLogin_Click(sender, e);<span class="comment">//自动登录</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打开注册账号窗体"><a href="#打开注册账号窗体" class="headerlink" title="打开注册账号窗体"></a>打开注册账号窗体</h3><p>&emsp;&emsp;同打开主界面窗体一样，在我们想要打开账号注册窗体时，我们应保证其事先存在，同添加主窗体一样，添加账号注册窗体，并将该窗体的Name属性更改成<code>Frm_Register</code></p><p>&emsp;&emsp;选中注册账号控件双击，进入此控件的点击事件代码编辑区，添加如下代码，实现注册窗体的打开。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">linklblReg_LinkClicked</span>(<span class="params"><span class="built_in">object</span> sender, LinkLabelLinkClickedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Frm_Register frmRegister = <span class="keyword">new</span> Frm_Register();<span class="comment">//创建申请账号对象</span></span><br><span class="line">    frmRegister.Show();<span class="comment">//显示申请账号窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="窗体最小化"><a href="#窗体最小化" class="headerlink" title="窗体最小化"></a>窗体最小化</h3><p>&emsp;&emsp;双击<code>pboxMin</code>控件，编写其点击事件代码，如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxMin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.WindowState = FormWindowState.Minimized;<span class="comment">//设置窗体最小化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关闭应用"><a href="#关闭应用" class="headerlink" title="关闭应用"></a>关闭应用</h3><p>&emsp;&emsp;双击<code>pboxClose</code>控件，编写其点击事件代码，如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxClose_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Application.ExitThread();<span class="comment">//退出当前应用程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h1><p>&emsp;&emsp;通过单击注册账号超链接即可打开申请账号窗体，其中包含了必填资料和选填资料。</p><h2 id="注册窗体布局设计"><a href="#注册窗体布局设计" class="headerlink" title="注册窗体布局设计"></a>注册窗体布局设计</h2><p>&emsp;&emsp;注册窗体的设计没有添加背景采用的是纯控件组合。</p><p><img src="https://i.loli.net/2021/05/28/HM2FuQk7x1JtXYZ.jpg"></p><h2 id="注册窗体控件填充"><a href="#注册窗体控件填充" class="headerlink" title="注册窗体控件填充"></a>注册窗体控件填充</h2><p>&emsp;&emsp;字体大小颜色等其他属性没有列出，可自己尝试。</p><p><img src="https://i.loli.net/2021/05/28/AKhXz1wMxYiVeWo.jpg"></p><ul><li>1、<code>PictureBox</code></li></ul><p><code>Name</code>：picLogo</p><p><code>BackColor</code>：Transparent</p><p><code>Image</code>：(自定义个图片)</p><p><code>SizeMode</code>：StretchImage</p><ul><li>2、<code>GroupBox</code></li></ul><p><code>Name</code>：grpBaseInfo</p><p><code>BackColor</code>：Transparent</p><p><code>text</code>：注册基本资料</p><ul><li>3、<code>GroupBox</code></li></ul><p><code>Name</code>：grpDetails</p><p><code>BackColor</code>：Transparent</p><p><code>text</code>：详细资料（选填）</p><ul><li>4、<code>Label</code></li></ul><p><code>Name</code>：lblNickName</p><p><code>Text</code>：昵称</p><ul><li>5、<code>Label</code></li></ul><p><code>Name</code>：lblAge</p><p><code>Text</code>：年龄</p><ul><li>6、<code>Label</code></li></ul><p><code>Name</code>：lblSex</p><p><code>Text</code>：性别</p><ul><li>7、<code>Label</code></li></ul><p><code>Name</code>：lblPwd</p><p><code>Text</code>：密码</p><ul><li>8、<code>Label</code></li></ul><p><code>Name</code>：lblPwdAgain</p><p><code>Text</code>：重复密码</p><ul><li>9、<code>TextBox</code></li></ul><p><code>Name</code>：txtNickName</p><ul><li>10、<code>TextBox</code></li></ul><p><code>Name</code>：txtAge</p><ul><li>11、<code>RadioButton</code></li></ul><p><code>Name</code>：rbtnMale</p><p><code>Text</code>：男</p><ul><li>12、<code>RadioButton</code></li></ul><p><code>Name</code>：rbtnFemale</p><p><code>Text</code>：女</p><ul><li>13、<code>TextBox</code></li></ul><p><code>Name</code>：txtPwd</p><ul><li>14、<code>TextBox</code></li></ul><p><code>Name</code>：txtPwdAgain</p><p><code>BackColor</code>：Transparent</p><ul><li>15、<code>Label</code></li></ul><p><code>Name</code>：lblName</p><p><code>Text</code>：真实姓名</p><ul><li>16、<code>Label</code></li></ul><p><code>Name</code>：lblStar</p><p><code>Text</code>：星座</p><ul><li>17、<code>Label</code></li></ul><p><code>Name</code>：lblBloodType</p><p><code>Text</code>：血型</p><ul><li>18、<code>TextBox</code></li></ul><p><code>Name</code>：txtName</p><ul><li>19、<code>ComboBox</code></li></ul><p><code>Name</code>：cboxStar</p><p><code>DropDownStyle</code>：DropDownlist</p><p><code>Items</code>：白羊座…</p><ul><li>20、<code>ComboBox</code></li></ul><p><code>Name</code>：cboxBloodType</p><p><code>DropDownStyle</code>：DropDownlist</p><p><code>Items</code>：A型…</p><ul><li>21、<code>Button</code></li></ul><p><code>Name</code>：btnRegister</p><p><code>Text</code>：注册</p><ul><li>22、<code>Button</code></li></ul><p><code>Name</code>：btncancel</p><p><code>Text</code>：取消</p><h2 id="注册窗体功能实现"><a href="#注册窗体功能实现" class="headerlink" title="注册窗体功能实现"></a>注册窗体功能实现</h2><h3 id="星座和血型的默认设置"><a href="#星座和血型的默认设置" class="headerlink" title="星座和血型的默认设置"></a>星座和血型的默认设置</h3><p>&emsp;&emsp;将“星座”和“血型”下拉选择框默认选项设置为第一项（索引为0），触发<code>Frm_Register</code>窗体的<code>Load</code>事件，双击窗体空白处进入代码编辑区，编写如下代码即可实现此功设置。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Register_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    cboxStar.SelectedIndex = cboxBloodType.SelectedIndex = <span class="number">0</span>;<span class="comment">//设置星座和血型的默认值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建数据库操作类的对象"><a href="#创建数据库操作类的对象" class="headerlink" title="创建数据库操作类的对象"></a>创建数据库操作类的对象</h3><p>&emsp;&emsp;实现申请账号功能时，需要像数据库里添加数据，所以需要创建DataOperator对象。</p><p>&emsp;&emsp;在<code>Frm_Register</code>的公共变量和方法编辑区编写如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataOperator dataOper = <span class="keyword">new</span> DataOperator();</span><br></pre></td></tr></table></figure><h3 id="实现账号注册"><a href="#实现账号注册" class="headerlink" title="实现账号注册"></a>实现账号注册</h3><p>&emsp;&emsp;触发注册按钮的点击事件，双击注册按钮即可，在事件编辑区编写如下代码该事件首先验证用户输入，如果条件都满足，则将用户输入的信息添加到<code>tb_User</code>表中。并获得新注册的账号。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnRegister_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (txtNickName.Text.Trim() == <span class="string">&quot;&quot;</span> || txtNickName.Text.Length &gt; <span class="number">20</span>)<span class="comment">//验证昵称</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;昵称输入有误！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtNickName.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (txtAge.Text.Trim() == <span class="string">&quot;&quot;</span>)                                   <span class="comment">//验证年龄</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入年龄！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtAge.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!rbtnMale.Checked &amp;&amp; !rbtnFemale.Checked)                   <span class="comment">//验证性别</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请选择性别！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        lblSex.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (txtPwd.Text.Trim() == <span class="string">&quot;&quot;</span>)                                   <span class="comment">//验证密码</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入密码！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtPwd.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (txtPwdAgain.Text.Trim() == <span class="string">&quot;&quot;</span>)                              <span class="comment">//验证确认密码</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;请输入确认密码！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtPwdAgain.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (txtPwd.Text.Trim() != txtPwdAgain.Text.Trim())              <span class="comment">//验证两次密码是否一致</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;两次输入的密码不一样！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        txtPwdAgain.Focus();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> myQQNum = <span class="number">0</span>;                                                <span class="comment">//QQ号码</span></span><br><span class="line">    <span class="built_in">string</span> message;                                             <span class="comment">//弹出的消息</span></span><br><span class="line">    <span class="built_in">string</span> sex = rbtnMale.Checked ? rbtnMale.Text : rbtnFemale.Text;    <span class="comment">//获得选中的性别</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="built_in">string</span>.Format(<span class="string">&quot;insert into tb_User (Pwd, NickName, Sex, Age, Name, Star, BloodType) values(&#x27;&#123;0&#125;&#x27;, &#x27;&#123;1&#125;&#x27;, &#x27;&#123;2&#125;&#x27;,&#123;3&#125;,&#x27;&#123;4&#125;&#x27;,&#x27;&#123;5&#125;&#x27;,&#x27;&#123;6&#125;&#x27;); select @@Identity from tb_User&quot;</span>,txtPwd.Text.Trim(), txtNickName.Text.Trim(), sex, <span class="built_in">int</span>.Parse(txtAge.Text.Trim()), txtName.Text.Trim(), cboxStar.Text, cboxBloodType.Text);</span><br><span class="line">    SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, DataOperator.connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">    DataOperator.connection.Open();                         <span class="comment">//打开数据库连接</span></span><br><span class="line">    <span class="built_in">int</span> result = command.ExecuteNonQuery();                 <span class="comment">//执行SQL语句</span></span><br><span class="line">    <span class="keyword">if</span> (result == <span class="number">1</span>)                                            <span class="comment">//判断是否成功</span></span><br><span class="line">    &#123;</span><br><span class="line">        sql = <span class="string">&quot;select SCOPE_IDENTITY() from tb_User&quot;</span>;       <span class="comment">//查询新增加的记录的标识号</span></span><br><span class="line">        command = <span class="keyword">new</span> SqlCommand(sql, DataOperator.connection); <span class="comment">//执行查询</span></span><br><span class="line">        myQQNum = Convert.ToInt32(command.ExecuteScalar());     <span class="comment">//获取最新增加的账号</span></span><br><span class="line">        message = <span class="built_in">string</span>.Format(<span class="string">&quot;注册成功！你的SunTalk号码是&quot;</span> + myQQNum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        message = <span class="string">&quot;注册失败，请重试！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DataOperator.connection.Close();                            <span class="comment">//关闭数据库连接</span></span><br><span class="line">    MessageBox.Show(message, <span class="string">&quot;注册结果&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">    <span class="keyword">this</span>.Close();                                               <span class="comment">//关闭当前窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取消注册"><a href="#取消注册" class="headerlink" title="取消注册"></a>取消注册</h3><p>&emsp;&emsp;如果用户点击取消，则关闭该注册窗口。，双击取消按钮，编写取消按钮点击事件的实现代码，如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCancel_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="主窗体"><a href="#主窗体" class="headerlink" title="主窗体"></a>主窗体</h1><p>&emsp;&emsp;主窗体主要显示当前用户的个人信息（头像，昵称，账号、个性签名）好友列表（头像，昵称、是否在线）和快捷工具栏，用户可以通过双击某个好友，与其进行聊天。</p><h2 id="主窗体布局设计"><a href="#主窗体布局设计" class="headerlink" title="主窗体布局设计"></a>主窗体布局设计</h2><p>&emsp;&emsp;本窗体设计用了背景做了填充，也可以不用。</p><p><img src="https://i.loli.net/2021/05/28/CfaZMB5ANHSKdlU.jpg"></p><h2 id="主窗体控件填充"><a href="#主窗体控件填充" class="headerlink" title="主窗体控件填充"></a>主窗体控件填充</h2><h4 id="添加组件"><a href="#添加组件" class="headerlink" title="添加组件"></a>添加组件</h4><p><img src="https://i.loli.net/2021/05/28/xTltsiYDUy7aR4g.jpg"></p><blockquote><p>控件是指在窗体上可以看到的对象，而组件则在窗体中看不到。</p></blockquote><p>&emsp;&emsp;Frm_Main主要用了两种组件，分别是ImageLIst和Timer，其中ImageList组件用于存储图像列表，Timer组件用来作为定时器，Frm_Main窗体中用到了3个ImageList组件和3个Timer组件。如上面的截图所示。</p><p>&emsp;&emsp;三个组件的作用分别是提供大头像列表、小头像列表和聊天消息列表（这个可以不加），组件属性可参考下图，注意更改Name属性，以便后续代码中调用。</p><p><img src="https://i.loli.net/2021/05/29/fFDpn7Kzuvxtdlh.jpg"></p><p>&emsp;&emsp;Timer组件需要添加三个，分别是tmMessage、tmADDFriend、tmChat属性分别如下。</p><ul><li>1、<code>Timer</code></li></ul><p><code>Name</code>：tmMessage</p><p><code>Enabled</code>：True</p><p><code>Interval</code>：2000</p><ul><li>2、<code>Timer</code></li></ul><p><code>Name</code>：tmAddFriend</p><p><code>Enabled</code>：False</p><p><code>Interval</code>：1000</p><ul><li>3、<code>Timer</code></li></ul><p><code>Name</code>：tmChat</p><p><code>Enabled</code>：False</p><p><code>Interval</code>：500</p><h4 id="添加控件"><a href="#添加控件" class="headerlink" title="添加控件"></a>添加控件</h4><p><img src="https://i.loli.net/2021/05/28/z12LarWVFhkOtAH.jpg"></p><ul><li>1、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxHead</p><p><code>BackColor</code>：Transparent</p><p><code>SizeMode</code>：Zoom</p><ul><li>2、<code>Label</code></li></ul><p><code>Name</code>：lblName</p><p><code>Text</code>：</p><p><code>AutoSize</code>：True</p><ul><li>3、<code>TextBox</code></li></ul><p><code>Name</code>：txtSign</p><p><code>BorderStyle</code>：None</p><ul><li>4、<code>ListView</code></li></ul><p><code>Name</code>：lvFriend</p><p><code>LargeImageList</code>：imglistHead</p><p><code>Groups</code>：添加两个分组，Header属性分别为“我的好友”“陌生人”</p><p><code>MultiSelect</code>：False</p><p><code>SmallImageList</code>：imglistSmallHead</p><p><code>StateImageList</code>：imglistSmallHead</p><ul><li>6、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxMin</p><p><code>BackColor</code>：Transparent</p><ul><li>7、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxClose</p><p><code>BackColor</code>：Transparent</p><h4 id="设计工具栏"><a href="#设计工具栏" class="headerlink" title="设计工具栏"></a>设计工具栏</h4><p>&emsp;&emsp;如上图中的5所示，我们需要在主窗体处添加一个工具栏。首先我们向主窗体 中添加<code>toolStrip</code>控件,并修改其<code>Name</code>属性为<code>tsOperation</code>先将控件的<code>toolStrip</code>的<code>Dock</code>属性设置为<code>Bottom</code>。</p><p>&emsp;&emsp;添加5个<code>Button</code>按钮，分别设置其属性。</p><ul><li>1、<code>Name</code>：tsbtnInfo</li></ul><p><code>Image</code>：（自定义）</p><p><code>Text</code>：个人信息</p><ul><li>2、<code>Name</code>：tsbtnSearchFriend</li></ul><p><code>Image</code>：（自定义）</p><p><code>Text</code>：查找</p><p>（为了突出查找按钮，可以设置成既显示图片又显示文字，方法是：右键该控件设置<code>DisplayStyle</code>属性为<code>ImageAndText</code>）</p><ul><li>3、<code>Name</code>：tsbUpdateFriendList</li></ul><p><code>Image</code>：（自定义）</p><p><code>Text</code>：更新好友列表</p><ul><li>4、<code>Name</code>：tsbtnMessageReading</li></ul><p><code>Image</code>：（自定义）</p><p><code>Text</code>：系统消息</p><ul><li>5、<code>Name</code>：tsbtExit</li></ul><p><code>Image</code>：（自定义）</p><p><code>Text</code>：退出</p><h4 id="设计快捷菜单"><a href="#设计快捷菜单" class="headerlink" title="设计快捷菜单"></a>设计快捷菜单</h4><p><img src="https://i.loli.net/2021/05/29/uLcNtOW6kPG1vdj.jpg"></p><p>&emsp;&emsp;首先我们像主窗体中添加<code>ContextImageList</code>控件，将其Name属性修改成<code>cmsFriendKList</code></p><p>&emsp;&emsp;在请在此处输入处添加三个按钮，右键即可设置其属性，后续可在代码中调用。</p><ul><li><p>小头像</p><p><code>Name</code>：tsmenuView</p><p><code>Visible</code>：False</p></li><li><p>添加好友</p><p><code>Name</code>：tsmenuAdd</p><p><code>Visible</code>：False</p></li><li><p>删除</p><p><code>Name</code>：tsmenuDel</p><p><code>Visible</code>：False</p></li></ul><h2 id="主窗体功能实现"><a href="#主窗体功能实现" class="headerlink" title="主窗体功能实现"></a>主窗体功能实现</h2><h4 id="添加应用及一些必要变量"><a href="#添加应用及一些必要变量" class="headerlink" title="添加应用及一些必要变量"></a>添加应用及一些必要变量</h4><p>&emsp;&emsp;在<code>Frm_Main</code>的命名空间引用区域添加如下代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"><span class="keyword">using</span> System.Media;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在<code>Frm_Main</code>的公共代码编辑区添加如下代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> fromUserID;<span class="comment">//消息发送者</span></span><br><span class="line"><span class="built_in">int</span> friendHeadID;<span class="comment">//发消息好友的头像ID  </span></span><br><span class="line"><span class="built_in">int</span> messageImageIndex = <span class="number">0</span>; <span class="comment">//工具栏中的消息图标的索引</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> nickName = <span class="string">&quot;&quot;</span>;<span class="comment">//自己的昵称</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> strFlag = <span class="string">&quot;[离线]&quot;</span>;</span><br><span class="line">DataOperator dataOper = <span class="keyword">new</span> DataOperator();</span><br></pre></td></tr></table></figure><h4 id="加载用户相关信息"><a href="#加载用户相关信息" class="headerlink" title="加载用户相关信息"></a>加载用户相关信息</h4><h5 id="数据库查询"><a href="#数据库查询" class="headerlink" title="数据库查询"></a>数据库查询</h5><p>&emsp;&emsp;窗体加载时，从数据库中获取用户的好友信息，因此需要在<code>DataOperator</code>类中添加<code>GetDataReader</code>方法来执行Sql查询。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> SqlDataReader <span class="title">GetDataReader</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            <span class="keyword">if</span> (connection.State == ConnectionState.Open)<span class="comment">//如果当前数据连接处于打开状态</span></span><br><span class="line">                connection.Close();  <span class="comment">//关闭数据库连接</span></span><br><span class="line">            connection.Open();<span class="comment">//打开数据库连接</span></span><br><span class="line">            SqlDataReader datareader = command.ExecuteReader();<span class="comment">//生成SqlDataReader</span></span><br><span class="line">            <span class="keyword">return</span> datareader;<span class="comment">//返回SqlDataReader</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h5 id="显示用户信息"><a href="#显示用户信息" class="headerlink" title="显示用户信息"></a>显示用户信息</h5><p>&emsp;&emsp;切换到<code>Frm_Main</code>代码页，在公共变量编辑区添加如下代码来显示用户的头像，昵称，账号等信息。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowInfo</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> headID = <span class="number">0</span>;<span class="comment">//头像索引</span></span><br><span class="line">    <span class="comment">//获取当前用户的昵称、头像</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select NickName, HeadID,Sign from tb_User where ID=&quot;</span> + PublicClass.loginID + <span class="string">&quot;&quot;</span>;</span><br><span class="line">    SqlDataReader dataReader = dataOper.GetDataReader(sql);<span class="comment">//执行查询操作</span></span><br><span class="line">    <span class="keyword">if</span> (dataReader.Read())<span class="comment">//读取查询结果</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(dataReader[<span class="string">&quot;NickName&quot;</span>] <span class="keyword">is</span> DBNull))<span class="comment">//判断NickName不为空</span></span><br><span class="line">        &#123;</span><br><span class="line">            nickName = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString();<span class="comment">//记录自己的昵称</span></span><br><span class="line">        &#125;</span><br><span class="line">        headID = Convert.ToInt32(dataReader[<span class="string">&quot;HeadID&quot;</span>]);<span class="comment">//记录自己的头像ID</span></span><br><span class="line">        txtSign.Text = dataReader[<span class="string">&quot;Sign&quot;</span>].ToString();<span class="comment">//显示个性签名</span></span><br><span class="line">    &#125;</span><br><span class="line">    dataReader.Close();<span class="comment">//关闭读取器</span></span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">    <span class="keyword">this</span>.Text = PublicClass.loginID.ToString();<span class="comment">//设置窗体标题为当前用户账号</span></span><br><span class="line">    pboxHead.Image = imglistHead.Images[headID];<span class="comment">//显示用户头像</span></span><br><span class="line">    lblName.Text = nickName + <span class="string">&quot;(&quot;</span> + PublicClass.loginID + <span class="string">&quot;)&quot;</span>;<span class="comment">//显示昵称及账号</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示好友信息"><a href="#显示好友信息" class="headerlink" title="显示好友信息"></a>显示好友信息</h5><p>&emsp;&emsp;添加如下代码，在好友列表中显示好友头像，昵称和是否在线等信息。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowFriendList</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    lvFriend.Items.Clear();<span class="comment">//清空原来的列表</span></span><br><span class="line">    <span class="comment">//定义查找好友的SQL语句</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select FriendID,NickName,HeadID,Flag from tb_User,tb_Friend where tb_Friend.HostID=&quot;</span> + PublicClass.loginID + <span class="string">&quot; and tb_User.ID=tb_Friend.FriendID&quot;</span>;</span><br><span class="line">    SqlDataReader dataReader = dataOper.GetDataReader(sql);<span class="comment">//执行查询</span></span><br><span class="line">    <span class="built_in">int</span> i = lvFriend.Items.Count;<span class="comment">//记录添加到ListView中的项索引</span></span><br><span class="line">    <span class="keyword">while</span> (dataReader.Read())<span class="comment">//循环添加好友列表</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(dataReader[<span class="string">&quot;Flag&quot;</span>].ToString()==<span class="string">&quot;0&quot;</span>)</span><br><span class="line">            strFlag = <span class="string">&quot;[离线]&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            strFlag = <span class="string">&quot;[在线]&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> strTemp = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString();<span class="comment">//记录好友昵称</span></span><br><span class="line">        <span class="comment">//对好友昵称进行处理</span></span><br><span class="line">        <span class="built_in">string</span> strFriendName=strTemp;</span><br><span class="line">        <span class="keyword">if</span> (strTemp.Length &lt; <span class="number">9</span>)</span><br><span class="line">            strFriendName = strTemp.PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            strFriendName = (strTemp.Substring(<span class="number">0</span>, <span class="number">2</span>) + <span class="string">&quot;...&quot;</span>).PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        <span class="comment">//向ListView中添加项，Name:好友ID，值：昵称，要显示的头像</span></span><br><span class="line">        lvFriend.Items.Add(dataReader[<span class="string">&quot;FriendID&quot;</span>].ToString(), strFriendName + strFlag, </span><br><span class="line">(<span class="built_in">int</span>)dataReader[<span class="string">&quot;HeadID&quot;</span>]);</span><br><span class="line">        lvFriend.Items[i].Group = lvFriend.Groups[<span class="number">0</span>];<span class="comment">//设置项的分组为我的好友</span></span><br><span class="line">        i++;<span class="comment">//临时变量加1</span></span><br><span class="line">    &#125;</span><br><span class="line">    dataReader.Close();<span class="comment">//关闭读取器</span></span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="默认加载"><a href="#默认加载" class="headerlink" title="默认加载"></a>默认加载</h5><p>&emsp;&emsp;添加如下代码，当用户进入主界面时，默认显示用户的个人信息和好友列表以及默认头像等。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Main_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    tsbtnMessageReading.Image = imglistMessage.Images[<span class="number">0</span>];<span class="comment">//工具栏的消息图标</span></span><br><span class="line">    ShowInfo();<span class="comment">//显示个人信息</span></span><br><span class="line">    ShowFriendList();<span class="comment">//显示好友列表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="工具栏按钮功能实现"><a href="#工具栏按钮功能实现" class="headerlink" title="工具栏按钮功能实现"></a>工具栏按钮功能实现</h4><h5 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnInfo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Frm_EditInfo frmInfo = <span class="keyword">new</span> Frm_EditInfo();<span class="comment">//创建个人信息窗体对象</span></span><br><span class="line">    frmInfo.Show();<span class="comment">//显示个人信息窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查找好友"><a href="#查找好友" class="headerlink" title="查找好友"></a>查找好友</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnSearchFriend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Frm_AddFriend frmAddFriend = <span class="keyword">new</span> Frm_AddFriend();<span class="comment">//创建查找好友窗体对象</span></span><br><span class="line">    frmAddFriend.Show();<span class="comment">//显示查找好友窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示好友列表"><a href="#显示好友列表" class="headerlink" title="显示好友列表"></a>显示好友列表</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnUpdateFriendList_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ShowFriendList();<span class="comment">//显示好友列表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示系统消息"><a href="#显示系统消息" class="headerlink" title="显示系统消息"></a>显示系统消息</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnMessageReading_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    tmAddFriend.Stop();<span class="comment">//停止消息提醒定时器</span></span><br><span class="line">    messageImageIndex = <span class="number">0</span>;<span class="comment">//头像恢复正常</span></span><br><span class="line">    <span class="comment">//显示正常的系统消息提醒图标</span></span><br><span class="line">    tsbtnMessageReading.Image = imglistMessage.Images[messageImageIndex];</span><br><span class="line">    Frm_Remind frmRemind = <span class="keyword">new</span> Frm_Remind();<span class="comment">//创建系统消息窗体对象</span></span><br><span class="line">    frmRemind.Show();<span class="comment">//显示系统消息窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="退出当前程序"><a href="#退出当前程序" class="headerlink" title="退出当前程序"></a>退出当前程序</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnExit_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    DialogResult result = MessageBox.Show(<span class="string">&quot;确实要退出吗？&quot;</span>, <span class="string">&quot;确认&quot;</span>, MessageBoxButtons.YesNo, </span><br><span class="line">MessageBoxIcon.Question); <span class="comment">//弹出确定对话框</span></span><br><span class="line">    <span class="keyword">if</span> (result == DialogResult.Yes)<span class="comment">//如果单击是按钮</span></span><br><span class="line">    &#123;</span><br><span class="line">        Application.ExitThread();<span class="comment">//退出当前程序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="双击打开聊天窗体"><a href="#双击打开聊天窗体" class="headerlink" title="双击打开聊天窗体"></a>双击打开聊天窗体</h4><p>&emsp;&emsp;首先定义一些必要的变量。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> friendID=<span class="number">0</span>;<span class="comment">//当前聊天的好友号码</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> nickName;<span class="comment">//当前聊天的好友昵称</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> headID;<span class="comment">//当前聊天的好友头像ID</span></span><br><span class="line">DataOperator dataOper = <span class="keyword">new</span> DataOperator();<span class="comment">//创建数据操作类的对象</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;触发<code>lvFriend</code>控件的MouseDoubleClick事件，编写如下代码，实现双击头像打开聊天窗体功能。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Frm_Chat frmChat;<span class="comment">//聊天窗体对象</span></span><br><span class="line">        <span class="comment">//双击打开聊天窗体</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">lvFriend_MouseDoubleClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lvFriend.SelectedItems.Count &gt; <span class="number">0</span>)<span class="comment">//判断是否有选中项</span></span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (frmChat == <span class="literal">null</span>)<span class="comment">//判断聊天窗体对象是否为空</span></span><br><span class="line">                &#123;</span><br><span class="line">                    frmChat = <span class="keyword">new</span> Frm_Chat();<span class="comment">//创建聊天窗体对象</span></span><br><span class="line">                    <span class="comment">//记录聊天的账号</span></span><br><span class="line">                    frmChat.friendID = Convert.ToInt32(lvFriend.SelectedItems[<span class="number">0</span>].Name);</span><br><span class="line">                    frmChat.nickName = dataOper.GetDataSet(<span class="string">&quot;select NickName from tb_User where ID=&quot;</span> + frmChat.friendID).Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>].ToString();<span class="comment">//记录昵称</span></span><br><span class="line">                    frmChat.headID = Convert.ToInt32(dataOper.GetDataSet(<span class="string">&quot;select HeadID from tb_User where ID=&quot;</span> + frmChat.friendID).Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>])+<span class="number">1</span>;<span class="comment">//记录头像ID</span></span><br><span class="line">                    frmChat.ShowDialog();<span class="comment">//以对话框显示聊天窗体对象</span></span><br><span class="line">                    frmChat = <span class="literal">null</span>;<span class="comment">//将聊天窗体对象设置为空</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (tmChat.Enabled == <span class="literal">true</span>)<span class="comment">//如果聊天定时器处于可用状态</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tmChat.Stop();<span class="comment">//停止聊天定时器</span></span><br><span class="line">                    lvFriend.SelectedItems[<span class="number">0</span>].ImageIndex = friendHeadID;<span class="comment">//将选中项的头像显示为正常状态</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="实时消息提醒及好友头像闪烁"><a href="#实时消息提醒及好友头像闪烁" class="headerlink" title="实时消息提醒及好友头像闪烁"></a>实时消息提醒及好友头像闪烁</h4><p>&emsp;&emsp;（这个功能在本次练习中无法进行演示 : ( 可以学习一下实现代码）</p><h5 id="判断用户是否在好友列表中"><a href="#判断用户是否在好友列表中" class="headerlink" title="判断用户是否在好友列表中"></a>判断用户是否在好友列表中</h5><p>&emsp;&emsp;在Frm_Main代码编辑区添加如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">HasShowUser</span>(<span class="params"><span class="built_in">int</span> ID</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//是否在当前显示出的用户列表中找到了该用户</span></span><br><span class="line">    <span class="built_in">bool</span> find = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//循环lvFriend中的2个组，寻找发消息的人是否在列表中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; lvFriend.Groups[i].Items.Count; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Convert.ToInt32(lvFriend.Groups[i].Items[j].Name) == ID)</span><br><span class="line">            &#123;</span><br><span class="line">                find = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> find;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示陌生人列表"><a href="#显示陌生人列表" class="headerlink" title="显示陌生人列表"></a>显示陌生人列表</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateStranger</span>(<span class="params"><span class="built_in">int</span> ID</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    lvFriend.Items.Clear();<span class="comment">//清空原来的列表</span></span><br><span class="line">    <span class="comment">//获取指定用户的昵称及头像ID</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select NickName, HeadID from tb_User where ID=&quot;</span> + ID;</span><br><span class="line">    SqlDataReader dataReader = dataOper.GetDataReader(sql);<span class="comment">//执行查询</span></span><br><span class="line">    <span class="built_in">int</span> i = lvFriend.Items.Count;    <span class="comment">//记录添加到ListView中的项索引</span></span><br><span class="line">    <span class="keyword">while</span> (dataReader.Read())<span class="comment">//循环添加陌生人列表</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> strTemp = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString();<span class="comment">//记录好友昵称</span></span><br><span class="line">        <span class="comment">//对好友昵称进行处理</span></span><br><span class="line">        <span class="built_in">string</span> strName = strTemp;</span><br><span class="line">        <span class="keyword">if</span> (strTemp.Length &lt; <span class="number">9</span>)</span><br><span class="line">            strName = strTemp.PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            strName = (strTemp.Substring(<span class="number">0</span>, <span class="number">2</span>) + <span class="string">&quot;...&quot;</span>).PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        <span class="comment">//向ListView中添加项，Name:用户ID，值：昵称，要显示的头像</span></span><br><span class="line">        lvFriend.Items.Add(fromUserID.ToString(), strName, (<span class="built_in">int</span>)dataReader[<span class="string">&quot;HeadID&quot;</span>]);</span><br><span class="line">        lvFriend.Items[i].Group = lvFriend.Groups[<span class="number">1</span>];<span class="comment">//设置项的分组为陌生人</span></span><br><span class="line">        i++;<span class="comment">//临时变量加1</span></span><br><span class="line">    &#125;</span><br><span class="line">    dataReader.Close();<span class="comment">//关闭读取器</span></span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="未读消息提示"><a href="#未读消息提示" class="headerlink" title="未读消息提示"></a>未读消息提示</h5><p>&emsp;&emsp;触发<code>tmMessage</code>的<code>Tick</code>事件，编写如下代码，在显示未读消息的同时，进行消息提示。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmMessage_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (lvFriend.SelectedItems.Count &gt; <span class="number">0</span>)<span class="comment">//判断好友列表中有选中项</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (lvFriend.SelectedItems[<span class="number">0</span>].Group == lvFriend.Groups[<span class="number">0</span>])<span class="comment">//如果选中项属于第1组</span></span><br><span class="line">        &#123;</span><br><span class="line">            tsMenuDel.Visible = <span class="literal">true</span>;<span class="comment">//显示删除菜单</span></span><br><span class="line">            tsMenuAdd.Visible = <span class="literal">false</span>;<span class="comment">//隐藏添加好友菜单</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果选中项属于第2组</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (lvFriend.SelectedItems[<span class="number">0</span>].Group == lvFriend.Groups[<span class="number">1</span>]) </span><br><span class="line">        &#123;</span><br><span class="line">            tsMenuDel.Visible = <span class="literal">false</span>;<span class="comment">//隐藏删除菜单</span></span><br><span class="line">            tsMenuAdd.Visible = <span class="literal">true</span>;<span class="comment">//显示添加好友菜单</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> messageTypeID = <span class="number">1</span>;<span class="comment">//消息类型</span></span><br><span class="line">    <span class="built_in">int</span> messageState = <span class="number">1</span>;<span class="comment">//消息状态</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select top 1 FromUserID, MessageTypeID, MessageState from tb_Message where </span></span><br><span class="line"><span class="string">ToUserID=&quot;</span> + PublicClass.loginID + <span class="string">&quot; and MessageState=0&quot;</span>;<span class="comment">//查找未读消息对应的好友ID</span></span><br><span class="line">    SqlDataReader dataReader = dataOper.GetDataReader(sql);<span class="comment">//执行查询</span></span><br><span class="line">    <span class="keyword">if</span> (dataReader.Read())<span class="comment">//读取未读消息</span></span><br><span class="line">    &#123;</span><br><span class="line">        fromUserID = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;FromUserID&quot;</span>];<span class="comment">//记录消息发送者</span></span><br><span class="line">        messageTypeID = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;MessageTypeID&quot;</span>];<span class="comment">//记录消息类型</span></span><br><span class="line">        messageState = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;MessageState&quot;</span>];<span class="comment">//记录消息状态</span></span><br><span class="line">    &#125;</span><br><span class="line">    dataReader.Close();<span class="comment">//关闭读取器</span></span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">    <span class="comment">//消息有两种类型：聊天消息、添加好友消息</span></span><br><span class="line">    <span class="comment">//判断消息类型，如果是添加好友消息，启动消息提醒定时器</span></span><br><span class="line">    <span class="keyword">if</span> (messageTypeID == <span class="number">2</span> &amp;&amp; messageState == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        SoundPlayer player = <span class="keyword">new</span> SoundPlayer(<span class="string">&quot;system.wav&quot;</span>);<span class="comment">//系统消息提示</span></span><br><span class="line">        player.Play();<span class="comment">//播放指定声音文件</span></span><br><span class="line">        tmAddFriend.Start();<span class="comment">//启动消息提醒定时器</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果是聊天消息，启动聊天定时器，使好友头像闪烁</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (messageTypeID == <span class="number">1</span> &amp;&amp; messageState == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sql = <span class="string">&quot;select HeadID from tb_User where ID=&quot;</span> + fromUserID;<span class="comment">//获取消息发送者的ID</span></span><br><span class="line">        friendHeadID = dataOper.ExecSQL(sql);<span class="comment">//设置发消息好友的头像ID</span></span><br><span class="line">        <span class="comment">//如果发消息的人不在好友列表中，将其添加到陌生人列表中</span></span><br><span class="line">        <span class="keyword">if</span> (!HasShowUser(fromUserID))</span><br><span class="line">        &#123;</span><br><span class="line">            UpdateStranger(fromUserID);<span class="comment">//显示陌生人列表</span></span><br><span class="line">        &#125;</span><br><span class="line">        SoundPlayer player = <span class="keyword">new</span> SoundPlayer(<span class="string">&quot;msg.wav&quot;</span>);<span class="comment">//聊天消息提示</span></span><br><span class="line">        player.Play();<span class="comment">//播放指定声音文件</span></span><br><span class="line">        tmChat.Start();<span class="comment">//启动聊天定时器</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="消息提醒"><a href="#消息提醒" class="headerlink" title="消息提醒"></a>消息提醒</h5><p>&emsp;&emsp;触发<code>tmAddFriend</code>的<code>Tick</code>事件，编写如下代码，获取<code>系统消息图像</code>索引，并显示在工具栏中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmAddFriend_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    messageImageIndex = messageImageIndex == <span class="number">0</span> ? <span class="number">1</span>:<span class="number">0</span>;<span class="comment">//实时获取系统消息图像索引</span></span><br><span class="line">    <span class="comment">//工具栏中显示消息读取状态图像</span></span><br><span class="line">    tsbtnMessageReading.Image = imglistMessage.Images[messageImageIndex];</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="头像闪动"><a href="#头像闪动" class="headerlink" title="头像闪动"></a>头像闪动</h5><p>&emsp;&emsp;触发<code>tmChat</code>的<code>Tick</code>事件，编写如下代码，实现好友发消息时的头像闪动。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmChat_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//循环好友列表两个组中的每项，找到消息发送者，使其头像闪烁</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; lvFriend.Groups[i].Items.Count; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//判断是否为消息发送者</span></span><br><span class="line">            <span class="keyword">if</span> (Convert.ToInt32(lvFriend.Groups[i].Items[j].Name) == fromUserID)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (frmChat != <span class="literal">null</span> &amp;&amp; frmChat.friendID != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//直接显示头像，避免闪烁效果</span></span><br><span class="line">                    lvFriend.SelectedItems[<span class="number">0</span>].ImageIndex = friendHeadID;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lvFriend.Groups[i].Items[j].ImageIndex &lt; <span class="number">100</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//索引为100的图片是一个空白图片，为了实现闪烁效果</span></span><br><span class="line">                        lvFriend.Groups[i].Items[j].ImageIndex = <span class="number">100</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                         <span class="comment">//要显示的消息发送者头像索引</span></span><br><span class="line">                        lvFriend.Groups[i].Items[j].ImageIndex = friendHeadID;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="聊天窗体"><a href="#聊天窗体" class="headerlink" title="聊天窗体"></a>聊天窗体</h1><h2 id="聊天布局设计"><a href="#聊天布局设计" class="headerlink" title="聊天布局设计"></a>聊天布局设计</h2><p>&emsp;&emsp;聊天窗体可以有纯控件来做，为了美观和方便，还是添加了一个背景。</p><p><img src="https://i.loli.net/2021/05/29/4ma9Z5oLwlbFvif.jpg"></p><h2 id="聊天控件填充"><a href="#聊天控件填充" class="headerlink" title="聊天控件填充"></a>聊天控件填充</h2><p><img src="https://i.loli.net/2021/05/29/TUEax4G1vFjo8dJ.jpg"></p><ul><li>1、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxHead</p><p><code>BackColor</code>：Transparent</p><p><code>SizeMode</code>：Zoom</p><ul><li>2、<code>Label</code></li></ul><p><code>Name</code>：lblFriend</p><ul><li>3、<code>RichTextBox</code></li></ul><p><code>Name</code>：rtxtMessage</p><p><code>ReadOnly</code>：True</p><p><code>ScrollBars</code>：Vertical</p><ul><li>4、<code>RichTextBox</code></li></ul><p><code>Name</code>：rtxtChat</p><p><code>ReadOnly</code>：True</p><p><code>ScrollBars</code>：Vertical</p><ul><li>5、<code>Button</code></li></ul><p><code>Name</code>：btnClose</p><p><code>text</code>：关闭</p><ul><li>6、<code>Button</code></li></ul><p><code>Name</code>：btnSend</p><p><code>text</code>：发送</p><ul><li>7、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxMin</p><p><code>BackColor</code>：Transparent</p><ul><li>8、<code>PictureBox</code></li></ul><p><code>Name</code>：pboxClose</p><p><code>BackColor</code>：Transparent</p><h2 id="聊天功能实现"><a href="#聊天功能实现" class="headerlink" title="聊天功能实现"></a>聊天功能实现</h2><p>&emsp;&emsp;需要操作数据库，所以在实现代码编写之前，引用相应命名空间。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br></pre></td></tr></table></figure><h4 id="显示好友头像及好友信息"><a href="#显示好友头像及好友信息" class="headerlink" title="显示好友头像及好友信息"></a>显示好友头像及好友信息</h4><p>&emsp;&emsp;切换到<code>Frm_Main</code>代码编辑区，触发窗体的Load加载时间，添加如下代码，实现显示好友头像和好友名称的功能。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Chat_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.Text = <span class="string">&quot;与\&quot;&quot;</span> + nickName + <span class="string">&quot;\&quot;聊天中&quot;</span>;<span class="comment">//设置窗体标题</span></span><br><span class="line">    pboxHead.Image = imglistHead.Images[headID];<span class="comment">//设置好友头像</span></span><br><span class="line">    lblFriend.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125;(&#123;1&#125;)&quot;</span>, nickName, friendID);<span class="comment">//设置好友名称</span></span><br><span class="line">    rtxtMessage.ScrollToCaret();<span class="comment">//滚动条总在最下方</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="显示未读消息"><a href="#显示未读消息" class="headerlink" title="显示未读消息"></a>显示未读消息</h4><p>&emsp;&emsp;切换到<code>Frm_Main</code>窗体公共变量或方法的编辑区，添加如下代码，查询未读聊天消息。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetMessage</span>(<span class="params"><span class="built_in">string</span> messageID</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span>[] messageIDs = messageID.Split(<span class="string">&#x27;_&#x27;</span>);<span class="comment">//分割出每个消息ID</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;update tb_Message set MessageState=1 where ID=&quot;</span>;<span class="comment">//定义更新SQL语句</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> id <span class="keyword">in</span> messageIDs)<span class="comment">//遍历所有消息ID</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (id != <span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sql += id;<span class="comment">//设置更新条件</span></span><br><span class="line">            <span class="built_in">int</span> result = dataOper.ExecSQLResult(sql);<span class="comment">//执行数据表更新操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;添加如下代码，编写显示信息方法。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowMessage</span>(<span class="params"></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> messageID = <span class="string">&quot;&quot;</span>;<span class="comment">//消息ID组成的字符串</span></span><br><span class="line">    <span class="built_in">string</span> message;<span class="comment">//消息内容</span></span><br><span class="line">    <span class="built_in">string</span> messageTime;<span class="comment">//消息发送时间</span></span><br><span class="line">    <span class="comment">//读取消息的SQL语句</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select ID,Message,MessageTime from tb_Message where FromUserID=&quot;</span> + friendID </span><br><span class="line">+ <span class="string">&quot; and ToUserID=&quot;</span> + PublicClass.loginID + <span class="string">&quot; and MessageTypeID=1 and MessageState=0&quot;</span>;</span><br><span class="line">    SqlDataReader datareader = dataOper.GetDataReader(sql);</span><br><span class="line">    <span class="comment">//循环将消息添加到窗体上</span></span><br><span class="line">    <span class="keyword">while</span> (datareader.Read())</span><br><span class="line">    &#123;</span><br><span class="line">        messageID += datareader[<span class="string">&quot;ID&quot;</span>] + <span class="string">&quot;_&quot;</span>;<span class="comment">//消息ID</span></span><br><span class="line">        message = datareader[<span class="string">&quot;Message&quot;</span>].ToString();<span class="comment">//消息</span></span><br><span class="line">        <span class="comment">//消息的发送时间</span></span><br><span class="line">        messageTime = Convert.ToDateTime(datareader[<span class="string">&quot;MessageTime&quot;</span>]).ToString();</span><br><span class="line">        <span class="comment">//设置消息显示格式</span></span><br><span class="line">        rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + nickName + <span class="string">&quot;  &quot;</span> + messageTime + <span class="string">&quot;\n  &quot;</span> + message + <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">    <span class="keyword">if</span> (messageID.Length &gt; <span class="number">1</span>) <span class="comment">//判断是否存在消息</span></span><br><span class="line">    &#123;</span><br><span class="line">        messageID.Remove(messageID.Length - <span class="number">1</span>);<span class="comment">//去掉最后的连接符</span></span><br><span class="line">        SetMessage(messageID);<span class="comment">//将显示的消息设置为已读</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="显示所有未读消息"><a href="#显示所有未读消息" class="headerlink" title="显示所有未读消息"></a>显示所有未读消息</h4><p>&emsp;&emsp;触发<code>tmShowMessage</code>的<code>Tick</code>事件，添加显示未读聊天消息的方法。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmShowMessage_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ShowMessage();<span class="comment">//读取所有的未读消息，显示在窗体中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="消息发送"><a href="#消息发送" class="headerlink" title="消息发送"></a>消息发送</h4><p>&emsp;&emsp;触发<code>btnSend</code>控件的<code>Click</code>事件，添加如下代码，实现发送消息的功能。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (rtxtChat.Text.Trim() == <span class="string">&quot;&quot;</span>)<span class="comment">//不能发送空消息</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;不能发送空消息！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK, </span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//发送消息</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//此处的MessageTypeId为1，表示聊天消息；MessageState为0，表示消息未读</span></span><br><span class="line">        <span class="built_in">string</span> sql = <span class="built_in">string</span>.Format(</span><br><span class="line">            <span class="string">&quot;INSERT INTO tb_Message (FromUserID, ToUserID, Message, MessageTypeID, </span></span><br><span class="line"><span class="string">MessageState) VALUES (&#123;0&#125;,&#123;1&#125;,&#x27;&#123;2&#125;&#x27;,&#123;3&#125;,&#123;4&#125;)&quot;</span>,PublicClass.loginID, friendID, rtxtChat.Text, </span><br><span class="line"><span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">int</span> result = dataOper.ExecSQLResult(sql);<span class="comment">//调用方法实现消息插入操作</span></span><br><span class="line">        rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + Frm_Main.nickName + <span class="string">&quot;  &quot;</span> + DateTime.Now + <span class="string">&quot;\n  &quot;</span> + </span><br><span class="line">rtxtChat.Text + <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="number">1</span>) <span class="comment">//如果返回结果不是1，表示没有发送成功</span></span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;消息发送失败，请重新发送！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK, </span><br><span class="line">MessageBoxIcon.Information);</span><br><span class="line">        &#125;</span><br><span class="line">        rtxtChat.Text = <span class="string">&quot;&quot;</span>;<span class="comment">//清空消息</span></span><br><span class="line">        rtxtChat.Focus();<span class="comment">//定位鼠标输入焦点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="按下Enter发送消息"><a href="#按下Enter发送消息" class="headerlink" title="按下Enter发送消息"></a>按下Enter发送消息</h4><p>&emsp;&emsp;触发<code>rtxtChat</code>控件的<code>keyDown</code>事件，添加如下代码，实现消息发送。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">rtxtChat_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.Control &amp;&amp; e.KeyValue == <span class="number">13</span>)<span class="comment">//当同时按下Ctrl和Enter时，发送消息</span></span><br><span class="line">    &#123;</span><br><span class="line">        e.Handled = <span class="literal">true</span>;</span><br><span class="line">        btnSend_Click(<span class="keyword">this</span>, <span class="literal">null</span>);<span class="comment">//发送消息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查看消息记录"><a href="#查看消息记录" class="headerlink" title="查看消息记录"></a>查看消息记录</h4><p>&emsp;&emsp;触发消息记录图片的<code>pboxInfo</code>的<code>Click</code>事件，添加如下代码，查看与当前好友的聊天记录。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxInfo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    rtxtMessage.Clear();<span class="comment">//清空聊天信息显示窗口</span></span><br><span class="line">    <span class="built_in">string</span> messageID = <span class="string">&quot;&quot;</span>;<span class="comment">//消息ID组成的字符串</span></span><br><span class="line">    <span class="built_in">string</span> message;<span class="comment">//消息内容</span></span><br><span class="line">    <span class="built_in">string</span> messageTime;<span class="comment">//消息发送时间</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">&quot;select ID,NickName,Message,MessageTime from v_Message where (FromUserID=&quot;</span> </span><br><span class="line">+ friendID + <span class="string">&quot; and ToUserID=&quot;</span> + PublicClass.loginID + <span class="string">&quot;) or (FromUserID=&quot;</span> + PublicClass.loginID </span><br><span class="line">+ <span class="string">&quot; and ToUserID=&quot;</span> + friendID + <span class="string">&quot;) order by MessageTime asc &quot;</span>;<span class="comment">//读取消息的SQL语句</span></span><br><span class="line">    SqlDataReader datareader = dataOper.GetDataReader(sql);</span><br><span class="line">    <span class="keyword">while</span> (datareader.Read())<span class="comment">//循环将消息添加到窗体上</span></span><br><span class="line">    &#123;</span><br><span class="line">        messageID += datareader[<span class="string">&quot;ID&quot;</span>] + <span class="string">&quot;_&quot;</span>;<span class="comment">//消息ID</span></span><br><span class="line">        message = datareader[<span class="string">&quot;Message&quot;</span>].ToString();<span class="comment">//消息</span></span><br><span class="line">        <span class="comment">//消息的发送时间</span></span><br><span class="line">        messageTime = Convert.ToDateTime(datareader[<span class="string">&quot;MessageTime&quot;</span>]).ToString();</span><br><span class="line">        rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + datareader[<span class="string">&quot;NickName&quot;</span>] + <span class="string">&quot;  &quot;</span> + messageTime + <span class="string">&quot;\n  &quot;</span> + message </span><br><span class="line">+ <span class="string">&quot;&quot;</span>;<span class="comment">//设置消息显示格式</span></span><br><span class="line">    &#125;</span><br><span class="line">    DataOperator.connection.Close();<span class="comment">//关闭数据库连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最小化及关闭"><a href="#最小化及关闭" class="headerlink" title="最小化及关闭"></a>最小化及关闭</h4><p>&emsp;&emsp;分别双击进入最小化和关闭的两个图片按钮，编写如下代码即可。</p><pre><code>private void pboxMin_Click(object sender, EventArgs e)&#123;    this.WindowState = FormWindowState.Minimized;&#125;</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private void pboxClose_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    this.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h1><h2 id="DataOperator"><a href="#DataOperator" class="headerlink" title="DataOperator"></a>DataOperator</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">DataOperator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//数据库连接字符串</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> connString = <span class="string">@&quot;Data Source=LAPTOP-KQ506P5I;Database=db_SunTalk;User ID=sa;Pwd=sun@@15395459989;&quot;</span>;</span><br><span class="line">        <span class="comment">//数据库连接对象</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> SqlConnection connection = <span class="keyword">new</span> SqlConnection(connString);</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">ExecSQL</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);   <span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            <span class="keyword">if</span> (connection.State == ConnectionState.Closed)         <span class="comment">//如果当前数据库连接处于关闭状态</span></span><br><span class="line">                connection.Open();                                  <span class="comment">//打开数据库连接</span></span><br><span class="line">            <span class="built_in">int</span> num = Convert.ToInt32(command.ExecuteScalar());     <span class="comment">//执行查询</span></span><br><span class="line">            connection.Close();                                 <span class="comment">//关闭数据库连接</span></span><br><span class="line">            <span class="keyword">return</span> num;                                         <span class="comment">//返回结果中的第一行第一列</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">ExecSQLResult</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);   <span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            <span class="keyword">if</span> (connection.State == ConnectionState.Closed)     <span class="comment">//如果当前数据库连接处于关闭状态</span></span><br><span class="line">                connection.Open();                       <span class="comment">//打开数据库连接</span></span><br><span class="line">            <span class="built_in">int</span> result = command.ExecuteNonQuery();       <span class="comment">//执行SQL语句</span></span><br><span class="line">            connection.Close();                           <span class="comment">//关闭数据库连接</span></span><br><span class="line">            <span class="keyword">return</span> result;                                <span class="comment">//返回受影响的行数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> DataSet <span class="title">GetDataSet</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SqlDataAdapter sqlda = <span class="keyword">new</span> SqlDataAdapter(sql, connection); <span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            DataSet ds = <span class="keyword">new</span> DataSet();                             <span class="comment">//创建数据集对象</span></span><br><span class="line">            sqlda.Fill(ds);                                         <span class="comment">//填充数据集</span></span><br><span class="line">            <span class="keyword">return</span> ds;                                              <span class="comment">//返回数据集</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> SqlDataReader <span class="title">GetDataReader</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            <span class="keyword">if</span> (connection.State == ConnectionState.Open)<span class="comment">//如果当前数据连接处于打开状态</span></span><br><span class="line">                connection.Close();  <span class="comment">//关闭数据库连接</span></span><br><span class="line">            connection.Open();<span class="comment">//打开数据库连接</span></span><br><span class="line">            SqlDataReader datareader = command.ExecuteReader();<span class="comment">//生成SqlDataReader</span></span><br><span class="line">            <span class="keyword">return</span> datareader;<span class="comment">//返回SqlDataReader</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="PublicClass"><a href="#PublicClass" class="headerlink" title="PublicClass"></a>PublicClass</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">PublicClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> loginID;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Frm-Login"><a href="#Frm-Login" class="headerlink" title="Frm_Login"></a>Frm_Login</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Frm_Login</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Frm_Login</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DataOperator dataOper = <span class="keyword">new</span> DataOperator();</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">ValidateInput</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (txtID.Text.Trim() == <span class="string">&quot;&quot;</span>)                            <span class="comment">//登录账号</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入登录账号&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtID.Focus();                                  <span class="comment">//使登录账号文本框获得鼠标焦点</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">int</span>.Parse(txtID.Text.Trim()) &gt; <span class="number">65535</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入正确的登录账号&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtID.Focus();                                  <span class="comment">//使登录账号文本框获得鼠标焦点</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (txtID.Text.Length &gt; <span class="number">5</span> &amp;&amp; txtPwd.Text.Trim() == <span class="string">&quot;&quot;</span>)<span class="comment">//密码</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入密码&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtPwd.Focus();                                 <span class="comment">//使密码文本框获得鼠标焦点</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtID_KeyPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//判断是否为数字</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">char</span>.IsDigit(e.KeyChar) || (e.KeyChar == <span class="string">&#x27;\r&#x27;</span>) || (e.KeyChar == <span class="string">&#x27;\b&#x27;</span>))</span><br><span class="line">                e.Handled = <span class="literal">false</span>;                                    <span class="comment">//在控件中显示该字符</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                e.Handled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxLogin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ValidateInput())                                        <span class="comment">//调用自定义方法验证用户输入</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> sql = <span class="string">&quot;select count(*) from tb_User where ID=&quot;</span> + <span class="built_in">int</span>.Parse(txtID.Text.Trim())</span><br><span class="line">        + <span class="string">&quot; and Pwd = &#x27;&quot;</span> + txtPwd.Text.Trim() + <span class="string">&quot;&#x27;&quot;</span>;                    <span class="comment">//定义查询SQL语句</span></span><br><span class="line">                <span class="built_in">int</span> num = dataOper.ExecSQL(sql);</span><br><span class="line">                <span class="keyword">if</span> (num == <span class="number">1</span>)                                           <span class="comment">//验证通过</span></span><br><span class="line">                &#123;</span><br><span class="line">                    PublicClass.loginID = <span class="built_in">int</span>.Parse(txtID.Text.Trim()); <span class="comment">//设置登录的用户号码</span></span><br><span class="line">                    <span class="keyword">if</span> (cboxRemember.Checked)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Remember=1 where ID=&quot;</span> +</span><br><span class="line">         <span class="built_in">int</span>.Parse(txtID.Text.Trim()));                             <span class="comment">//记住密码</span></span><br><span class="line">                        <span class="keyword">if</span> (cboxAutoLogin.Checked)</span><br><span class="line">                            dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set AutoLogin=1 where ID=&quot;</span> +</span><br><span class="line">         <span class="built_in">int</span>.Parse(txtID.Text.Trim()));                             <span class="comment">//自动登录</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Remember=0 where ID=&quot;</span> +</span><br><span class="line">         <span class="built_in">int</span>.Parse(txtID.Text.Trim()));</span><br><span class="line">                        dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set AutoLogin=0 where ID=&quot;</span> +</span><br><span class="line">         <span class="built_in">int</span>.Parse(txtID.Text.Trim()));</span><br><span class="line">                    &#125;</span><br><span class="line">                    dataOper.ExecSQLResult(<span class="string">&quot;update tb_User set Flag=1 where ID=&quot;</span> +</span><br><span class="line">         <span class="built_in">int</span>.Parse(txtID.Text.Trim()));                             <span class="comment">//设置在线状态</span></span><br><span class="line">                    Frm_Main frmMain = <span class="keyword">new</span> Frm_Main();                  <span class="comment">//创建主窗体对象</span></span><br><span class="line">                    frmMain.Show();                                     <span class="comment">//显示主窗体</span></span><br><span class="line">                    <span class="keyword">this</span>.Visible = <span class="literal">false</span>;                               <span class="comment">//隐藏登录主窗体</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;输入的用户名或密码有误！&quot;</span>, <span class="string">&quot;登录提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">         MessageBoxIcon.Error);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtPwd_KeyPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.KeyChar == <span class="string">&#x27;\r&#x27;</span>)                                  <span class="comment">//判断是否按下回车键</span></span><br><span class="line">                pboxLogin_Click(sender, e);                         <span class="comment">//使登录按钮获得鼠标焦点</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cboxRemember_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!cboxRemember.Checked)                          <span class="comment">//判断忘记密码文本框为未选中状态</span></span><br><span class="line">                cboxAutoLogin.Checked = <span class="literal">false</span>;                  <span class="comment">//自动登录设置为未选中</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtID_TextChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ValidateInput();</span><br><span class="line">            <span class="comment">//根据号码查询其密码、记住密码和自动登录字段的值</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select Pwd,Remember,AutoLogin from tb_User where ID=&quot;</span> +</span><br><span class="line">        <span class="built_in">int</span>.Parse(txtID.Text.Trim()) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            DataSet ds = dataOper.GetDataSet(sql);                      <span class="comment">//查询结果存储到数据集中</span></span><br><span class="line">            <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &gt; <span class="number">0</span>)                            <span class="comment">//判断是否存在该用户</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Convert.ToInt32(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">1</span>]) == <span class="number">1</span>)      <span class="comment">//判断是否记住密码</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cboxRemember.Checked = <span class="literal">true</span>;                        <span class="comment">//记录密码复选框选中</span></span><br><span class="line">                    txtPwd.Text = ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>].ToString();   <span class="comment">//自动输入密码</span></span><br><span class="line">                    <span class="keyword">if</span> (Convert.ToInt32(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">2</span>]) == <span class="number">1</span>)  <span class="comment">//判断是否自动登录</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        cboxAutoLogin.Checked = <span class="literal">true</span>;                   <span class="comment">//自动登录复选框选中</span></span><br><span class="line">                        pboxLogin_Click(sender, e);                     <span class="comment">//自动登录</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">llinkLinkColor_LinkClicked</span>(<span class="params"><span class="built_in">object</span> sender, LinkLabelLinkClickedEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Frm_Register frmRegister = <span class="keyword">new</span> Frm_Register();              <span class="comment">//创建申请账号对象</span></span><br><span class="line">            frmRegister.Show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxMin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.WindowState = FormWindowState.Minimized;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxClose_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Application.ExitThread();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Frm-Register"><a href="#Frm-Register" class="headerlink" title="Frm_Register"></a>Frm_Register</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Frm_Register</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Frm_Register</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        DataOperator dataOper = <span class="keyword">new</span> DataOperator();</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Register_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            cboxStar.SelectedIndex = cboxBloodType.SelectedIndex = <span class="number">0</span>;   <span class="comment">//设置星座和血型的默认值</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnRegister_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (txtNickName.Text.Trim() == <span class="string">&quot;&quot;</span> || txtNickName.Text.Length &gt; <span class="number">20</span>)<span class="comment">//验证昵称</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;昵称输入有误！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtNickName.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (txtAge.Text.Trim() == <span class="string">&quot;&quot;</span>)                                   <span class="comment">//验证年龄</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入年龄！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtAge.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!rbtnMale.Checked &amp;&amp; !rbtnFemale.Checked)                   <span class="comment">//验证性别</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请选择性别！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                lblSex.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (txtPwd.Text.Trim() == <span class="string">&quot;&quot;</span>)                                   <span class="comment">//验证密码</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入密码！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtPwd.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (txtPwdAgain.Text.Trim() == <span class="string">&quot;&quot;</span>)                              <span class="comment">//验证确认密码</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;请输入确认密码！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtPwdAgain.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (txtPwd.Text.Trim() != txtPwdAgain.Text.Trim())              <span class="comment">//验证两次密码是否一致</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;两次输入的密码不一样！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                txtPwdAgain.Focus();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">int</span> myQQNum = <span class="number">0</span>;                                                <span class="comment">//QQ号码</span></span><br><span class="line">            <span class="built_in">string</span> message;                                             <span class="comment">//弹出的消息</span></span><br><span class="line">            <span class="built_in">string</span> sex = rbtnMale.Checked ? rbtnMale.Text : rbtnFemale.Text;    <span class="comment">//获得选中的性别</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="built_in">string</span>.Format(<span class="string">&quot;insert into tb_User (Pwd, NickName, Sex, Age, Name, Star, BloodType) values(&#x27;&#123;0&#125;&#x27;, &#x27;&#123;1&#125;&#x27;, &#x27;&#123;2&#125;&#x27;,&#123;3&#125;,&#x27;&#123;4&#125;&#x27;,&#x27;&#123;5&#125;&#x27;,&#x27;&#123;6&#125;&#x27;); select @@Identity from tb_User&quot;</span>,txtPwd.Text.Trim(), txtNickName.Text.Trim(), sex, <span class="built_in">int</span>.Parse(txtAge.Text.Trim()), </span><br><span class="line">        txtName.Text.Trim(), cboxStar.Text, cboxBloodType.Text);</span><br><span class="line">            SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, DataOperator.connection);<span class="comment">//指定要执行的SQL语句</span></span><br><span class="line">            DataOperator.connection.Open();                         <span class="comment">//打开数据库连接</span></span><br><span class="line">            <span class="built_in">int</span> result = command.ExecuteNonQuery();                 <span class="comment">//执行SQL语句</span></span><br><span class="line">            <span class="keyword">if</span> (result == <span class="number">1</span>)                                            <span class="comment">//判断是否成功</span></span><br><span class="line">            &#123;</span><br><span class="line">                sql = <span class="string">&quot;select SCOPE_IDENTITY() from tb_User&quot;</span>;               <span class="comment">//查询新增加的记录的标识号</span></span><br><span class="line">                command = <span class="keyword">new</span> SqlCommand(sql, DataOperator.connection); <span class="comment">//执行查询</span></span><br><span class="line">                myQQNum = Convert.ToInt32(command.ExecuteScalar());     <span class="comment">//获取最新增加的账号</span></span><br><span class="line">                message = <span class="built_in">string</span>.Format(<span class="string">&quot;注册成功！你的MyQQ号码是&quot;</span> + myQQNum);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                message = <span class="string">&quot;注册失败，请重试！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            DataOperator.connection.Close();                            <span class="comment">//关闭数据库连接</span></span><br><span class="line">            MessageBox.Show(message, <span class="string">&quot;注册结果&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">            <span class="keyword">this</span>.Close();                                               <span class="comment">//关闭当前窗体</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCancel_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Frm-Main"><a href="#Frm-Main" class="headerlink" title="Frm_Main"></a>Frm_Main</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"><span class="keyword">using</span> System.Media;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Frm_Main</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Frm_Main</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> fromUserID;                                 <span class="comment">//消息发送者</span></span><br><span class="line">        <span class="built_in">int</span> friendHeadID;                               <span class="comment">//发消息好友的头像ID  </span></span><br><span class="line">        <span class="built_in">int</span> messageImageIndex = <span class="number">0</span>;              <span class="comment">//工具栏中的消息图标的索引</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> nickName = <span class="string">&quot;&quot;</span>;                     <span class="comment">//自己的昵称</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> strFlag = <span class="string">&quot;[离线]&quot;</span>;</span><br><span class="line">        DataOperator dataOper = <span class="keyword">new</span> DataOperator();               <span class="comment">//创建数据操作类的对象</span></span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowInfo</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> headID = <span class="number">0</span>;                                         <span class="comment">//头像索引</span></span><br><span class="line">                                                                    <span class="comment">//获取当前用户的昵称、头像</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select NickName, HeadID,Sign from tb_User where ID=&quot;</span> + PublicClass.loginID</span><br><span class="line">        + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            SqlDataReader dataReader = dataOper.GetDataReader(sql);     <span class="comment">//执行查询操作</span></span><br><span class="line">            <span class="keyword">if</span> (dataReader.Read())                                  <span class="comment">//读取查询结果</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!(dataReader[<span class="string">&quot;NickName&quot;</span>] <span class="keyword">is</span> DBNull))                <span class="comment">//判断NickName不为空</span></span><br><span class="line">                &#123;</span><br><span class="line">                    nickName = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString();       <span class="comment">//记录自己的昵称</span></span><br><span class="line">                &#125;</span><br><span class="line">                headID = Convert.ToInt32(dataReader[<span class="string">&quot;HeadID&quot;</span>]);         <span class="comment">//记录自己的头像ID</span></span><br><span class="line">                txtSign.Text = dataReader[<span class="string">&quot;Sign&quot;</span>].ToString();           <span class="comment">//显示个性签名</span></span><br><span class="line">            &#125;</span><br><span class="line">            dataReader.Close();                                     <span class="comment">//关闭读取器</span></span><br><span class="line">            DataOperator.connection.Close();                            <span class="comment">//关闭数据库连接</span></span><br><span class="line">            <span class="keyword">this</span>.Text = PublicClass.loginID.ToString();                 <span class="comment">//设置窗体标题为当前用户账号</span></span><br><span class="line">            pboxHead.Image = imglistHead.Images[headID];                <span class="comment">//显示用户头像</span></span><br><span class="line">            lblName.Text = nickName + <span class="string">&quot;(&quot;</span> + PublicClass.loginID + <span class="string">&quot;)&quot;</span>;  <span class="comment">//显示昵称及账号</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowFriendList</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            lvFriend.Items.Clear();                             <span class="comment">//清空原来的列表</span></span><br><span class="line">                                                                <span class="comment">//定义查找好友的SQL语句</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select FriendID,NickName,HeadID,Flag from tb_User,tb_Friend where tb_Friend.HostID = &quot;</span> + PublicClass.loginID + <span class="string">&quot; and tb_User.ID = tb_Friend.FriendID&quot;</span>;</span><br><span class="line">    SqlDataReader dataReader = dataOper.GetDataReader(sql); <span class="comment">//执行查询</span></span><br><span class="line">            <span class="built_in">int</span> i = lvFriend.Items.Count;                           <span class="comment">//记录添加到ListView中的项索引</span></span><br><span class="line">            <span class="keyword">while</span> (dataReader.Read())                               <span class="comment">//循环添加好友列表</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (dataReader[<span class="string">&quot;Flag&quot;</span>].ToString() == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                    strFlag = <span class="string">&quot;[离线]&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    strFlag = <span class="string">&quot;[在线]&quot;</span>;</span><br><span class="line">                <span class="built_in">string</span> strTemp = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString(); <span class="comment">//记录好友昵称</span></span><br><span class="line">                                                                    <span class="comment">//对好友昵称进行处理</span></span><br><span class="line">                <span class="built_in">string</span> strFriendName = strTemp;</span><br><span class="line">                <span class="keyword">if</span> (strTemp.Length &lt; <span class="number">9</span>)</span><br><span class="line">                    strFriendName = strTemp.PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    strFriendName = (strTemp.Substring(<span class="number">0</span>, <span class="number">2</span>) + <span class="string">&quot;...&quot;</span>).PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="comment">//向ListView中添加项，Name:好友ID，值：昵称，要显示的头像</span></span><br><span class="line">                lvFriend.Items.Add(dataReader[<span class="string">&quot;FriendID&quot;</span>].ToString(), strFriendName + strFlag,</span><br><span class="line">        (<span class="built_in">int</span>)dataReader[<span class="string">&quot;HeadID&quot;</span>]);</span><br><span class="line">                lvFriend.Items[i].Group = lvFriend.Groups[<span class="number">0</span>];       <span class="comment">//设置项的分组为我的好友</span></span><br><span class="line">                i++;                                                <span class="comment">//临时变量加1</span></span><br><span class="line">            &#125;</span><br><span class="line">            dataReader.Close();                                 <span class="comment">//关闭读取器</span></span><br><span class="line">            DataOperator.connection.Close();                        <span class="comment">//关闭数据库连接</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Main_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            tsbtnMessageReading.Image = imglistMessage.Images[<span class="number">0</span>];   <span class="comment">//工具栏的消息图标</span></span><br><span class="line">            ShowInfo();                                         <span class="comment">//显示个人信息</span></span><br><span class="line">            ShowFriendList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnInfo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Frm_EditInfo frmInfo = <span class="keyword">new</span> Frm_EditInfo();              <span class="comment">//创建个人信息窗体对象</span></span><br><span class="line">            frmInfo.Show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnSearchFriend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Frm_AddFriend frmAddFriend = <span class="keyword">new</span> Frm_AddFriend();       <span class="comment">//创建查找好友窗体对象</span></span><br><span class="line">            frmAddFriend.Show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnUpdateFriendList_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ShowFriendList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnMessageReading_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            tmAddFriend.Stop();                                 <span class="comment">//停止消息提醒定时器</span></span><br><span class="line">            messageImageIndex = <span class="number">0</span>;                              <span class="comment">//头像恢复正常</span></span><br><span class="line">                                                                <span class="comment">//显示正常的系统消息提醒图标</span></span><br><span class="line">            tsbtnMessageReading.Image = imglistMessage.Images[messageImageIndex];</span><br><span class="line">            Frm_Remind frmRemind = <span class="keyword">new</span> Frm_Remind();                <span class="comment">//创建系统消息窗体对象</span></span><br><span class="line">            frmRemind.Show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tsbtnExit_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            DialogResult result = MessageBox.Show(<span class="string">&quot;确实要退出吗？&quot;</span>, <span class="string">&quot;确认&quot;</span>, MessageBoxButtons.YesNo,</span><br><span class="line">        MessageBoxIcon.Question);                               <span class="comment">//弹出确定对话框</span></span><br><span class="line">            <span class="keyword">if</span> (result == DialogResult.Yes)                     <span class="comment">//如果单击是按钮</span></span><br><span class="line">            &#123;</span><br><span class="line">                Application.ExitThread();                           <span class="comment">//退出当前程序</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Frm_Chat frmChat;<span class="comment">//聊天窗体对象</span></span><br><span class="line">        <span class="comment">//双击打开聊天窗体</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">lvFriend_MouseDoubleClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lvFriend.SelectedItems.Count &gt; <span class="number">0</span>)<span class="comment">//判断是否有选中项</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (frmChat == <span class="literal">null</span>)<span class="comment">//判断聊天窗体对象是否为空</span></span><br><span class="line">                &#123;</span><br><span class="line">                    frmChat = <span class="keyword">new</span> Frm_Chat();<span class="comment">//创建聊天窗体对象</span></span><br><span class="line">                    <span class="comment">//记录聊天的账号</span></span><br><span class="line">                    frmChat.friendID = Convert.ToInt32(lvFriend.SelectedItems[<span class="number">0</span>].Name);</span><br><span class="line">                    frmChat.nickName = dataOper.GetDataSet(<span class="string">&quot;select NickName from tb_User where ID=&quot;</span> + frmChat.friendID).Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>].ToString();<span class="comment">//记录昵称</span></span><br><span class="line">                    frmChat.headID = Convert.ToInt32(dataOper.GetDataSet(<span class="string">&quot;select HeadID from tb_User where ID=&quot;</span> + frmChat.friendID).Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][<span class="number">0</span>]) + <span class="number">1</span>;<span class="comment">//记录头像ID</span></span><br><span class="line">                    frmChat.ShowDialog();<span class="comment">//以对话框显示聊天窗体对象</span></span><br><span class="line">                    frmChat = <span class="literal">null</span>;<span class="comment">//将聊天窗体对象设置为空</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (tmChat.Enabled == <span class="literal">true</span>)<span class="comment">//如果聊天定时器处于可用状态</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tmChat.Stop();<span class="comment">//停止聊天定时器</span></span><br><span class="line">                    lvFriend.SelectedItems[<span class="number">0</span>].ImageIndex = friendHeadID;<span class="comment">//将选中项的头像显示为正常状态</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">HasShowUser</span>(<span class="params"><span class="built_in">int</span> ID</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//是否在当前显示出的用户列表中找到了该用户</span></span><br><span class="line">            <span class="built_in">bool</span> find = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//循环lvFriend中的2个组，寻找发消息的人是否在列表中</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; lvFriend.Groups[i].Items.Count; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (Convert.ToInt32(lvFriend.Groups[i].Items[j].Name) == ID)</span><br><span class="line">                    &#123;</span><br><span class="line">                        find = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> find;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateStranger</span>(<span class="params"><span class="built_in">int</span> ID</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            lvFriend.Items.Clear();                             <span class="comment">//清空原来的列表</span></span><br><span class="line">                                                                <span class="comment">//获取指定用户的昵称及头像ID</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select NickName, HeadID from tb_User where ID=&quot;</span> + ID;</span><br><span class="line">            SqlDataReader dataReader = dataOper.GetDataReader(sql); <span class="comment">//执行查询</span></span><br><span class="line">            <span class="built_in">int</span> i = lvFriend.Items.Count;                               <span class="comment">//记录添加到ListView中的项索引</span></span><br><span class="line">            <span class="keyword">while</span> (dataReader.Read())                               <span class="comment">//循环添加陌生人列表</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> strTemp = dataReader[<span class="string">&quot;NickName&quot;</span>].ToString(); <span class="comment">//记录好友昵称</span></span><br><span class="line">                                                                    <span class="comment">//对好友昵称进行处理</span></span><br><span class="line">                <span class="built_in">string</span> strName = strTemp;</span><br><span class="line">                <span class="keyword">if</span> (strTemp.Length &lt; <span class="number">9</span>)</span><br><span class="line">                    strName = strTemp.PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    strName = (strTemp.Substring(<span class="number">0</span>, <span class="number">2</span>) + <span class="string">&quot;...&quot;</span>).PadLeft(<span class="number">9</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="comment">//向ListView中添加项，Name:用户ID，值：昵称，要显示的头像</span></span><br><span class="line">                lvFriend.Items.Add(fromUserID.ToString(), strName, (<span class="built_in">int</span>)dataReader[<span class="string">&quot;HeadID&quot;</span>]);</span><br><span class="line">                lvFriend.Items[i].Group = lvFriend.Groups[<span class="number">1</span>];       <span class="comment">//设置项的分组为陌生人</span></span><br><span class="line">                i++;                                                <span class="comment">//临时变量加1</span></span><br><span class="line">            &#125;</span><br><span class="line">            dataReader.Close();                                 <span class="comment">//关闭读取器</span></span><br><span class="line">            DataOperator.connection.Close();                        <span class="comment">//关闭数据库连接</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmMessage_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lvFriend.SelectedItems.Count &gt; <span class="number">0</span>)               <span class="comment">//判断好友列表中有选中项</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (lvFriend.SelectedItems[<span class="number">0</span>].Group == lvFriend.Groups[<span class="number">0</span>])<span class="comment">//如果选中项属于第1组</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tsMenuDel.Visible = <span class="literal">true</span>;                   <span class="comment">//显示删除菜单</span></span><br><span class="line">                    tsMenuAdd.Visible = <span class="literal">false</span>;                  <span class="comment">//隐藏添加好友菜单</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//如果选中项属于第2组</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (lvFriend.SelectedItems[<span class="number">0</span>].Group == lvFriend.Groups[<span class="number">1</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    tsMenuDel.Visible = <span class="literal">false</span>;                  <span class="comment">//隐藏删除菜单</span></span><br><span class="line">                    tsMenuAdd.Visible = <span class="literal">true</span>;                   <span class="comment">//显示添加好友菜单</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">int</span> messageTypeID = <span class="number">1</span>;                      <span class="comment">//消息类型</span></span><br><span class="line">            <span class="built_in">int</span> messageState = <span class="number">1</span>;                       <span class="comment">//消息状态</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select top 1 FromUserID, MessageTypeID, MessageState from tb_Message where ToUserID = &quot;</span> + PublicClass.loginID + <span class="string">&quot; and MessageState = 0&quot;</span>;<span class="comment">//查找未读消息对应的好友ID</span></span><br><span class="line">            SqlDataReader dataReader = dataOper.GetDataReader(sql);     <span class="comment">//执行查询</span></span><br><span class="line">            <span class="keyword">if</span> (dataReader.Read())                      <span class="comment">//读取未读消息</span></span><br><span class="line">            &#123;</span><br><span class="line">                fromUserID = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;FromUserID&quot;</span>];         <span class="comment">//记录消息发送者</span></span><br><span class="line">                messageTypeID = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;MessageTypeID&quot;</span>];       <span class="comment">//记录消息类型</span></span><br><span class="line">                messageState = (<span class="built_in">int</span>)dataReader[<span class="string">&quot;MessageState&quot;</span>];         <span class="comment">//记录消息状态</span></span><br><span class="line">            &#125;</span><br><span class="line">            dataReader.Close();                         <span class="comment">//关闭读取器</span></span><br><span class="line">            DataOperator.connection.Close();            <span class="comment">//关闭数据库连接</span></span><br><span class="line">            <span class="comment">//消息有两种类型：聊天消息、添加好友消息</span></span><br><span class="line">            <span class="comment">//判断消息类型，如果是添加好友消息，启动消息提醒定时器</span></span><br><span class="line">            <span class="keyword">if</span> (messageTypeID == <span class="number">2</span> &amp;&amp; messageState == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                SoundPlayer player = <span class="keyword">new</span> SoundPlayer(<span class="string">&quot;system.wav&quot;</span>);     <span class="comment">//系统消息提示</span></span><br><span class="line">                player.Play();                          <span class="comment">//播放指定声音文件</span></span><br><span class="line">                tmAddFriend.Start();                        <span class="comment">//启动消息提醒定时器</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果是聊天消息，启动聊天定时器，使好友头像闪烁</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (messageTypeID == <span class="number">1</span> &amp;&amp; messageState == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sql = <span class="string">&quot;select HeadID from tb_User where ID=&quot;</span> + fromUserID;<span class="comment">//获取消息发送者的ID</span></span><br><span class="line">                friendHeadID = dataOper.ExecSQL(sql);     <span class="comment">//设置发消息好友的头像ID</span></span><br><span class="line">                                                         <span class="comment">//如果发消息的人不在好友列表中，将其添加到陌生人列表中</span></span><br><span class="line">                <span class="keyword">if</span> (!HasShowUser(fromUserID))</span><br><span class="line">                &#123;</span><br><span class="line">                    UpdateStranger(fromUserID);                 <span class="comment">//显示陌生人列表</span></span><br><span class="line">                &#125;</span><br><span class="line">                SoundPlayer player = <span class="keyword">new</span> SoundPlayer(<span class="string">&quot;msg.wav&quot;</span>);   <span class="comment">//聊天消息提示</span></span><br><span class="line">                player.Play();                          <span class="comment">//播放指定声音文件</span></span><br><span class="line">                tmChat.Start();                         <span class="comment">//启动聊天定时器</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmAddFriend_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            messageImageIndex = messageImageIndex == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;         <span class="comment">//实时获取系统消息图像索引</span></span><br><span class="line">                                                                        <span class="comment">//工具栏中显示消息读取状态图像</span></span><br><span class="line">            tsbtnMessageReading.Image = imglistMessage.Images[messageImageIndex];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmChat_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//循环好友列表两个组中的每项，找到消息发送者，使其头像闪烁</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; lvFriend.Groups[i].Items.Count; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//判断是否为消息发送者</span></span><br><span class="line">                    <span class="keyword">if</span> (Convert.ToInt32(lvFriend.Groups[i].Items[j].Name) == fromUserID)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (frmChat != <span class="literal">null</span> &amp;&amp; frmChat.friendID != <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">//直接显示头像，避免闪烁效果</span></span><br><span class="line">                            lvFriend.SelectedItems[<span class="number">0</span>].ImageIndex = friendHeadID;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (lvFriend.Groups[i].Items[j].ImageIndex &lt; <span class="number">100</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">//索引为100的图片是一个空白图片，为了实现闪烁效果</span></span><br><span class="line">                                lvFriend.Groups[i].Items[j].ImageIndex = <span class="number">100</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">//要显示的消息发送者头像索引</span></span><br><span class="line">                                lvFriend.Groups[i].Items[j].ImageIndex = friendHeadID;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxMin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.WindowState = FormWindowState.Minimized;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxClose_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Application.ExitThread();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Frm-Chat"><a href="#Frm-Chat" class="headerlink" title="Frm_Chat"></a>Frm_Chat</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SunTalk</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Frm_Chat</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Frm_Chat</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> friendID = <span class="number">0</span>;                        <span class="comment">//当前聊天的好友号码</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> nickName;                     <span class="comment">//当前聊天的好友昵称</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> headID;                      <span class="comment">//当前聊天的好友头像ID</span></span><br><span class="line">        DataOperator dataOper = <span class="keyword">new</span> DataOperator();         <span class="comment">//创建数据操作类的对象</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Chat_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;与\&quot;&quot;</span> + nickName + <span class="string">&quot;\&quot;聊天中&quot;</span>;                 <span class="comment">//设置窗体标题</span></span><br><span class="line">            pboxHead.Image = imglistHead.Images[headID];                <span class="comment">//设置好友头像</span></span><br><span class="line">            lblFriend.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125;(&#123;1&#125;)&quot;</span>, nickName, friendID);     <span class="comment">//设置好友名称</span></span><br><span class="line">            rtxtMessage.ScrollToCaret();                        <span class="comment">//滚动条总在最下方</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetMessage</span>(<span class="params"><span class="built_in">string</span> messageID</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span>[] messageIDs = messageID.Split(<span class="string">&#x27;_&#x27;</span>);                     <span class="comment">//分割出每个消息ID</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;update tb_Message set MessageState=1 where ID=&quot;</span>;  <span class="comment">//定义更新SQL语句</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> id <span class="keyword">in</span> messageIDs)                               <span class="comment">//遍历所有消息ID</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (id != <span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    sql += id;                                              <span class="comment">//设置更新条件</span></span><br><span class="line">                    <span class="built_in">int</span> result = dataOper.ExecSQLResult(sql);               <span class="comment">//执行数据表更新操作</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowMessage</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> messageID = <span class="string">&quot;&quot;</span>;                                      <span class="comment">//消息ID组成的字符串</span></span><br><span class="line">            <span class="built_in">string</span> message;                                             <span class="comment">//消息内容</span></span><br><span class="line">            <span class="built_in">string</span> messageTime;                                         <span class="comment">//消息发送时间</span></span><br><span class="line">                                                                        <span class="comment">//读取消息的SQL语句</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select ID,Message,MessageTime from tb_Message where FromUserID=&quot;</span> + friendID</span><br><span class="line">        + <span class="string">&quot; and ToUserID=&quot;</span> + PublicClass.loginID + <span class="string">&quot; and MessageTypeID=1 and MessageState=0&quot;</span>;</span><br><span class="line">            SqlDataReader datareader = dataOper.GetDataReader(sql);</span><br><span class="line">            <span class="comment">//循环将消息添加到窗体上</span></span><br><span class="line">            <span class="keyword">while</span> (datareader.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                messageID += datareader[<span class="string">&quot;ID&quot;</span>] + <span class="string">&quot;_&quot;</span>;                        <span class="comment">//消息ID</span></span><br><span class="line">                message = datareader[<span class="string">&quot;Message&quot;</span>].ToString();                 <span class="comment">//消息</span></span><br><span class="line">                                                                            <span class="comment">//消息的发送时间</span></span><br><span class="line">                messageTime = Convert.ToDateTime(datareader[<span class="string">&quot;MessageTime&quot;</span>]).ToString();</span><br><span class="line">                <span class="comment">//设置消息显示格式</span></span><br><span class="line">                rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + nickName + <span class="string">&quot;  &quot;</span> + messageTime + <span class="string">&quot;\n  &quot;</span> + message + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            DataOperator.connection.Close();                                <span class="comment">//关闭数据库连接</span></span><br><span class="line">            <span class="keyword">if</span> (messageID.Length &gt; <span class="number">1</span>)                                       <span class="comment">//判断是否存在消息</span></span><br><span class="line">            &#123;</span><br><span class="line">                messageID.Remove(messageID.Length - <span class="number">1</span>);                     <span class="comment">//去掉最后的连接符</span></span><br><span class="line">                SetMessage(messageID);                                      <span class="comment">//将显示的消息设置为已读</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">tmShowMessage_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ShowMessage();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (rtxtChat.Text.Trim() == <span class="string">&quot;&quot;</span>)                 <span class="comment">//不能发送空消息</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;不能发送空消息！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                                                <span class="comment">//发送消息</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//此处的MessageTypeId为1，表示聊天消息；MessageState为0，表示消息未读</span></span><br><span class="line">                <span class="built_in">string</span> sql = <span class="built_in">string</span>.Format(</span><br><span class="line">                    <span class="string">&quot;INSERT INTO tb_Message (FromUserID, ToUserID, Message, MessageTypeID, MessageState) VALUES(&#123;0&#125;,&#123;1&#125;,&#x27;&#123;2&#125;&#x27;,&#123;3&#125;,&#123;4&#125;)&quot;</span>,PublicClass.loginID, friendID, rtxtChat.Text, </span><br><span class="line">        <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">int</span> result = dataOper.ExecSQLResult(sql);       <span class="comment">//调用方法实现消息插入操作</span></span><br><span class="line">                rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + Frm_Main.nickName + <span class="string">&quot;  &quot;</span> + DateTime.Now + <span class="string">&quot;\n  &quot;</span> +</span><br><span class="line">        rtxtChat.Text + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (result != <span class="number">1</span>)                                <span class="comment">//如果返回结果不是1，表示没有发送成功</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;消息发送失败，请重新发送！&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK,</span><br><span class="line">        MessageBoxIcon.Information);</span><br><span class="line">                &#125;</span><br><span class="line">                rtxtChat.Text = <span class="string">&quot;&quot;</span>;                         <span class="comment">//清空消息</span></span><br><span class="line">                rtxtChat.Focus();                               <span class="comment">//定位鼠标输入焦点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">rtxtChat_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.KeyValue == <span class="number">13</span>)                  <span class="comment">//当同时按下Ctrl和Enter时，发送消息</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Handled = <span class="literal">true</span>;</span><br><span class="line">                btnSend_Click(<span class="keyword">this</span>, <span class="literal">null</span>);                      <span class="comment">//发送消息</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxInfo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            rtxtMessage.Clear();                                <span class="comment">//清空聊天信息显示窗口</span></span><br><span class="line">            <span class="built_in">string</span> messageID = <span class="string">&quot;&quot;</span>;                          <span class="comment">//消息ID组成的字符串</span></span><br><span class="line">            <span class="built_in">string</span> message;                                 <span class="comment">//消息内容</span></span><br><span class="line">            <span class="built_in">string</span> messageTime;                             <span class="comment">//消息发送时间</span></span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select ID,NickName,Message,MessageTime from v_Message where (FromUserID=&quot;</span></span><br><span class="line">        + friendID + <span class="string">&quot; and ToUserID=&quot;</span> + PublicClass.loginID + <span class="string">&quot;) or (FromUserID=&quot;</span> + PublicClass.loginID</span><br><span class="line">        + <span class="string">&quot; and ToUserID=&quot;</span> + friendID + <span class="string">&quot;) order by MessageTime asc &quot;</span>;<span class="comment">//读取消息的SQL语句</span></span><br><span class="line">            SqlDataReader datareader = dataOper.GetDataReader(sql);</span><br><span class="line">            <span class="keyword">while</span> (datareader.Read())                           <span class="comment">//循环将消息添加到窗体上</span></span><br><span class="line">            &#123;</span><br><span class="line">                messageID += datareader[<span class="string">&quot;ID&quot;</span>] + <span class="string">&quot;_&quot;</span>;            <span class="comment">//消息ID</span></span><br><span class="line">                message = datareader[<span class="string">&quot;Message&quot;</span>].ToString();     <span class="comment">//消息</span></span><br><span class="line">                                                                <span class="comment">//消息的发送时间</span></span><br><span class="line">                messageTime = Convert.ToDateTime(datareader[<span class="string">&quot;MessageTime&quot;</span>]).ToString();</span><br><span class="line">                rtxtMessage.Text += <span class="string">&quot;\n&quot;</span> + datareader[<span class="string">&quot;NickName&quot;</span>] + <span class="string">&quot;  &quot;</span> + messageTime + <span class="string">&quot;\n  &quot;</span> + message</span><br><span class="line">        + <span class="string">&quot;&quot;</span>;                                               <span class="comment">//设置消息显示格式</span></span><br><span class="line">            &#125;</span><br><span class="line">            DataOperator.connection.Close();                    <span class="comment">//关闭数据库连接</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxMin_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.WindowState = FormWindowState.Minimized;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pboxClose_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>&emsp;&emsp;还有一些空窗体，项目自带的程序等。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>&emsp;&emsp;终于写好了，也算是跟着书本做了下来，算是有些收货，但是对于某些实现代码还需多多分析才能掌握。</p><p>&emsp;&emsp;本博客目的只是记录一下练习过程，没有书本上写的那么详细，本程序并不完美，可以说很不完美，但我们正不是因为不完美才不断学习的吗，这是我们的动力。</p><p>&emsp;&emsp;文章中可能会存在少许错误，还望各位批评指正！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;C#程序设计实战练习项目，做一个类似于QQ的软件，程序参考明日科技出版的《C#项目开发入门实战》第一章：Q友，做自己</summary>
      
    
    
    
    <category term="C#学习笔记" scheme="https://sunguoqi.com/categories/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="C#" scheme="https://sunguoqi.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>抖音火爆表白小程序（C#语言实现）</title>
    <link href="https://sunguoqi.com/posts/34712.html"/>
    <id>https://sunguoqi.com/posts/34712.html</id>
    <published>2021-04-25T02:00:00.000Z</published>
    <updated>2022-01-10T17:14:42.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://i.loli.net/2021/04/06/kFRXTx1rJ4giWPt.jpg"></p><p>&emsp;&emsp;好看的皮囊千篇一律，有趣的灵魂万里挑一。最近在学习<code>C#</code>编程语言，接触到了<code>winform</code>，记得曾经在抖音上看到过这样一个小程序，觉得很有意思，就用C#语言实现了下，实现起来很简单（可以说没有任何技术含量）程序执行后效果如下。</p><p><strong>视频演示</strong>    <a href="https://www.bilibili.com/video/BV1wK4y1m7Li">传送门</a></p><p><img src="https://i.loli.net/2021/04/06/KSJUpT9hB18brQo.jpg"></p><p><strong>GIF动图演示</strong></p><p><img src="https://i.loli.net/2021/04/06/BHqTQpEhu43v5is.gif"></p><h1 id="第一步：创建项目"><a href="#第一步：创建项目" class="headerlink" title="第一步：创建项目"></a>第一步：创建项目</h1><h2 id="创建windows窗体应用程序"><a href="#创建windows窗体应用程序" class="headerlink" title="创建windows窗体应用程序"></a>创建windows窗体应用程序</h2><p><img src="https://i.loli.net/2021/04/06/6FukSEpcgzM91NC.jpg"></p><h2 id="更改项目名称和储存位置"><a href="#更改项目名称和储存位置" class="headerlink" title="更改项目名称和储存位置"></a>更改项目名称和储存位置</h2><p><img src="https://i.loli.net/2021/04/06/nHuJzqDai5xe7py.jpg"></p><h2 id="选择合适的-NET框架"><a href="#选择合适的-NET框架" class="headerlink" title="选择合适的.NET框架"></a>选择合适的.NET框架</h2><p><img src="https://i.loli.net/2021/04/06/2vgpqA3mejz1MJo.jpg"></p><h2 id="项目创建完成"><a href="#项目创建完成" class="headerlink" title="项目创建完成"></a>项目创建完成</h2><p><img src="https://i.loli.net/2021/04/06/XQhbITYBW1VpDNA.jpg"></p><h1 id="第二步：设计窗体"><a href="#第二步：设计窗体" class="headerlink" title="第二步：设计窗体"></a>第二步：设计窗体</h1><p>&emsp;&emsp;通过左侧工具箱拖拽绘制窗口，<code>Label</code>显示文本，<code>pictureBox</code>显示图片，<code>Button</code>按钮等，各控件可在右侧修改属性，包括标题栏内容，程序图标，文本的字体大小内容，图片大小内容，按钮的文字等。</p><h2 id="添加控件"><a href="#添加控件" class="headerlink" title="添加控件"></a>添加控件</h2><p><img src="https://i.loli.net/2021/04/06/1prfXCqONSxHMde.jpg"></p><h2 id="更改属性"><a href="#更改属性" class="headerlink" title="更改属性"></a>更改属性</h2><p><img src="https://i.loli.net/2021/04/06/wfHl1YymBzLVMXC.jpg"></p><p><strong>图片加载方法</strong></p><p><img src="https://i.loli.net/2021/04/06/TqLfPDUJw34ORuj.jpg"></p><h2 id="更改窗体属性"><a href="#更改窗体属性" class="headerlink" title="更改窗体属性"></a>更改窗体属性</h2><p><img src="https://i.loli.net/2021/04/06/khjLyUORg9CoZup.jpg"></p><h1 id="第三步：添加事件"><a href="#第三步：添加事件" class="headerlink" title="第三步：添加事件"></a>第三步：添加事件</h1><h2 id="添加-好呀-事件"><a href="#添加-好呀-事件" class="headerlink" title="添加[好呀]事件"></a>添加[好呀]事件</h2><p>双击[好呀]按钮，进入点击事件代码编辑区，添加如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MessageBox.Show(<span class="string">&quot;我就知道你会同意的&quot;</span>, <span class="string">&quot;^v^&quot;</span>);</span><br><span class="line">MessageBox.Show(<span class="string">&quot;恭喜你拥有一名可爱的男朋友~~&quot;</span>, <span class="string">&quot;^v^&quot;</span>);</span><br><span class="line">MessageBox.Show(<span class="string">&quot;🤍🤍爱你，么么哒🤍🤍&quot;</span>, <span class="string">&quot;^v^&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.Dispose();</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/06/7kJhabmqSYLc6Xe.jpg"></p><h2 id="添加-算了吧-事件"><a href="#添加-算了吧-事件" class="headerlink" title="添加[算了吧]事件"></a>添加[算了吧]事件</h2><p>选中<code>[算了吧]</code>按钮，点击右侧属性栏中的<code>事件</code>图标，在下面找到<code>MouseEnter</code>事件，双击<code>MouseEnter</code>事件添加如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> x = <span class="keyword">this</span>.ClientSize.Width - button2.Width;</span><br><span class="line"><span class="built_in">int</span> y = <span class="keyword">this</span>.ClientSize.Height - button2.Height;</span><br><span class="line">Random r = <span class="keyword">new</span> Random();</span><br><span class="line">button2.Location = <span class="keyword">new</span> Point(r.Next(<span class="number">0</span>, x + <span class="number">1</span>), r.Next(<span class="number">0</span>, y + <span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/06/wapbrnIfLVc6N4h.jpg"></p><p><img src="https://i.loli.net/2021/04/06/74XsS1AcjPqRVyf.jpg"></p><h2 id="禁用关闭窗口"><a href="#禁用关闭窗口" class="headerlink" title="禁用关闭窗口"></a>禁用关闭窗口</h2><p>选中<code>form1</code>窗体，点击右侧属性栏上面的<code>事件</code>图标，在下面找到<code>FormClosing</code>事件，然后双击<code>FormClosing</code>事件添加如下代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MessageBox.Show(<span class="string">&quot;不回答不能退出哦！&quot;</span>, <span class="string">&quot;(╯_╰)╭&quot;</span>);</span><br><span class="line">e.Cancel = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/06/wF1AagxITuphvQd.jpg"></p><p><img src="https://i.loli.net/2021/04/06/lNaSXvzHsJ7FTuM.jpg"></p><h1 id="第四步：调试生成打包程序"><a href="#第四步：调试生成打包程序" class="headerlink" title="第四步：调试生成打包程序"></a>第四步：调试生成打包程序</h1><h2 id="调试（F5-CTRL-F5）"><a href="#调试（F5-CTRL-F5）" class="headerlink" title="调试（F5/CTRL+F5）"></a>调试（F5/CTRL+F5）</h2><p>调试程序发现<code>算了吧</code>按钮在移动时会被其他控件遮挡（这和你一开始拖控件的顺序有关，如果出现这种情况，我们可以右键将控件置于顶层）</p><p><img src="https://i.loli.net/2021/04/06/gD7nq8BG1Nmcsdl.jpg"></p><p><img src="https://i.loli.net/2021/04/06/6GCIqwKTRLvekMa.jpg"></p><h2 id="更改应用程序（生成的-exe）图标"><a href="#更改应用程序（生成的-exe）图标" class="headerlink" title="更改应用程序（生成的.exe）图标"></a>更改应用程序（生成的.exe）图标</h2><p>右键项目解决方案方案，更改图标，图标格式应为<code>.ico</code>格式</p><p><img src="https://i.loli.net/2021/04/06/KantpPAvQbmw754.jpg"></p><h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>选择<code>release</code>生成发布版本，<code>debug</code>版本内容包含调试代码，<code>release</code>版本是代码优化后的发布版本</p><p><img src="https://i.loli.net/2021/04/06/CxqjAihSPc7U94b.jpg"></p><p>右键项目解决方案，生成程序！</p><p><img src="https://i.loli.net/2021/04/06/HaBMV1qeTy5URZo.jpg"></p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>生成之后，在你项目储存的位置的相应目录下会出现如下内容，我们可以双击运行<code>Love.exe</code>这就是最终成果。</p><p><img src="https://i.loli.net/2021/04/06/Ji8GSWmLVj3gwRX.jpg"></p><p>如果我们要将此程序发送给小伙伴，必须将此目录下的所有文件打包发送，并且如果小伙伴的电脑上没有<code>.NET5.0</code>框架，运行程序会提示安装框架。当然如果你一开始就使用的是低版本的<code>.NET</code>框架，则发送给小伙伴时，小伙伴则不需要安装低版本框架。</p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>&emsp;&emsp;这个程序说实话一点技术含量没有，唯一值得说道的就是按钮移动不让用户点击的想法和算法。</p><p>&emsp;&emsp;源代码放在了github上，记得素质三连，<a href="https://github.com/sun0225SUN/code.git">传送门</a></p><p><img src="https://i.loli.net/2021/04/06/qK1j65LVnkOUorB.jpg"></p>]]></content>
    
    
    <summary type="html">小姐姐，我喜欢你很久了，做我女朋友好不好！</summary>
    
    
    
    <category term="经验技巧" scheme="https://sunguoqi.com/categories/%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="表白程序" scheme="https://sunguoqi.com/tags/%E8%A1%A8%E7%99%BD%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
